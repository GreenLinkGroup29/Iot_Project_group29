[
    {
        "id": "74c1dd29ef8e2a61",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c5274bf24d423544",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "27bad0f4270d7145",
        "type": "tab",
        "label": "Publish_Values",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f64319cf3c018b6a",
        "type": "tab",
        "label": "Flow 4",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "38688ee62825c7f2",
        "type": "tab",
        "label": "Publish_Button",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "01aa4acf33d0f3ef",
        "type": "tab",
        "label": "Thinkspeak",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "260ad674.9fb312",
        "type": "tab",
        "label": "Template UI Node",
        "disabled": true,
        "info": ""
    },
    {
        "id": "aad1167d98f500c9",
        "type": "tab",
        "label": "Flow 6",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1f9338748b841b41",
        "type": "tab",
        "label": "template_ui_2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "11fe5226.c1852e",
        "type": "tab",
        "label": "prove_di_cose",
        "disabled": true,
        "info": ""
    },
    {
        "id": "62c0832d13afa530",
        "type": "tab",
        "label": "Prova Template",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7b79b126a68737ec",
        "type": "tab",
        "label": "Flow 3",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "95a9d6f4f0841f0e",
        "type": "tab",
        "label": "PROVA ALE",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "10b0b6531ca7c2e3",
        "type": "tab",
        "label": "Project",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "82cdab8279634e0c",
        "type": "tab",
        "label": "PROVA MATTE",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "aa987a913fb76799",
        "type": "tab",
        "label": "Prova user/greenhouse/dev",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ca6e52d66bf110ed",
        "type": "tab",
        "label": "Prova strategy",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "5f920548ca8e9a53",
        "type": "tab",
        "label": "Prova plot",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "91b413e493b8fc15",
        "type": "tab",
        "label": "Prova home",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9c4100fe204ec867",
        "type": "tab",
        "label": "VALE PAGE",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "dfa5f5222d797092",
        "type": "tab",
        "label": "IoT Smart Greenhouse",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "38de44c016649ef6",
        "type": "tab",
        "label": "Flow 5",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "5bef06aa09334957",
        "type": "tab",
        "label": "Flow 5",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "a6d151784d60722d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e7353509ebd1d05b",
        "type": "ui_tab",
        "name": "Statistics",
        "icon": "fa-bar-chart",
        "order": 24,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "147670862068cd2c",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "33e4fbb5bfe4e045",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "cc359027d22b36d9",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1e1cb426.2b813c",
        "type": "ui_group",
        "name": "Create new Greenhouse",
        "tab": "da91e2e4.019118",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "703824db.9d74a4",
        "type": "ui_group",
        "name": "Create new user",
        "tab": "f0ebfb9d4cfd055e",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "da91e2e4.019118",
        "type": "ui_tab",
        "name": "GreenHouse Management",
        "icon": "fa-tree",
        "order": 22,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "19865aa4ee22de6a",
        "type": "ui_group",
        "name": "COSE",
        "tab": "da91e2e4.019118",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b03bb86e.990f38",
        "type": "ui_group",
        "name": "Default",
        "tab": "bc78a8d.fba5b58",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "bc78a8d.fba5b58",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "573e0e4a.d065e",
        "type": "ui_group",
        "name": "Create new Device",
        "tab": "f6bdb457d7d7e3d5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc359027d22b36d9",
        "type": "ui_tab",
        "name": "Tab2",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f0ebfb9d4cfd055e",
        "type": "ui_tab",
        "name": "User Management",
        "icon": "fa-user-o",
        "order": 21,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f6bdb457d7d7e3d5",
        "type": "ui_tab",
        "name": "Device Management",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a33bdf9dd6f9fc5e",
        "type": "ui_group",
        "name": "Update Device",
        "tab": "f6bdb457d7d7e3d5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ad3bf1a8d6e4b4e",
        "type": "ui_group",
        "name": "Update User",
        "tab": "f0ebfb9d4cfd055e",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1bdc91ca727af5e",
        "type": "ui_group",
        "name": "device2",
        "tab": "f6bdb457d7d7e3d5",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "20842e5a71073f9b",
        "type": "ui_tab",
        "name": "user2",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dcebba6522a7ec86",
        "type": "ui_group",
        "name": "Update Greenhouse",
        "tab": "da91e2e4.019118",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4f2304aa464fc7e",
        "type": "ui_tab",
        "name": "Strategy",
        "icon": "fa-cog",
        "order": 23,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "76c6a1aae3778d09",
        "type": "ui_group",
        "name": "strategy1",
        "tab": "e4f2304aa464fc7e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4bb79b476e72e39",
        "type": "ui_group",
        "name": "strategy2",
        "tab": "e4f2304aa464fc7e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "95435e3ee33195ef",
        "type": "ui_group",
        "name": "user3",
        "tab": "f0ebfb9d4cfd055e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "45c8320c4de80a23",
        "type": "ui_group",
        "name": "Strategy",
        "tab": "e4f2304aa464fc7e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d9e45e.bcd50ba",
        "type": "ui_group",
        "name": "Devices",
        "tab": "280bf26d5ab778ab",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "280bf26d5ab778ab",
        "type": "ui_tab",
        "name": "GreenHouse and Devices",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "05f5e31d0c024ebe",
        "type": "ui_group",
        "name": "GreenHouse",
        "tab": "280bf26d5ab778ab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "edded25c257e2620",
        "type": "ui_group",
        "name": "Delete User",
        "tab": "f0ebfb9d4cfd055e",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ca67b85ec7cd5f7",
        "type": "ui_group",
        "name": "Delete Greenhouse",
        "tab": "da91e2e4.019118",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "19aa5479d361a25a",
        "type": "ui_group",
        "name": "Delete Device",
        "tab": "f6bdb457d7d7e3d5",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c54cc5d01a793531",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "e7353509ebd1d05b",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "64d6c8b6.5961f8",
        "type": "ui_group",
        "name": "Irrigation",
        "tab": "e4f2304aa464fc7e",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c1f6d1a.402d84",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4165b9c9.8aae64",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "6c1f6d1a.402d84",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "799cdfe7.8d36e4",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9d727495b0d451c0",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "6c1f6d1a.402d84",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bfddf490e5e77379",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "6c1f6d1a.402d84",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d64a239f.976f48",
        "type": "ui_group",
        "name": "Group",
        "tab": "1167d6b8.8bdf41",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1167d6b8.8bdf41",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "45e15c7d.2e8a4",
        "type": "ui_group",
        "name": "Group",
        "tab": "be0a0c9c.6e37b8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "be0a0c9c.6e37b8",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "53cf504.e9555b",
        "type": "ui_group",
        "name": "test",
        "tab": "52aaa596.768b7c",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "52aaa596.768b7c",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 10
    },
    {
        "id": "69fcb6b2.2d17fc",
        "type": "ui_group",
        "name": "Group",
        "tab": "dcb11c80.74e2f8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dcb11c80.74e2f8",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81bb97d2.1ac9e",
        "type": "ui_group",
        "name": "Group",
        "tab": "2cf94960.b7b5ae",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2cf94960.b7b5ae",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "73ebe738.264f6c",
        "type": "ui_group",
        "name": "Group",
        "tab": "d0f75c0a.110b48",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d0f75c0a.110b48",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b5e5229.1455b8",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "2a9b9c23.6de5c6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2a9b9c23.6de5c6",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3eb2fcbd.f72a44",
        "type": "ui_group",
        "name": "Group",
        "tab": "2bb69b72.7b30d8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2bb69b72.7b30d8",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1c642b8.2b2d68",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "c95e75dd.6ed1e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c95e75dd.6ed1e8",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c69e4d2c.e41c9",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "b1d4d6ba.4e59b8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b1d4d6ba.4e59b8",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 17,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a94ec2ca.b7a26",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d28404e7.9ecb68",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d28404e7.9ecb68",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 18,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "694cf7e7.ae2e7",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "fa6f27c9.d0e308",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fa6f27c9.d0e308",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5265b699c4c5e667",
        "type": "ui_group",
        "name": "Default",
        "tab": "e7353509ebd1d05b",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0301ba55f59e74c0",
        "type": "ui_group",
        "name": "Irrigation",
        "tab": "e7353509ebd1d05b",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc105ece16ae7e53",
        "type": "ui_tab",
        "name": "Home",
        "icon": "fa-home",
        "order": 20,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0e274ee81497bf82",
        "type": "ui_group",
        "name": "Welcome1",
        "tab": "cc105ece16ae7e53",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "54a9d42f1566907a",
        "type": "ui_group",
        "name": "Informations",
        "tab": "cc105ece16ae7e53",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb7721423ea2a939",
        "type": "ui_group",
        "name": "statistics",
        "tab": "cc105ece16ae7e53",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "043782d90857d581",
        "type": "ui_group",
        "name": "Initial",
        "tab": "e4f2304aa464fc7e",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce41a2620db9ea6d",
        "type": "ui_group",
        "name": "Weather",
        "tab": "e4f2304aa464fc7e",
        "order": 6,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65fe65488352d21f",
        "type": "ui_group",
        "name": "Environment",
        "tab": "e4f2304aa464fc7e",
        "order": 7,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e42281d9419547e2",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "e7353509ebd1d05b",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c46c4a3.e97b5",
        "type": "ui_group",
        "name": "User and Car Info Group",
        "tab": "53012f6c.5cb2f8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "53012f6c.5cb2f8",
        "type": "ui_tab",
        "name": "User and Car Info Tab",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8c8736a9.e2dc8",
        "type": "ui_group",
        "name": "Group",
        "tab": "6a1edbe8.8d4504",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6a1edbe8.8d4504",
        "type": "ui_tab",
        "name": "Tab",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c2648e41.1d0df",
        "type": "ui_group",
        "name": "Default",
        "tab": "d5be29f8.437d68",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d5be29f8.437d68",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "74f46a3280ccbb23",
        "type": "ui_group",
        "name": "Devices",
        "tab": "d5be29f8.437d68",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e478586ba7d1447",
        "type": "ui_group",
        "name": "Default",
        "tab": "bc78a8d.fba5b58",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4030566d0fe92597",
        "type": "ui_group",
        "name": "Window",
        "tab": "e7353509ebd1d05b",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eabf404e758227c8",
        "type": "inject",
        "z": "74c1dd29ef8e2a61",
        "name": "inject node",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "20b07ab6fdd75fcd"
            ]
        ]
    },
    {
        "id": "20b07ab6fdd75fcd",
        "type": "python3-function",
        "z": "74c1dd29ef8e2a61",
        "name": "",
        "func": "import random\nmsg['payload'] = {\"number\":random.randint(1,15)}\nreturn msg",
        "outputs": 1,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "437d89d562ca836e"
            ]
        ]
    },
    {
        "id": "437d89d562ca836e",
        "type": "debug",
        "z": "74c1dd29ef8e2a61",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "0cb0082f12ea7015",
        "type": "mqtt in",
        "z": "c5274bf24d423544",
        "name": "subscriber",
        "topic": "matteo/prova",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "d46e5760586ff843",
                "2655e9b4e442db08"
            ]
        ]
    },
    {
        "id": "38cd2215a82a649f",
        "type": "debug",
        "z": "c5274bf24d423544",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "a852eeeca9fe948e",
        "type": "mqtt out",
        "z": "c5274bf24d423544",
        "name": "publish random values",
        "topic": "matteo/prova",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a6d151784d60722d",
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "97db18304d424ecc",
        "type": "inject",
        "z": "c5274bf24d423544",
        "name": "inject node",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "399d8d6268d43248"
            ]
        ]
    },
    {
        "id": "399d8d6268d43248",
        "type": "python3-function",
        "z": "c5274bf24d423544",
        "name": "",
        "func": "import random\nmsg['payload'] = {\n    'bn':'p2IoT/1/1',\n    'e':\n        [{\n          'n':'status',\n          'v':random.random(),\n          't':str(msg[\"payload\"]),\n          'unit':'bool'\n        }]\n}\nreturn msg",
        "outputs": 1,
        "x": 400,
        "y": 80,
        "wires": [
            [
                "a852eeeca9fe948e"
            ]
        ]
    },
    {
        "id": "bc4771476818e87f",
        "type": "ui_text",
        "z": "c5274bf24d423544",
        "group": "33e4fbb5bfe4e045",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Led status",
        "label": "The led is",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "d46e5760586ff843",
        "type": "python3-function",
        "z": "c5274bf24d423544",
        "name": "",
        "func": "\nif msg['payload']['e'][0]['v']>0.5:\n    msg['v'] = \"on\"\nelse:\n    msg['v'] = \"off\"\nreturn msg",
        "outputs": 1,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "38cd2215a82a649f",
                "bc4771476818e87f"
            ]
        ]
    },
    {
        "id": "2655e9b4e442db08",
        "type": "python3-function",
        "z": "c5274bf24d423544",
        "name": "",
        "func": "msg['payload'] = msg['payload']['e'][0]['v']\nreturn msg['payload']",
        "outputs": 1,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "ceafbed18b129046"
            ]
        ]
    },
    {
        "id": "ceafbed18b129046",
        "type": "ui_gauge",
        "z": "c5274bf24d423544",
        "name": "",
        "group": "33e4fbb5bfe4e045",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value|number}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 490,
        "y": 560,
        "wires": []
    },
    {
        "id": "877289806d68d255",
        "type": "mqtt out",
        "z": "27bad0f4270d7145",
        "name": "",
        "topic": "IoT_project/noderedtry",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a6d151784d60722d",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "f789ca692d6dbd13",
        "type": "inject",
        "z": "27bad0f4270d7145",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "9b9d88ddaf9db9e0"
            ]
        ]
    },
    {
        "id": "28ae7c47d9800665",
        "type": "function",
        "z": "27bad0f4270d7145",
        "name": "",
        "func": "msg.payload=[{sensor:\"Temperature\",value:msg.payload.Temp},{sensor:\"Humidity\",value:msg.payload.Hum}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 260,
        "wires": [
            [
                "877289806d68d255",
                "1c65f3f0bf74300a"
            ]
        ]
    },
    {
        "id": "9b9d88ddaf9db9e0",
        "type": "ui_template",
        "z": "27bad0f4270d7145",
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n\n</style>\n<div class=\"main\">\n<p>Temperature: <input type=\"number\" name=\"MyTemperature\" step=\"0.1\" ng-model=\"Temp\"></p>\n<p>Humidity: <input type=\"number\" name=\"MyHumidity\" step=\"0.1\" ng-model=\"Hum\"></p>\n<md-button ng-click=\"send({payload: {Temp, Hum}})\">\n    Send values\n</md-button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "28ae7c47d9800665"
            ]
        ]
    },
    {
        "id": "caeaafc91983aa33",
        "type": "delay",
        "z": "27bad0f4270d7145",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 110,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1c65f3f0bf74300a",
        "type": "debug",
        "z": "27bad0f4270d7145",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "d5420eb21748190a",
        "type": "mqtt out",
        "z": "38688ee62825c7f2",
        "name": "",
        "topic": "IoT_project/noderedtry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a6d151784d60722d",
        "x": 820,
        "y": 200,
        "wires": []
    },
    {
        "id": "8fe51009bd813690",
        "type": "inject",
        "z": "38688ee62825c7f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "190e74960ea9d359"
            ]
        ]
    },
    {
        "id": "190e74960ea9d359",
        "type": "function",
        "z": "38688ee62825c7f2",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "998c7a3322ead868"
            ]
        ]
    },
    {
        "id": "998c7a3322ead868",
        "type": "ui_template",
        "z": "38688ee62825c7f2",
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:400px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr ng-repeat=\"y in msg.payload\">\n    <td>{{y.sensor}}</td><td>{{y.battery}}</td><td>{{y.temp}}</td>\n    <td><input type=\"button\" ng-click=\"send({payload:$index,topic:'ok'})\">OK </td>\n\n\n</tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "d5420eb21748190a",
                "05b09f0e8d79c7c9"
            ]
        ]
    },
    {
        "id": "05b09f0e8d79c7c9",
        "type": "delay",
        "z": "38688ee62825c7f2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "190e74960ea9d359"
            ]
        ]
    },
    {
        "id": "23a3fe397135a88c",
        "type": "debug",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 20,
        "wires": []
    },
    {
        "id": "ed406c2bde402e43",
        "type": "http request",
        "z": "01aa4acf33d0f3ef",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "b272d1db62efd036",
                "fe39f2c45dde3025"
            ]
        ]
    },
    {
        "id": "7cd67d533d5c7209",
        "type": "inject",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "ed406c2bde402e43"
            ]
        ]
    },
    {
        "id": "b272d1db62efd036",
        "type": "python3-function",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    #data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    #output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "9e4e6d2ffc056c53",
                "23a3fe397135a88c"
            ]
        ]
    },
    {
        "id": "7541e807711fa2e1",
        "type": "comment",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "info": "[{\n\"series\": [\"A\", \"B\", \"C\"],\n\"data\": [\n    [{ \"x\": 1504029632890, \"y\": 5 },\n     { \"x\": 1504029636001, \"y\": 4 },\n     { \"x\": 1504029638656, \"y\": 2 }\n    ],\n    [{ \"x\": 1504029633514, \"y\": 6 },\n     { \"x\": 1504029636622, \"y\": 7 },\n     { \"x\": 1504029639539, \"y\": 6 }\n    ],\n    [{ \"x\": 1504029634400, \"y\": 7 },\n     { \"x\": 1504029637959, \"y\": 7 },\n     { \"x\": 1504029640317, \"y\": 7 }\n    ]\n],\n\"labels\": [\"\"]\n}]",
        "x": 320,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e4e6d2ffc056c53",
        "type": "ui_chart",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "92becee995ff0a84",
        "type": "debug",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 280,
        "wires": []
    },
    {
        "id": "fe39f2c45dde3025",
        "type": "python3-function",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "func": "import json\nimport time\n\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    #data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    #output[0]['data'][0].append(data_t)\n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "be7c93f76052d2ec",
                "92becee995ff0a84"
            ]
        ]
    },
    {
        "id": "be7c93f76052d2ec",
        "type": "ui_chart",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1904551f7aa38142",
        "type": "debug",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 620,
        "wires": []
    },
    {
        "id": "00946e7c9f4415d7",
        "type": "python3-function",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\", \"Hum\"],\n\"data\": [[],[]],\n\"labels\": [\"Tem\", \"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 290,
        "y": 680,
        "wires": [
            [
                "ca93863340304104",
                "1904551f7aa38142"
            ]
        ]
    },
    {
        "id": "ca93863340304104",
        "type": "ui_chart",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "45e8e44760b0b166",
        "type": "comment",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "info": "This flow is the original one",
        "x": 300,
        "y": 580,
        "wires": []
    },
    {
        "id": "dd1c1e825b16c5e7",
        "type": "python3-function",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "func": "import json\nimport time\n\noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n\n    output[0]['data'][0].append(data_h)\n    \n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "947529ad0462a83e",
                "ed62856bf1e43899"
            ]
        ]
    },
    {
        "id": "947529ad0462a83e",
        "type": "debug",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "ed62856bf1e43899",
        "type": "ui_chart",
        "z": "01aa4acf33d0f3ef",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "a5249d33.d1c21",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "5d009c29.b0d6ac"
            ]
        ]
    },
    {
        "id": "5e50912d.b5f65",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "5d009c29.b0d6ac",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "group": "1e1cb426.2b813c",
        "name": "",
        "order": 10,
        "width": "6",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload\">The Payload is:</div>\n<div ng-bind-html=\"msg.topic\"> The topic is: </div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "5e50912d.b5f65"
            ]
        ]
    },
    {
        "id": "dd544d76.0099b8",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "5d009c29.b0d6ac"
            ]
        ]
    },
    {
        "id": "1530108a.07b66f",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "6eea8aa3.6d496c"
            ]
        ]
    },
    {
        "id": "dccf74c2.a0b2f8",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "6eea8aa3.6d496c"
            ]
        ]
    },
    {
        "id": "446effd3.2e1ef",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "d527b28c.b26488",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "d": true,
        "group": "703824db.9d74a4",
        "name": "",
        "order": 18,
        "width": "5",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "446effd3.2e1ef"
            ]
        ]
    },
    {
        "id": "65c06d08.ad4c64",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test3",
        "info": "",
        "x": 450,
        "y": 400,
        "wires": []
    },
    {
        "id": "ff2e943c.268be",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test4",
        "info": "",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "6eea8aa3.6d496c",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "group": "703824db.9d74a4",
        "name": "",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<div>{{msg.payload}}</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "446effd3.2e1ef"
            ]
        ]
    },
    {
        "id": "ea286a3d.1b4778",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "7b099bd8.4cb954"
            ]
        ]
    },
    {
        "id": "e432da9c.2a9198",
        "type": "template",
        "z": "260ad674.9fb312",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr><td>{{payload.0.sensor}}</td><td>{{payload.0.battery}}</td><td>{{payload.0.temp}}</td></tr>\n<tr><td>{{payload.1.sensor}}</td><td>{{payload.1.battery}}</td><td>{{payload.1.temp}}</td></tr>\n</table>",
        "output": "str",
        "x": 360,
        "y": 460,
        "wires": [
            [
                "178ee0e2.8d681f",
                "fb5112a4.75d798"
            ]
        ]
    },
    {
        "id": "178ee0e2.8d681f",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "d": true,
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:600px;\n    width:200px;\n    background:lightblue;\n        \n}\n</style>\n\n<div class=\"main\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ed63f6e0.7e1c08",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 660,
        "wires": [
            [
                "f547133a.bc1bd8"
            ]
        ]
    },
    {
        "id": "90df3a81.800e",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "d": true,
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:200px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr><td>{{msg.payload[0].sensor}}</td><td>{{msg.payload[0].battery}}</td><td>{{msg.payload[0].temp}}</td></tr>\n<tr><td>{{msg.payload[1].sensor}}</td><td>{{msg.payload[1].battery}}</td><td>{{msg.payload[1].temp}}</td></tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "7b099bd8.4cb954",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 480,
        "wires": [
            [
                "e432da9c.2a9198",
                "fb5112a4.75d798"
            ]
        ]
    },
    {
        "id": "fb5112a4.75d798",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 560,
        "wires": []
    },
    {
        "id": "f547133a.bc1bd8",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "90df3a81.800e"
            ]
        ]
    },
    {
        "id": "d440b9c614c510df",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 1740,
        "wires": []
    },
    {
        "id": "444440b5eae84c2e",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "var data=msg.payload;\nflow.set(\"data\",data);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 643.4833374023438,
        "y": 1671.5167236328125,
        "wires": [
            []
        ]
    },
    {
        "id": "31d5edc846c00c24",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n.main\n{\n    height:400px;\n    width:400px;\n    background:lightblue;\n        \n}\n    \n</style>\n\nTest\n<div class= \"main\">\n\n    <table>\n        <tr>\n        <th>Battery</th></tr>\n             <tr ng-repeat=\"y in msg.payload\">\n     <td>Value: <input type=\"text\" ng-model=\"y.value\" ng-click=\"send (msg)\" >&nbsp;</td>\n    <td> <button ng-click=\"send(msg)\" >OK</button> </td>\n    </tr>\n        \n    </table>\n\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "444440b5eae84c2e",
                "d440b9c614c510df"
            ]
        ]
    },
    {
        "id": "39a9192e526c0fa3",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "var data=flow.get(\"data\") || [];\nmsg.payload=data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 1620,
        "wires": [
            [
                "31d5edc846c00c24"
            ]
        ]
    },
    {
        "id": "4e267feb028920c2",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 123.48333740234375,
        "y": 1611.5167236328125,
        "wires": [
            [
                "39a9192e526c0fa3"
            ]
        ]
    },
    {
        "id": "302a93ce4a2f60c6",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 530,
        "y": 1000,
        "wires": []
    },
    {
        "id": "98c109166c02036f",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div>\n<p > The name is: </p>\n<p ng-bind-html=\"name\"></p>\n<p>Name: <input type=\"text\" ng-model=\"name\"></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 900,
        "wires": [
            [
                "302a93ce4a2f60c6"
            ]
        ]
    },
    {
        "id": "ed1ad5be3111a8f5",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "98c109166c02036f"
            ]
        ]
    },
    {
        "id": "a282acdbea4d15b5",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "98c109166c02036f"
            ]
        ]
    },
    {
        "id": "60d89febe76c0381",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "266b29a9e5dd51d2"
            ]
        ]
    },
    {
        "id": "266b29a9e5dd51d2",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "d": true,
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n.main\n{\n    height:200px;\n    width:200px;\n    background:lightblue;\n        \n}\n    \n</style>\n\n\n<div class= \"main\" ></div>\n<div>\n<p ng-bind-html=\"name\"></p>\n<p>Name: <input type=\"text\" ng-model=\"name\" ng-change=\"send ({payload:name})\" ></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "e4336e4b5fba4f24"
            ]
        ]
    },
    {
        "id": "4f64408aea2ce28d",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 150,
        "y": 1180,
        "wires": [
            [
                "266b29a9e5dd51d2"
            ]
        ]
    },
    {
        "id": "e4336e4b5fba4f24",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 1200,
        "wires": []
    },
    {
        "id": "518840d4bef3068b",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test5",
        "info": "",
        "x": 470,
        "y": 740,
        "wires": []
    },
    {
        "id": "33fd264c7f978738",
        "type": "debug",
        "z": "260ad674.9fb312",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 1500,
        "wires": []
    },
    {
        "id": "560e5f19d4d3f1bb",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "6f90e49773a08b98"
            ]
        ]
    },
    {
        "id": "fc94e1768dc092af",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test6",
        "info": "",
        "x": 390,
        "y": 840,
        "wires": []
    },
    {
        "id": "4f5774b667c5c47f",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "2d33570b8a005160"
            ]
        ]
    },
    {
        "id": "2d33570b8a005160",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "fb8967ad46164048"
            ]
        ]
    },
    {
        "id": "fb8967ad46164048",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "d": true,
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:200px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr ng-repeat=\"y in msg.payload\">\n    <td>{{y.sensor}}</td><td>{{y.battery}}</td><td>{{y.temp}}</td>\n\n\n</tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e9f44eed85a83806",
        "type": "inject",
        "z": "260ad674.9fb312",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 1700,
        "wires": [
            [
                "2eb52c47c79aa347"
            ]
        ]
    },
    {
        "id": "2eb52c47c79aa347",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "set data",
        "func": "var data=[{value:0},{value:0}];\nflow.set(\"data\",data);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "6f90e49773a08b98",
        "type": "function",
        "z": "260ad674.9fb312",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "bb08a80d1509528d"
            ]
        ]
    },
    {
        "id": "bb08a80d1509528d",
        "type": "ui_template",
        "z": "260ad674.9fb312",
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:400px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr ng-repeat=\"y in msg.payload\">\n    <td>{{y.sensor}}</td><td>{{y.battery}}</td><td>{{y.temp}}</td>\n    <td><input type=\"button\" ng-click=\"send({payload:$index,topic:'ok'})\">OK </td>\n\n\n</tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 1340,
        "wires": [
            [
                "33fd264c7f978738",
                "6fd201089ce728c7"
            ]
        ]
    },
    {
        "id": "2835fba3d33f3736",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test7",
        "info": "",
        "x": 350,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f4095a858babd397",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test8",
        "info": "",
        "x": 370,
        "y": 1260,
        "wires": []
    },
    {
        "id": "59f480a81e672a7f",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "test9",
        "info": "",
        "x": 453.8666687011719,
        "y": 1639.2833251953125,
        "wires": []
    },
    {
        "id": "6fd201089ce728c7",
        "type": "delay",
        "z": "260ad674.9fb312",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 410,
        "y": 1480,
        "wires": [
            [
                "6f90e49773a08b98"
            ]
        ]
    },
    {
        "id": "f7033fffce48eca3",
        "type": "comment",
        "z": "260ad674.9fb312",
        "name": "",
        "info": "this delay need because in this way the button is regenerated (this means that is possible to click it several times). If i delete this node after a click the botton disappears ",
        "x": 280,
        "y": 1520,
        "wires": []
    },
    {
        "id": "306dedff42cee4e2",
        "type": "debug",
        "z": "1f9338748b841b41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 650,
        "y": 1060,
        "wires": []
    },
    {
        "id": "52193ebf099707aa",
        "type": "function",
        "z": "1f9338748b841b41",
        "name": "",
        "func": "var data=msg.payload;\nflow.set(\"data\",data);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 623.4833374023438,
        "y": 991.5167236328125,
        "wires": [
            []
        ]
    },
    {
        "id": "8c4f5e8cce37f744",
        "type": "ui_template",
        "z": "1f9338748b841b41",
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n.main\n{\n    height:400px;\n    width:400px;\n    background:lightblue;\n        \n}\n    \n</style>\n\nTest\n<div class= \"main\">\n\n    <table>\n        <tr>\n        <th>Battery</th></tr>\n             <tr ng-repeat=\"y in msg.payload\">\n     <td>Value: <input type=\"text\" ng-model=\"y.value\" ng-click=\"send (msg)\" >&nbsp;</td>\n    <td> <button ng-click=\"send(msg)\" >OK</button> </td>\n    </tr>\n        \n    </table>\n\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "52193ebf099707aa",
                "306dedff42cee4e2"
            ]
        ]
    },
    {
        "id": "0b03d5f6b10e1e19",
        "type": "function",
        "z": "1f9338748b841b41",
        "name": "",
        "func": "var data=flow.get(\"data\") || [];\nmsg.payload=data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 940,
        "wires": [
            [
                "8c4f5e8cce37f744"
            ]
        ]
    },
    {
        "id": "e0e2508e90336b76",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 103.48333740234375,
        "y": 931.5167236328125,
        "wires": [
            [
                "0b03d5f6b10e1e19"
            ]
        ]
    },
    {
        "id": "90a967b3d9cfb5d1",
        "type": "debug",
        "z": "1f9338748b841b41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "95ed74cf053b7436",
        "type": "ui_template",
        "z": "1f9338748b841b41",
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div>\n<p > The name is: </p>\n<p ng-bind-html=\"name\"></p>\n<p>Name: <input type=\"text\" ng-model=\"name\"></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 220,
        "wires": [
            [
                "90a967b3d9cfb5d1"
            ]
        ]
    },
    {
        "id": "ef49fabecd532ca2",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "95ed74cf053b7436"
            ]
        ]
    },
    {
        "id": "9d2e4e93c0b44c10",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "95ed74cf053b7436"
            ]
        ]
    },
    {
        "id": "647ef5ef9467da01",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "d70d38cafbf6649a"
            ]
        ]
    },
    {
        "id": "d70d38cafbf6649a",
        "type": "ui_template",
        "z": "1f9338748b841b41",
        "d": true,
        "group": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n.main\n{\n    height:200px;\n    width:200px;\n    background:lightblue;\n        \n}\n    \n</style>\n\n\n<div class= \"main\" ></div>\n<div>\n<p ng-bind-html=\"name\"></p>\n<p>Name: <input type=\"text\" ng-model=\"name\" ng-change=\"send ({payload:name})\" ></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "55fb130204edc3b9"
            ]
        ]
    },
    {
        "id": "f7568de650e458bd",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "testopic",
        "payload": "test",
        "payloadType": "str",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "d70d38cafbf6649a"
            ]
        ]
    },
    {
        "id": "55fb130204edc3b9",
        "type": "debug",
        "z": "1f9338748b841b41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 550,
        "y": 520,
        "wires": []
    },
    {
        "id": "263cf7bdfc67944b",
        "type": "comment",
        "z": "1f9338748b841b41",
        "name": "test5",
        "info": "",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "dab53d824ba7790c",
        "type": "debug",
        "z": "1f9338748b841b41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 820,
        "wires": []
    },
    {
        "id": "984768910dd7258e",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "7914a4f2abb6e31c"
            ]
        ]
    },
    {
        "id": "3badcd1aa1e36396",
        "type": "comment",
        "z": "1f9338748b841b41",
        "name": "test6",
        "info": "",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "c4cd5dd2d6569ea5",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "d3613778c1de0978"
            ]
        ]
    },
    {
        "id": "d3613778c1de0978",
        "type": "function",
        "z": "1f9338748b841b41",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "662974260e159eda"
            ]
        ]
    },
    {
        "id": "662974260e159eda",
        "type": "ui_template",
        "z": "1f9338748b841b41",
        "d": true,
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:200px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr ng-repeat=\"y in msg.payload\">\n    <td>{{y.sensor}}</td><td>{{y.battery}}</td><td>{{y.temp}}</td>\n\n\n</tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "03f3a6ae91e409f8",
        "type": "inject",
        "z": "1f9338748b841b41",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 1020,
        "wires": [
            [
                "3922724d4d45d8a0"
            ]
        ]
    },
    {
        "id": "3922724d4d45d8a0",
        "type": "function",
        "z": "1f9338748b841b41",
        "name": "set data",
        "func": "var data=[{value:0},{value:0}];\nflow.set(\"data\",data);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "7914a4f2abb6e31c",
        "type": "function",
        "z": "1f9338748b841b41",
        "name": "",
        "func": "msg.payload=[{sensor:\"sensor1\",battery:12.5,temp:21},{sensor:\"sensor2\",battery:13.5,temp:24}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 680,
        "wires": [
            [
                "c4c87586f40ccaaf"
            ]
        ]
    },
    {
        "id": "c4c87586f40ccaaf",
        "type": "ui_template",
        "z": "1f9338748b841b41",
        "d": true,
        "group": "",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.main\n{\n    height:400px;\n    width:400px;\n    background:lightblue;\n        \n}\n</style>\n<div class=\"main\">\n    <table>\n    <tr><th>Sensor</th><th>Battery</th><th>Temperature</th></tr>\n     <tr ng-repeat=\"y in msg.payload\">\n    <td>{{y.sensor}}</td><td>{{y.battery}}</td><td>{{y.temp}}</td>\n    <td><input type=\"button\" ng-click=\"send({payload:$index,topic:'ok'})\">OK </td>\n\n\n</tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "dab53d824ba7790c",
                "ad20afc643859e3a"
            ]
        ]
    },
    {
        "id": "c16bd54649734ffb",
        "type": "comment",
        "z": "1f9338748b841b41",
        "name": "test7",
        "info": "",
        "x": 330,
        "y": 380,
        "wires": []
    },
    {
        "id": "6993d48f05c756b4",
        "type": "comment",
        "z": "1f9338748b841b41",
        "name": "test8",
        "info": "",
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "705bd40e2e39ae45",
        "type": "comment",
        "z": "1f9338748b841b41",
        "name": "test9",
        "info": "",
        "x": 433.8666687011719,
        "y": 959.2833251953125,
        "wires": []
    },
    {
        "id": "ad20afc643859e3a",
        "type": "delay",
        "z": "1f9338748b841b41",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "7914a4f2abb6e31c"
            ]
        ]
    },
    {
        "id": "d006b7491789a1c4",
        "type": "ui_template",
        "z": "11fe5226.c1852e",
        "d": true,
        "group": "",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "5",
        "format": "<html>\n<body>\n<style>\n.main\n\n</style>\n\n\n<form ng-app=\"\" name=\"myForm\">\n    Email:\n    <input type=\"number\" name=\"myAddress\" step=\"0.1\" ng-model=\"text\">\n    <span ng-show=\"myForm.myAddress.$error.email\">Not a valid e-mail address</span>\n</form>\n\n</body>  \n</html>\n  \n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b54512e74c55ca6b",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "d006b7491789a1c4"
            ]
        ]
    },
    {
        "id": "588d4517fdcd7125",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "535ee341a21f1b0e",
        "type": "mqtt in",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "588d4517fdcd7125"
            ]
        ]
    },
    {
        "id": "c9a1e329cc4aa5b4",
        "type": "python3-function",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "func": "msg['action'] = \"subscribe\"\nmsg['topic']= \"IoT_project/noderedtry2\"\nreturn msg",
        "outputs": 1,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "535ee341a21f1b0e"
            ]
        ]
    },
    {
        "id": "e422533d1cb352e8",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "action",
                "v": "subscribe",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "IoT_project/noderedtry2",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "642c3840e581258a"
            ]
        ]
    },
    {
        "id": "f60723b067bd9089",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "c9a1e329cc4aa5b4"
            ]
        ]
    },
    {
        "id": "642c3840e581258a",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 260,
        "wires": []
    },
    {
        "id": "c3b97399a1ee6812",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "192.168.1.84:8080",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 600,
        "wires": [
            [
                "f5abfd221936f483"
            ]
        ]
    },
    {
        "id": "723eaf0679ae2f9a",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "c3b97399a1ee6812"
            ]
        ]
    },
    {
        "id": "f5abfd221936f483",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 600,
        "wires": []
    },
    {
        "id": "0c81ebf2ab85b645",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "name": "",
        "info": "per l indirizzi IP dovremo mettere quello del catalog che quidni sarà l indirizzo IP del pC nel quale sarà presente il catalougue\n- guardare lo script Lab2.1 al fondo sono state apportate delle modifiche a rest affinchè potesse funzionare al di fuori di local host",
        "x": 400,
        "y": 680,
        "wires": []
    },
    {
        "id": "e1f312419ec9aed0",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "name": "",
        "info": "il web riceve con rest i topics e vari parametri epoi invia i dati tramite mqtt",
        "x": 600,
        "y": 680,
        "wires": []
    },
    {
        "id": "1ed24f32a3a259f2",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "bcc1390d61ddbc5d",
                "684dcee2e4959775"
            ]
        ]
    },
    {
        "id": "bcc1390d61ddbc5d",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "2de8b5a47063f8a5"
            ]
        ]
    },
    {
        "id": "2de8b5a47063f8a5",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager?id={{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "97618c711faf1294"
            ]
        ]
    },
    {
        "id": "97618c711faf1294",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 820,
        "wires": []
    },
    {
        "id": "ac49fb34ed60cc46",
        "type": "change",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 920,
        "wires": [
            [
                "073f1577d76b84ce",
                "2de8b5a47063f8a5"
            ]
        ]
    },
    {
        "id": "073f1577d76b84ce",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 980,
        "wires": []
    },
    {
        "id": "b36aa30.3a7276",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 1120,
        "wires": [
            [
                "1ef9987c.956c78"
            ]
        ]
    },
    {
        "id": "11167f67.5d5031",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "cars on craigslist",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "086792b067b6a9bd"
            ]
        ]
    },
    {
        "id": "70154cd4.de1444",
        "type": "change",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "value",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "b36aa30.3a7276"
            ]
        ]
    },
    {
        "id": "1ef9987c.956c78",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 910,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e450430c4c53437f",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1260,
        "wires": []
    },
    {
        "id": "82291dabcecddddc",
        "type": "python3-function",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "func": "\npayload = \"http://192.168.1.84:8080/user_manager\"\nmsg['value'] = payload\nreturn msg\n",
        "outputs": 1,
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "70154cd4.de1444"
            ]
        ]
    },
    {
        "id": "684dcee2e4959775",
        "type": "ui_template",
        "z": "11fe5226.c1852e",
        "d": true,
        "group": "703824db.9d74a4",
        "name": "",
        "order": 20,
        "width": 0,
        "height": 0,
        "format": "<div class= \"main\" ></div>\n<div>\n<p ng-bind-html=\"name\"></p>\n<p>Name: <input type=\"number\" ng-model=\"id\" ></p>\n<p><button ng-click=\"send ({payload:id})\">OK</button></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 980,
        "wires": [
            [
                "ac49fb34ed60cc46"
            ]
        ]
    },
    {
        "id": "0ac5c5c7e516b329",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1340,
        "wires": []
    },
    {
        "id": "086792b067b6a9bd",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 250,
        "y": 1340,
        "wires": [
            [
                "a228a4ed36736cc4"
            ]
        ]
    },
    {
        "id": "a228a4ed36736cc4",
        "type": "change",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1340,
        "wires": [
            [
                "ae3066b6dd78c092"
            ]
        ]
    },
    {
        "id": "ae3066b6dd78c092",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager?id={{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 1340,
        "wires": [
            [
                "0ac5c5c7e516b329"
            ]
        ]
    },
    {
        "id": "b25546369bc0c380",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 1520,
        "wires": [
            [
                "a0c450e36f57fc19"
            ]
        ]
    },
    {
        "id": "e79c79ceac043614",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "?id=1",
        "payloadType": "str",
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "bcbd3cb70cbcc5d3"
            ]
        ]
    },
    {
        "id": "bcbd3cb70cbcc5d3",
        "type": "change",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1540,
        "wires": [
            [
                "b25546369bc0c380"
            ]
        ]
    },
    {
        "id": "a0c450e36f57fc19",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 850,
        "y": 1500,
        "wires": []
    },
    {
        "id": "294a920ae4f7f772",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 330,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "149a6c8c996ce436",
        "type": "python3-function",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 510,
        "y": 1660,
        "wires": [
            [
                "ebc4cd888201fdd9"
            ]
        ]
    },
    {
        "id": "d38d66e99306c2b0",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 1660,
        "wires": [
            [
                "334e7b46bdc1be76"
            ]
        ]
    },
    {
        "id": "ebc4cd888201fdd9",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 810,
        "y": 1660,
        "wires": [
            [
                "6b88e6910e045471"
            ]
        ]
    },
    {
        "id": "6b88e6910e045471",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 1660,
        "wires": []
    },
    {
        "id": "334e7b46bdc1be76",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 290,
        "y": 1660,
        "wires": [
            [
                "149a6c8c996ce436"
            ]
        ]
    },
    {
        "id": "59d03b240d08a463",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 1800,
        "wires": [
            [
                "0fef05632b71d8b3"
            ]
        ]
    },
    {
        "id": "596d426d5bda4cb8",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "38697a797f39c673"
            ]
        ]
    },
    {
        "id": "38697a797f39c673",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1800,
        "wires": []
    },
    {
        "id": "0fef05632b71d8b3",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 350,
        "y": 1800,
        "wires": [
            [
                "596d426d5bda4cb8"
            ]
        ]
    },
    {
        "id": "333c09283140b13b",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "info": "Fare un Get di un utente a scelta",
        "x": 320,
        "y": 1700,
        "wires": []
    },
    {
        "id": "f4b838340469ea28",
        "type": "python3-function",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 510,
        "y": 1940,
        "wires": [
            [
                "e68b965f866a359d"
            ]
        ]
    },
    {
        "id": "b365c6b21b1b3b5d",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 1940,
        "wires": [
            [
                "7d8da6f0880d0706"
            ]
        ]
    },
    {
        "id": "e68b965f866a359d",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 750,
        "y": 1940,
        "wires": [
            [
                "722f2325a76c2852"
            ]
        ]
    },
    {
        "id": "722f2325a76c2852",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1940,
        "wires": []
    },
    {
        "id": "2a0eb35a28e67a34",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "info": "Fare un PUT di un utente a scelta",
        "x": 380,
        "y": 2000,
        "wires": []
    },
    {
        "id": "665ccb1cae4555c6",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "info": "Fare un post di un nuovo utente",
        "x": 360,
        "y": 1840,
        "wires": []
    },
    {
        "id": "7d8da6f0880d0706",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 290,
        "y": 1940,
        "wires": [
            [
                "f4b838340469ea28"
            ]
        ]
    },
    {
        "id": "2f789052dd2c63bb",
        "type": "python3-function",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 510,
        "y": 2100,
        "wires": [
            [
                "42d8ccd0ff804f12"
            ]
        ]
    },
    {
        "id": "9065121cc552bb0e",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 2100,
        "wires": [
            [
                "0a1b455d36dcddfa"
            ]
        ]
    },
    {
        "id": "42d8ccd0ff804f12",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 2100,
        "wires": [
            [
                "e581e4a25dc990eb"
            ]
        ]
    },
    {
        "id": "e581e4a25dc990eb",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2100,
        "wires": []
    },
    {
        "id": "0a1b455d36dcddfa",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 290,
        "y": 2100,
        "wires": [
            [
                "2f789052dd2c63bb"
            ]
        ]
    },
    {
        "id": "7e038dbc7fadbc2e",
        "type": "comment",
        "z": "11fe5226.c1852e",
        "d": true,
        "name": "",
        "info": "Fare un DELETE di un utente a scelta",
        "x": 380,
        "y": 2160,
        "wires": []
    },
    {
        "id": "24cb6e476a919441",
        "type": "inject",
        "z": "11fe5226.c1852e",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 2460,
        "wires": [
            [
                "798192b20f594e69"
            ]
        ]
    },
    {
        "id": "bcf39da49a1289c2",
        "type": "http request",
        "z": "11fe5226.c1852e",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/greenhouse_manager?id=0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 2460,
        "wires": [
            [
                "a669ac2069bd47dc"
            ]
        ]
    },
    {
        "id": "a669ac2069bd47dc",
        "type": "debug",
        "z": "11fe5226.c1852e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2460,
        "wires": []
    },
    {
        "id": "798192b20f594e69",
        "type": "ui_form",
        "z": "11fe5226.c1852e",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "greenHouseName": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 370,
        "y": 2460,
        "wires": [
            [
                "bcf39da49a1289c2"
            ]
        ]
    },
    {
        "id": "f3f56de083879cdd",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "Select the desired Temperature",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Temperature",
                "value": "sensore1",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "sensore1": ""
        },
        "payload": "",
        "submit": "Select",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 510,
        "y": 2220,
        "wires": [
            [
                "60f99ede45dec384"
            ]
        ]
    },
    {
        "id": "60f99ede45dec384",
        "type": "mqtt out",
        "z": "62c0832d13afa530",
        "name": "",
        "topic": "IoT_project/noderedtry",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a6d151784d60722d",
        "x": 860,
        "y": 2220,
        "wires": []
    },
    {
        "id": "1b8edda35618f170",
        "type": "ui_switch",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 2300,
        "wires": [
            [
                "1e71e19d36429ff3",
                "8168e1e2f11454f8"
            ]
        ]
    },
    {
        "id": "1e71e19d36429ff3",
        "type": "ui_text",
        "z": "62c0832d13afa530",
        "group": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "you select: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 650,
        "y": 2300,
        "wires": []
    },
    {
        "id": "8168e1e2f11454f8",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "if msg['payload'] == True:\n    print(\"ok\")\n    return msg\nelif msg['payload'] == False:\n    print(\"no\")\n    msg['payload']",
        "outputs": 1,
        "x": 630,
        "y": 2380,
        "wires": [
            [
                "e0490a5d915b28b4"
            ]
        ]
    },
    {
        "id": "e0490a5d915b28b4",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2380,
        "wires": []
    },
    {
        "id": "7d9d517745542270",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2000,
        "wires": []
    },
    {
        "id": "893fc073b4608d51",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 450,
        "y": 2060,
        "wires": [
            [
                "b531b4d2c99bcca7"
            ]
        ]
    },
    {
        "id": "84c5dfde1fa89ecd",
        "type": "inject",
        "z": "62c0832d13afa530",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2060,
        "wires": [
            [
                "893fc073b4608d51",
                "f3f56de083879cdd",
                "1b8edda35618f170"
            ]
        ]
    },
    {
        "id": "b531b4d2c99bcca7",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    #data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    #output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 2060,
        "wires": [
            [
                "90fec16f8eb11b65",
                "7d9d517745542270"
            ]
        ]
    },
    {
        "id": "90fec16f8eb11b65",
        "type": "ui_chart",
        "z": "62c0832d13afa530",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "b8aa1b4b25972000",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "Select the desired Humidity",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Temperature",
                "value": "sensore1",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "sensore1": ""
        },
        "payload": "",
        "submit": "Select",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 500,
        "y": 2640,
        "wires": [
            [
                "86c99b74d9dcff7c"
            ]
        ]
    },
    {
        "id": "86c99b74d9dcff7c",
        "type": "mqtt out",
        "z": "62c0832d13afa530",
        "name": "",
        "topic": "IoT_project/noderedtry",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a6d151784d60722d",
        "x": 860,
        "y": 2640,
        "wires": []
    },
    {
        "id": "fb5076b12e3ac70c",
        "type": "ui_switch",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 2720,
        "wires": [
            [
                "90c0c1a197875489",
                "d3e34539af2dfd6e"
            ]
        ]
    },
    {
        "id": "90c0c1a197875489",
        "type": "ui_text",
        "z": "62c0832d13afa530",
        "group": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "you select: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 2720,
        "wires": []
    },
    {
        "id": "d3e34539af2dfd6e",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "if msg['payload'] == True:\n    print(\"ok\")\n    return msg\nelif msg['payload'] == False:\n    print(\"no\")\n    msg['payload']",
        "outputs": 1,
        "x": 610,
        "y": 2800,
        "wires": [
            [
                "8bd138a901cbde28"
            ]
        ]
    },
    {
        "id": "8bd138a901cbde28",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 2800,
        "wires": []
    },
    {
        "id": "36ca96fb21d40eef",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2420,
        "wires": []
    },
    {
        "id": "d7638f71204f9bdd",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 450,
        "y": 2480,
        "wires": [
            [
                "49dbc39388262587"
            ]
        ]
    },
    {
        "id": "6c4ea54bd4660e71",
        "type": "inject",
        "z": "62c0832d13afa530",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2480,
        "wires": [
            [
                "d7638f71204f9bdd",
                "b8aa1b4b25972000",
                "fb5076b12e3ac70c"
            ]
        ]
    },
    {
        "id": "49dbc39388262587",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    #data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    #output[0]['data'][0].append(data_t)\n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 2480,
        "wires": [
            [
                "487c02627a575ee1",
                "36ca96fb21d40eef"
            ]
        ]
    },
    {
        "id": "487c02627a575ee1",
        "type": "ui_chart",
        "z": "62c0832d13afa530",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "410bdc5c8974194d",
        "type": "inject",
        "z": "62c0832d13afa530",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "e392904716379a6f",
                "8493d6e4c8560e22",
                "9880ec7832f04043",
                "9fa12ae27f282b64",
                "3c7ea97a30c43e47",
                "e62b44374a2b9494"
            ]
        ]
    },
    {
        "id": "e392904716379a6f",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "greenHouseName": "",
            "city": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "ca1a5323491fb6f8"
            ]
        ]
    },
    {
        "id": "35f9f92081b4f835",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 360,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "78cd1fd5701488f3",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 600,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "8493d6e4c8560e22",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "573e0e4a.d065e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "330927e43c89479c"
            ]
        ]
    },
    {
        "id": "0480ea1a64488ea5",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 120,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "9880ec7832f04043",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "0480ea1a64488ea5"
            ]
        ]
    },
    {
        "id": "9c12ec0571827bfd",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to create a new user. We use POST",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "5eef48d2b605e18c",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "345598d8eaec6df3"
            ]
        ]
    },
    {
        "id": "345598d8eaec6df3",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 220,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "02242564013a3913",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to modify an already existing user. We use PUT",
        "x": 440,
        "y": 260,
        "wires": []
    },
    {
        "id": "9fa12ae27f282b64",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 220,
        "wires": [
            [
                "5eef48d2b605e18c"
            ]
        ]
    },
    {
        "id": "286c2ae788ed60ef",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to create a new greenhouse to an existing user. Use POST",
        "x": 440,
        "y": 400,
        "wires": []
    },
    {
        "id": "ca1a5323491fb6f8",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "35f9f92081b4f835"
            ]
        ]
    },
    {
        "id": "330927e43c89479c",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid'] }\n\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 600,
        "wires": [
            [
                "78cd1fd5701488f3"
            ]
        ]
    },
    {
        "id": "3c7ea97a30c43e47",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "greenHouseName": "",
            "city": "",
            "uid": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 460,
        "wires": [
            [
                "2d2a12470e902966"
            ]
        ]
    },
    {
        "id": "bbfecda2ce115c5d",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 460,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "1d1ee6bd0e2bf3af",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "2d2a12470e902966",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\n#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['id']}\n\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 460,
        "wires": [
            [
                "bbfecda2ce115c5d"
            ]
        ]
    },
    {
        "id": "57d8aa91af14055c",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 420,
        "wires": []
    },
    {
        "id": "0dd2226660da9866",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to create a new devices of a specific user and in a specific greenhouse. We use POST",
        "x": 440,
        "y": 640,
        "wires": []
    },
    {
        "id": "1f4b6ae7c27c66b3",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 700,
        "wires": [
            [
                "57d8aa91af14055c"
            ]
        ]
    },
    {
        "id": "e62b44374a2b9494",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "a33bdf9dd6f9fc5e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "05dbc7726fe734c7"
            ]
        ]
    },
    {
        "id": "05dbc7726fe734c7",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 700,
        "wires": [
            [
                "1f4b6ae7c27c66b3"
            ]
        ]
    },
    {
        "id": "6348f3ea742e6b1d",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "This flow is to modify an already existing device of a specific user and in a specific greenhouse. We use PUT",
        "x": 440,
        "y": 740,
        "wires": []
    },
    {
        "id": "62a041864eb5fd1c",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 490,
        "y": 920,
        "wires": [
            [
                "77bcce7437c28ee6"
            ]
        ]
    },
    {
        "id": "db5edc7f73d38cfc",
        "type": "inject",
        "z": "62c0832d13afa530",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 920,
        "wires": [
            [
                "06394500fa012765",
                "73d043ab4cf0fae6"
            ]
        ]
    },
    {
        "id": "77bcce7437c28ee6",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 920,
        "wires": [
            [
                "a433fe1fea4456c0"
            ]
        ]
    },
    {
        "id": "2b4b8df78d4dca5b",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1060,
        "wires": []
    },
    {
        "id": "06394500fa012765",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "76c6a1aae3778d09",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 310,
        "y": 920,
        "wires": [
            [
                "62a041864eb5fd1c"
            ]
        ]
    },
    {
        "id": "846e208ac8e60fca",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "Do a GET of a desired user, greenhouse and device",
        "x": 320,
        "y": 960,
        "wires": []
    },
    {
        "id": "a433fe1fea4456c0",
        "type": "json",
        "z": "62c0832d13afa530",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "754fae33d21c9c56",
                "d1e3d60a54819d97",
                "3b7241492a3c3fc8"
            ]
        ]
    },
    {
        "id": "d1e3d60a54819d97",
        "type": "ui_template",
        "z": "62c0832d13afa530",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The name of the devices is: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 1000,
        "wires": [
            [
                "2b4b8df78d4dca5b"
            ]
        ]
    },
    {
        "id": "754fae33d21c9c56",
        "type": "ui_template",
        "z": "62c0832d13afa530",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available services are:</p>\n<p>\"<span ng-bind=\"msg['payload']['availableServices']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "2b4b8df78d4dca5b"
            ]
        ]
    },
    {
        "id": "3b7241492a3c3fc8",
        "type": "ui_template",
        "z": "62c0832d13afa530",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available measures are:</p>\n<p> \"<span ng-bind=\"msg['payload']['measureTypes']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 1120,
        "wires": [
            [
                "2b4b8df78d4dca5b"
            ]
        ]
    },
    {
        "id": "73d043ab4cf0fae6",
        "type": "ui_form",
        "z": "62c0832d13afa530",
        "name": "",
        "label": "",
        "group": "45c8320c4de80a23",
        "order": 14,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "time",
                "value": "time",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "duration",
                "value": "duration",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "water quantity",
                "value": "water_quantity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "temperature",
                "value": "Temperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "humidity",
                "value": "Humidity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "ground temperature",
                "value": "GroundTemperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "wind",
                "value": "Wind",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "precipitation",
                "value": "Precipitation",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "green house id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "time": "",
            "duration": "",
            "water_quantity": "",
            "Temperature": "",
            "Humidity": "",
            "GroundTemperature": "",
            "Wind": "",
            "Precipitation": "",
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "25072ece313ca5d8"
            ]
        ]
    },
    {
        "id": "25072ece313ca5d8",
        "type": "python3-function",
        "z": "62c0832d13afa530",
        "name": "",
        "func": "msg = {'payload': msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 530,
        "y": 1280,
        "wires": [
            [
                "88adc9dfd8acbe29"
            ]
        ]
    },
    {
        "id": "88adc9dfd8acbe29",
        "type": "http request",
        "z": "62c0832d13afa530",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "73534392a8b6f12e"
            ]
        ]
    },
    {
        "id": "73534392a8b6f12e",
        "type": "debug",
        "z": "62c0832d13afa530",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1280,
        "wires": []
    },
    {
        "id": "dc1985d6ec7f216d",
        "type": "comment",
        "z": "62c0832d13afa530",
        "name": "",
        "info": "this flow is to create a new strategy",
        "x": 320,
        "y": 1320,
        "wires": []
    },
    {
        "id": "160c88666b8c96f1",
        "type": "inject",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "aed8c5d490d277c1",
                "8d65a1fbc45d4b43"
            ]
        ]
    },
    {
        "id": "aed8c5d490d277c1",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "d2172262a600a5f0"
            ]
        ]
    },
    {
        "id": "d2172262a600a5f0",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/user_manager?id={{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "73fbc3b418c6d454"
            ]
        ]
    },
    {
        "id": "73fbc3b418c6d454",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "8d65a1fbc45d4b43",
        "type": "ui_button",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "group": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "24ab5abdf21199f3"
            ]
        ]
    },
    {
        "id": "24ab5abdf21199f3",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "label": "",
        "group": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "",
                "value": "",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "7a909fc1df9e3453"
            ]
        ]
    },
    {
        "id": "7a909fc1df9e3453",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "77daa24f368d82e6",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "7d05bb9934163ef8"
            ]
        ]
    },
    {
        "id": "c6e44eec32f0a92b",
        "type": "inject",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "45187d49325755bf",
                "206de67dc84b253e"
            ]
        ]
    },
    {
        "id": "7d05bb9934163ef8",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 750,
        "y": 460,
        "wires": [
            [
                "8a30aa2a07e3a4fa"
            ]
        ]
    },
    {
        "id": "8fc887aa7a4fe9d2",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 600,
        "wires": []
    },
    {
        "id": "45187d49325755bf",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 11,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 350,
        "y": 460,
        "wires": [
            [
                "77daa24f368d82e6"
            ]
        ]
    },
    {
        "id": "8c3071dfc3854ab2",
        "type": "comment",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "info": "Fare un Get di un utente a scelta",
        "x": 360,
        "y": 500,
        "wires": []
    },
    {
        "id": "5ee47c1b88930f8a",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = msg['payload']['deviceName']\n\n\nmsg = {'payload' : content}\n\nreturn msg",
        "outputs": 1,
        "x": 190,
        "y": 1300,
        "wires": [
            [
                "65707585de7a8142"
            ]
        ]
    },
    {
        "id": "3c5b982290df8753",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "payload = msg['payload']\n\ncontent = {\"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n           \nfor measure in payload['measureTypes']:\n    content['measureTypes'].append(measure)\n    \nfor actuators in payload['actuatorsTypes']:\n    content['actuatorsTypes'].append(actuators)\n\nfor services in payload['availableServices']:\n    content['availableServices'].append(services)\n\nmsg = {'payload' : content}\n\nreturn msg",
        "outputs": 1,
        "x": 190,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8a30aa2a07e3a4fa",
        "type": "json",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "14f925c615c291f6",
                "46058e55383f25b5",
                "52c1569135596732",
                "5b1eb84b750f6988"
            ]
        ]
    },
    {
        "id": "46058e55383f25b5",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "1ad3bf1a8d6e4b4e",
        "name": "",
        "order": 11,
        "width": "5",
        "height": "2",
        "format": "<p>The name of the devices is: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 540,
        "wires": [
            [
                "8fc887aa7a4fe9d2"
            ]
        ]
    },
    {
        "id": "14f925c615c291f6",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "1ad3bf1a8d6e4b4e",
        "name": "",
        "order": 12,
        "width": "5",
        "height": "2",
        "format": "<p>The available services are:</p>\n<p>\"<span ng-bind=\"msg['payload']['availableServices']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 600,
        "wires": [
            [
                "8fc887aa7a4fe9d2"
            ]
        ]
    },
    {
        "id": "52c1569135596732",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "1ad3bf1a8d6e4b4e",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available measures are:</p>\n<p> \"<span ng-bind=\"msg['payload']['measureTypes']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 660,
        "wires": [
            [
                "8fc887aa7a4fe9d2"
            ]
        ]
    },
    {
        "id": "65707585de7a8142",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5b1eb84b750f6988",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "",
        "name": "",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<p>The current strategy is:</p>\n<p>Time: \"<span ng-bind=\"msg['payload']['strategies']['time']\"></span>\"</p>\n<p>Water quantity: \"<span ng-bind=\"msg['payload']['strategies']['water_quantity']\"></span>\"</p>\n<p>Duration: \"<span ng-bind=\"msg['payload']['strategies']['duration']\"></span>\"</p>\n<p>Temperature: \"<span ng-bind=\"msg['payload']['strategies']['Temperature']\"></span>\"</p>\n<p>Humidity: \"<span ng-bind=\"msg['payload']['strategies']['Humidity']\"></span>\"</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "8fc887aa7a4fe9d2"
            ]
        ]
    },
    {
        "id": "206de67dc84b253e",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "label": "",
        "group": "95435e3ee33195ef",
        "order": 14,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "time",
                "value": "time",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "duration",
                "value": "duration",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "water quantity",
                "value": "water_quantity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "temperature",
                "value": "Temperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "humidity",
                "value": "Humidity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "ground temperature",
                "value": "GroundTemperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "wind",
                "value": "Wind",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "precipitation",
                "value": "Precipitation",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "green house id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "time": "",
            "duration": "",
            "water_quantity": "",
            "Temperature": "",
            "Humidity": "",
            "GroundTemperature": "",
            "Wind": "",
            "Precipitation": "",
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 350,
        "y": 840,
        "wires": [
            [
                "6443becd12200df2"
            ]
        ]
    },
    {
        "id": "5df2336ccae2155b",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "query = msg['query']\npayload = msg['payload']\nmsg = {'payload': payload, 'query': query}\nreturn msg",
        "outputs": 1,
        "x": 190,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "1a65af75ddf8b2fd",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4bf87ceffa54cc06",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "\nquery = \"\"\npayload = \"\"\n\nwhile len(payload) == 0 or len(query) == 0:\n    if 'query' in msg:\n        query = msg['query']\n        \n    if 'payload' in msg:\n        payolad = msg['payload']\n\n\nmsg = {'payload' : payload, 'query' : query}\nreturn msg",
        "outputs": 1,
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "1a65af75ddf8b2fd"
            ]
        ]
    },
    {
        "id": "6443becd12200df2",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "msg = {'payload': msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 570,
        "y": 840,
        "wires": [
            [
                "00e6852d3a591860"
            ]
        ]
    },
    {
        "id": "00e6852d3a591860",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/strategy_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 810,
        "y": 840,
        "wires": [
            [
                "922e07d673397f70"
            ]
        ]
    },
    {
        "id": "922e07d673397f70",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 840,
        "wires": []
    },
    {
        "id": "d5e1fab16ef1b852",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "695583b23ef2d461",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "e00e7036418de827"
            ]
        ]
    },
    {
        "id": "27f902f759c8fb82",
        "type": "inject",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "b8a5f28e12499219"
            ]
        ]
    },
    {
        "id": "e00e7036418de827",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 1540,
        "wires": [
            [
                "342e9ec256f1ecb6"
            ]
        ]
    },
    {
        "id": "7eae75acd43fcba3",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b8a5f28e12499219",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "label": "",
        "group": "76c6a1aae3778d09",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 490,
        "y": 1540,
        "wires": [
            [
                "695583b23ef2d461"
            ]
        ]
    },
    {
        "id": "032d7575b85f52c5",
        "type": "comment",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "info": "We do a GET of a specific device in a specific greenhouse of a specific user and we print to the user all the information of the device. In this way the user knows which are the parameters that can be modified",
        "x": 500,
        "y": 1580,
        "wires": []
    },
    {
        "id": "342e9ec256f1ecb6",
        "type": "json",
        "z": "7b79b126a68737ec",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 1680,
        "wires": [
            [
                "234810cba3ee97cb",
                "cfd519884789cbbf",
                "2e70cc871a0a1f06"
            ]
        ]
    },
    {
        "id": "cfd519884789cbbf",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The name of the devices is: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 1640,
        "wires": [
            [
                "7eae75acd43fcba3"
            ]
        ]
    },
    {
        "id": "234810cba3ee97cb",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available services are:</p>\n<p>\"<span ng-bind=\"msg['payload']['availableServices']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 1700,
        "wires": [
            [
                "7eae75acd43fcba3"
            ]
        ]
    },
    {
        "id": "2e70cc871a0a1f06",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available measures are:</p>\n<p> \"<span ng-bind=\"msg['payload']['measureTypes']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 1760,
        "wires": [
            [
                "7eae75acd43fcba3"
            ]
        ]
    },
    {
        "id": "503d47167ac9de06",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "d": true,
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<p>The current strategy is:</p>\n<p>Time: \"<span ng-bind=\"msg['payload']['strategies']['time']\"></span>\"</p>\n<p>Water quantity: \"<span ng-bind=\"msg['payload']['strategies']['water_quantity']\"></span>\"</p>\n<p>Duration: \"<span ng-bind=\"msg['payload']['strategies']['duration']\"></span>\"</p>\n<p>Temperature: \"<span ng-bind=\"msg['payload']['strategies']['Temperature']\"></span>\"</p>\n<p>Humidity: \"<span ng-bind=\"msg['payload']['strategies']['Humidity']\"></span>\"</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "f181ef0a1ddad4d0",
        "type": "inject",
        "z": "7b79b126a68737ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2060,
        "wires": [
            [
                "a4a13e8e778b9e62",
                "142dae9.49d4751"
            ]
        ]
    },
    {
        "id": "417f167d1bbb11aa",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 2060,
        "wires": [
            [
                "353f56f27f638e80"
            ]
        ]
    },
    {
        "id": "a4a13e8e778b9e62",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "name": "",
        "label": "",
        "group": "573e0e4a.d065e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 2060,
        "wires": [
            [
                "ab07c056eebd5618"
            ]
        ]
    },
    {
        "id": "ab07c056eebd5618",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid'] }\n\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 2060,
        "wires": [
            [
                "417f167d1bbb11aa"
            ]
        ]
    },
    {
        "id": "353f56f27f638e80",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 2060,
        "wires": []
    },
    {
        "id": "ce76e49d8681c0f7",
        "type": "comment",
        "z": "7b79b126a68737ec",
        "name": "",
        "info": "This flow is to create a new devices of a specific user and in a specific greenhouse. We use POST",
        "x": 440,
        "y": 2100,
        "wires": []
    },
    {
        "id": "142dae9.49d4751",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "group": "3d9e45e.bcd50ba",
        "name": "css_style",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n/*\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n*/\n\n/*\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n*/\n\n /*\n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n*/\n\n/* \nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n */\n\n\n/*\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n*/\n\n\n/*\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n*/\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n*/\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n*/\n\n\n/*\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n*/\n\n/*\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n*/\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 380,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "1e519afa8832c829",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 2380,
        "wires": [
            [
                "3725e605fcc46d56"
            ]
        ]
    },
    {
        "id": "4f17d0137887f6e5",
        "type": "inject",
        "z": "7b79b126a68737ec",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 2380,
        "wires": [
            [
                "d58fe55c5c25729d",
                "ebcdc7e93d193197"
            ]
        ]
    },
    {
        "id": "3725e605fcc46d56",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 2380,
        "wires": [
            [
                "9c4b250c1ad3d5f3"
            ]
        ]
    },
    {
        "id": "7a416f2b411e169c",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 2520,
        "wires": []
    },
    {
        "id": "d58fe55c5c25729d",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "name": "",
        "label": "",
        "group": "76c6a1aae3778d09",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 370,
        "y": 2380,
        "wires": [
            [
                "1e519afa8832c829"
            ]
        ]
    },
    {
        "id": "9570f64367f8f5cf",
        "type": "comment",
        "z": "7b79b126a68737ec",
        "name": "",
        "info": "Fare un Get di un utente a scelta",
        "x": 380,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9c4b250c1ad3d5f3",
        "type": "json",
        "z": "7b79b126a68737ec",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 2460,
        "wires": [
            [
                "16ff93914e4f0516",
                "6daf9861a1870f36",
                "5889a3b414d61fe2"
            ]
        ]
    },
    {
        "id": "16ff93914e4f0516",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The name of the devices is: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 2460,
        "wires": [
            [
                "7a416f2b411e169c"
            ]
        ]
    },
    {
        "id": "6daf9861a1870f36",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available services are:</p>\n<p>\"<span ng-bind=\"msg['payload']['availableServices']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 2520,
        "wires": [
            [
                "7a416f2b411e169c"
            ]
        ]
    },
    {
        "id": "5889a3b414d61fe2",
        "type": "ui_template",
        "z": "7b79b126a68737ec",
        "group": "b4bb79b476e72e39",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The available measures are:</p>\n<p> \"<span ng-bind=\"msg['payload']['measureTypes']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 2580,
        "wires": [
            [
                "7a416f2b411e169c"
            ]
        ]
    },
    {
        "id": "ebcdc7e93d193197",
        "type": "ui_form",
        "z": "7b79b126a68737ec",
        "name": "",
        "label": "",
        "group": "45c8320c4de80a23",
        "order": 14,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "time",
                "value": "time",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "duration",
                "value": "duration",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "water quantity",
                "value": "water_quantity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "temperature",
                "value": "Temperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "humidity",
                "value": "Humidity",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "ground temperature",
                "value": "GroundTemperature",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "wind",
                "value": "Wind",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "precipitation",
                "value": "Precipitation",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "green house id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "time": "",
            "duration": "",
            "water_quantity": "",
            "Temperature": "",
            "Humidity": "",
            "GroundTemperature": "",
            "Wind": "",
            "Precipitation": "",
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 370,
        "y": 2740,
        "wires": [
            [
                "cf71d77df0c52474"
            ]
        ]
    },
    {
        "id": "cf71d77df0c52474",
        "type": "python3-function",
        "z": "7b79b126a68737ec",
        "name": "",
        "func": "msg = {'payload': msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 590,
        "y": 2740,
        "wires": [
            [
                "9d971436bf0c82cc"
            ]
        ]
    },
    {
        "id": "9d971436bf0c82cc",
        "type": "http request",
        "z": "7b79b126a68737ec",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.84:8080/strategy_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 830,
        "y": 2740,
        "wires": [
            [
                "1e0b16d5af32e90e"
            ]
        ]
    },
    {
        "id": "1e0b16d5af32e90e",
        "type": "debug",
        "z": "7b79b126a68737ec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2740,
        "wires": []
    },
    {
        "id": "e508cf73056095e3",
        "type": "comment",
        "z": "7b79b126a68737ec",
        "name": "",
        "info": "this flow is to create a new strategy",
        "x": 380,
        "y": 2780,
        "wires": []
    },
    {
        "id": "47cec2da650ea8a3",
        "type": "inject",
        "z": "95a9d6f4f0841f0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "b444fb8c6f88dafd"
            ]
        ]
    },
    {
        "id": "d6fe16c34875c3eb",
        "type": "debug",
        "z": "95a9d6f4f0841f0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 280,
        "wires": []
    },
    {
        "id": "b444fb8c6f88dafd",
        "type": "function",
        "z": "95a9d6f4f0841f0e",
        "name": "",
        "func": "msg = {'Form elements' : {'Label' : 'A', 'Name' : 'A', 'Type' : 'Text', 'Required' : True}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "97043af739bcfbb0"
            ]
        ]
    },
    {
        "id": "97043af739bcfbb0",
        "type": "ui_template",
        "z": "95a9d6f4f0841f0e",
        "group": "",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<html>\n<head>\n    <script type='text/javascript'>\n        function addFields(){\n            // Generate a dynamic number of inputs\n            var number = document.getElementById(\"member\").value;\n            // Get the element where the inputs will be added to\n            var container = document.getElementById(\"container\");\n            // Remove every children it had before\n            while (container.hasChildNodes()) {\n                container.removeChild(container.lastChild);\n            }\n            for (i=0;i<number;i++){\n                // Append a node with a random text\n                container.appendChild(document.createTextNode(\"Member \" + (i+1)));\n                // Create an <input> element, set its type and name attributes\n                var input = document.createElement(\"input\");\n                input.type = \"text\";\n                input.name = \"member\" + i;\n                container.appendChild(input);\n                // Append a line break \n                container.appendChild(document.createElement(\"br\"));\n            }\n        }\n    </script>\n</head>\n<body>\n    <input type=\"text\" id=\"member\" name=\"member\" value=\"\">Number of members: (max. 10)<br />\n    <a href=\"#\" id=\"filldetails\" onclick=\"addFields()\">Fill Details</a>\n    <div id=\"container\"/>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 280,
        "wires": [
            [
                "d6fe16c34875c3eb"
            ]
        ]
    },
    {
        "id": "8a94494b776ad89a",
        "type": "inject",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "528ac6fab7bb6657"
            ]
        ]
    },
    {
        "id": "528ac6fab7bb6657",
        "type": "ui_template",
        "z": "10b0b6531ca7c2e3",
        "group": "",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<div>\n    \n    <p>Welcome this is the home page</p> \n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb63f0b6a0f99b0e",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This is the home page",
        "x": 340,
        "y": 380,
        "wires": []
    },
    {
        "id": "a5259424b6fcd183",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']}\n\nreturn msg",
        "outputs": 1,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "a0babcf166c19aba"
            ]
        ]
    },
    {
        "id": "cc8a50c0d8e11bfd",
        "type": "inject",
        "z": "10b0b6531ca7c2e3",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "fdc4c758fd443f25",
                "9a87f076d5f840f8"
            ]
        ]
    },
    {
        "id": "a0babcf166c19aba",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "7018136d9b2b4447"
            ]
        ]
    },
    {
        "id": "2d867bae8da9a8f5",
        "type": "debug",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "fdc4c758fd443f25",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "05f5e31d0c024ebe",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "a5259424b6fcd183"
            ]
        ]
    },
    {
        "id": "376145d6640b88d8",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "Do a GET of a desired user and return the greenhouses associated",
        "x": 380,
        "y": 580,
        "wires": []
    },
    {
        "id": "7018136d9b2b4447",
        "type": "json",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "a2bfead677522dd0"
            ]
        ]
    },
    {
        "id": "a2bfead677522dd0",
        "type": "ui_template",
        "z": "10b0b6531ca7c2e3",
        "group": "05f5e31d0c024ebe",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The greenhouses associated to the user are: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 620,
        "wires": [
            [
                "2d867bae8da9a8f5"
            ]
        ]
    },
    {
        "id": "b8e7be65f5514693",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "to visualize the list of greenhouses select the correct msg['payload'] #TODO",
        "x": 840,
        "y": 680,
        "wires": []
    },
    {
        "id": "b6782b3f5afb34d6",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']}\n\nreturn msg",
        "outputs": 1,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "ac05bb46bd85d0d8"
            ]
        ]
    },
    {
        "id": "ac05bb46bd85d0d8",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 810,
        "y": 760,
        "wires": [
            [
                "a471e22b9d3f8bde"
            ]
        ]
    },
    {
        "id": "7d6c896159001cef",
        "type": "debug",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 840,
        "wires": []
    },
    {
        "id": "9a87f076d5f840f8",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "3d9e45e.bcd50ba",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 370,
        "y": 760,
        "wires": [
            [
                "b6782b3f5afb34d6"
            ]
        ]
    },
    {
        "id": "03b013b2182702fe",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "Do a GET of a desired user and greenhouse and return the devices inside the greenhouse",
        "x": 380,
        "y": 800,
        "wires": []
    },
    {
        "id": "a471e22b9d3f8bde",
        "type": "json",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 840,
        "wires": [
            [
                "f7aada2224870587"
            ]
        ]
    },
    {
        "id": "f7aada2224870587",
        "type": "ui_template",
        "z": "10b0b6531ca7c2e3",
        "group": "3d9e45e.bcd50ba",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The devices associated to the greenhouse are: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 840,
        "wires": [
            [
                "7d6c896159001cef"
            ]
        ]
    },
    {
        "id": "51f51cf63eeba7f3",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "to visualize the list of devices select the correct msg['payload'] #TODO",
        "x": 840,
        "y": 900,
        "wires": []
    },
    {
        "id": "8e6fba8c0e564988",
        "type": "inject",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1460,
        "wires": [
            [
                "d71e21b0f7d9b61c",
                "4191bd70a781e3d1",
                "b3a337db89fb4952",
                "a1e60a004eec39e7",
                "a08962301a932b7b",
                "70d73f3bc43f2bf9",
                "a44a126db30829bc",
                "3f3ce865886ba701"
            ]
        ]
    },
    {
        "id": "d71e21b0f7d9b61c",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenHouseID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "id": "",
            "greenHouseName": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1400,
        "wires": [
            [
                "4f8ef2cff8c457c3"
            ]
        ]
    },
    {
        "id": "05b88a6c67d49ba3",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1400,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "5523222df3b23970",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1820,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "4191bd70a781e3d1",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "573e0e4a.d065e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1820,
        "wires": [
            [
                "2154f61f829434e7"
            ]
        ]
    },
    {
        "id": "bfa838f5aff5a8d8",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1000,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "b3a337db89fb4952",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 12,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "9d906023d5ecfa17"
            ]
        ]
    },
    {
        "id": "6d114ad98e09da3f",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to create a new user. We use POST",
        "x": 640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1257b33d0605ae49",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1100,
        "wires": [
            [
                "80a55202154b245a"
            ]
        ]
    },
    {
        "id": "80a55202154b245a",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1100,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "a81bee384f112777",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to modify an already existing user. We use PUT",
        "x": 640,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a1e60a004eec39e7",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "1257b33d0605ae49"
            ]
        ]
    },
    {
        "id": "1912b1332455379d",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to create a new greenhouse to an existing user. Use POST",
        "x": 640,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4f8ef2cff8c457c3",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\n#payload = msg['payload']\n#payload.pop('uid')\n#payload.pop('id')\n\nquery =  \"?id=\"+ msg['payload']['id'] + \"&greenHouseID=\"+ msg['payload']['id']\n\nmsg = {'payload' : payload, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1400,
        "wires": [
            [
                "05b88a6c67d49ba3"
            ]
        ]
    },
    {
        "id": "2154f61f829434e7",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid'] }\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "5523222df3b23970"
            ]
        ]
    },
    {
        "id": "a08962301a932b7b",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "id": "",
            "greenHouseName": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1500,
        "wires": [
            [
                "d25990a592923f04"
            ]
        ]
    },
    {
        "id": "1ad97c4af51e1a5d",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1500,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "5eaec1f6fbe416f6",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 640,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d25990a592923f04",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\n#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['id']}\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1500,
        "wires": [
            [
                "1ad97c4af51e1a5d"
            ]
        ]
    },
    {
        "id": "291567c058a4faa9",
        "type": "debug",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1440,
        "wires": []
    },
    {
        "id": "728a94a34408d6e7",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to create a new devices of a specific user and in a specific greenhouse. We use POST",
        "x": 640,
        "y": 1860,
        "wires": []
    },
    {
        "id": "197053f122552899",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1920,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "70d73f3bc43f2bf9",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "a33bdf9dd6f9fc5e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 630,
        "y": 1920,
        "wires": [
            [
                "0739d6aeeca88d23"
            ]
        ]
    },
    {
        "id": "0739d6aeeca88d23",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1920,
        "wires": [
            [
                "197053f122552899"
            ]
        ]
    },
    {
        "id": "8475d709b6eda059",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to modify an already existing device of a specific user and in a specific greenhouse. We use PUT",
        "x": 640,
        "y": 1960,
        "wires": []
    },
    {
        "id": "a44a126db30829bc",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "edded25c257e2620",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1200,
        "wires": [
            [
                "1e01d0ae3f36b044"
            ]
        ]
    },
    {
        "id": "1e01d0ae3f36b044",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1200,
        "wires": [
            [
                "e0bf4628a46b29cc"
            ]
        ]
    },
    {
        "id": "e0bf4628a46b29cc",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1200,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "3f3ce865886ba701",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "3ca67b85ec7cd5f7",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "d12684f5ae6e8017"
            ]
        ]
    },
    {
        "id": "82ef884d459bdb9c",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1600,
        "wires": [
            [
                "291567c058a4faa9"
            ]
        ]
    },
    {
        "id": "bfeea199946cf02c",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 640,
        "y": 1640,
        "wires": []
    },
    {
        "id": "d12684f5ae6e8017",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\n#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['id']}\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1600,
        "wires": [
            [
                "82ef884d459bdb9c"
            ]
        ]
    },
    {
        "id": "5fdc27b3d3ad500f",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "b45282b947493a4e",
        "type": "ui_form",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "label": "",
        "group": "19aa5479d361a25a",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 630,
        "y": 2020,
        "wires": [
            [
                "6487351b43c15244"
            ]
        ]
    },
    {
        "id": "6487351b43c15244",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 2020,
        "wires": [
            [
                "5fdc27b3d3ad500f"
            ]
        ]
    },
    {
        "id": "e55062b40bba9a63",
        "type": "comment",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "info": "This flow is to modify an already existing device of a specific user and in a specific greenhouse. We use PUT",
        "x": 640,
        "y": 2060,
        "wires": []
    },
    {
        "id": "a9bbab7846b37c49",
        "type": "debug",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 2120,
        "wires": []
    },
    {
        "id": "c5dca46c519d9872",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "eddedd02a298a50f"
            ]
        ]
    },
    {
        "id": "322a6a208ba54871",
        "type": "inject",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2240,
        "wires": [
            [
                "c5dca46c519d9872",
                "d739c3c94665a1b9"
            ]
        ]
    },
    {
        "id": "eddedd02a298a50f",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    #data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    #output[0]['data'][0].append(data_t)\n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 2180,
        "wires": [
            [
                "cec57c5b7f44122c",
                "a9bbab7846b37c49"
            ]
        ]
    },
    {
        "id": "cec57c5b7f44122c",
        "type": "ui_chart",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "ec3887c7e6646094",
        "type": "debug",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 2360,
        "wires": []
    },
    {
        "id": "d739c3c94665a1b9",
        "type": "http request",
        "z": "10b0b6531ca7c2e3",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 590,
        "y": 2420,
        "wires": [
            [
                "d0c0306a26e58bef"
            ]
        ]
    },
    {
        "id": "d0c0306a26e58bef",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    #data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    #output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 2420,
        "wires": [
            [
                "449b3aab6b8640d9",
                "ec3887c7e6646094"
            ]
        ]
    },
    {
        "id": "449b3aab6b8640d9",
        "type": "ui_chart",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "9d906023d5ecfa17",
        "type": "python3-function",
        "z": "10b0b6531ca7c2e3",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "bfa838f5aff5a8d8"
            ]
        ]
    },
    {
        "id": "c904322d6f43f588",
        "type": "python3-function",
        "z": "82cdab8279634e0c",
        "d": true,
        "name": "",
        "func": "\n\nquery = \"?id=\" +\"&greenHouseID=\"+ \"&strategyType=irrigation\"\n\nif msg.payload[\"active\"] == \"On\":\n    active = True\nelse:\n    active = False\n    \ntime_list = msg.payload[\"time\"].split(\"T\")[1].split(\".\")[0].split(\":\")\nif int(time_list[0])<9:\n    time_list[0] = \"0\"+str(int(time_list[0])+1)\nelif int(time_list[0])<23:\n    time_list[0] = str(int(time_list[0])+1)\nelse:\n    time_list[0] = \"00\"\n    \ntime = time_list[0]+time_list[1]+time_list[2]\n \ntry:\n    strategyID = msg.payload[\"strategyID\"]\nexcept:\n    payload = {\n        \"time\": time,\n        \"water_quantity\": msg.payload[\"water_quantity\"],\n        \"active\": active\n    }\n    \n    msg = {\n        \"payload\": payload,\n        \"query\": query\n    }\n    \n    return [msg, null, null]\nelse:\n    msg_delete = {\n        \"query\": query+\"&strategyID=\"+str(strategyID)\n    }\n    \n    payload = {\n        \"time\": time,\n        \"water_quantity\": msg.payload[\"water_quantity\"],\n        \"active\": active\n    }\n    \n    msg = {\n        \"payload\": payload,\n        \"query\": query\n    }\n    \n    return [null, msg_delete, msg]",
        "outputs": 3,
        "x": 790,
        "y": 1180,
        "wires": [
            [
                "cd50f5cf910ba36f"
            ],
            [
                "c8f45ea0401a5923"
            ],
            [
                "0d44da63993a68a0"
            ]
        ],
        "outputLabels": [
            "Create new strategy",
            "Delete old strategy",
            "Update/Create strategy"
        ]
    },
    {
        "id": "cd50f5cf910ba36f",
        "type": "http request",
        "z": "82cdab8279634e0c",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1030,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "c8f45ea0401a5923",
        "type": "http request",
        "z": "82cdab8279634e0c",
        "d": true,
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1130,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "0d44da63993a68a0",
        "type": "delay",
        "z": "82cdab8279634e0c",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 1280,
        "wires": [
            [
                "d01c1815e7fdaaf1"
            ]
        ]
    },
    {
        "id": "d01c1815e7fdaaf1",
        "type": "http request",
        "z": "82cdab8279634e0c",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "6beb094b7b04f80c",
        "type": "ui_form",
        "z": "82cdab8279634e0c",
        "name": "",
        "label": "",
        "group": "45c8320c4de80a23",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "retrieveStrat",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "bce9d98bb3c5012e"
            ]
        ]
    },
    {
        "id": "bce9d98bb3c5012e",
        "type": "python3-function",
        "z": "82cdab8279634e0c",
        "name": "",
        "func": "query = \"?id=\"+str(msg.payload[\"id\"])+\"&greenHouseID=\"+str(msg.payload[\"greenHouseID\"])+\"&strategyType=irrigation\"\n\nmsg = {\"query\": query, \"topic\": msg.topic}\n\nreturn [msg, msg]",
        "outputs": 2,
        "x": 790,
        "y": 880,
        "wires": [
            [],
            [
                "09014d7073b0f773"
            ]
        ],
        "outputLabels": [
            "Create new strategy",
            "Delete old strategy"
        ]
    },
    {
        "id": "5272a9dafb07f64a",
        "type": "ui_form",
        "z": "82cdab8279634e0c",
        "name": "",
        "label": "",
        "group": "45c8320c4de80a23",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Time",
                "value": "time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Water quantity",
                "value": "water_quantity",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Strategy ID",
                "value": "strategyID",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "time": "",
            "water_quantity": "",
            "active": false,
            "strategyID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "addStrat",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "09014d7073b0f773"
            ]
        ]
    },
    {
        "id": "09014d7073b0f773",
        "type": "batch",
        "z": "82cdab8279634e0c",
        "name": "",
        "mode": "count",
        "count": "2",
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [],
        "x": 690,
        "y": 1020,
        "wires": [
            [
                "f2fb449ec3cd9d16"
            ]
        ]
    },
    {
        "id": "f2fb449ec3cd9d16",
        "type": "ui_text",
        "z": "82cdab8279634e0c",
        "group": "45c8320c4de80a23",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 980,
        "wires": []
    },
    {
        "id": "9a218f3e5857f2ac",
        "type": "comment",
        "z": "82cdab8279634e0c",
        "name": "",
        "info": "Ho necessità di sapere:\n\n=> quando devo fare un POST o un DELETE ho bisogno di sapere userID e greenhouseID. Teoricamente nella mia idea di pagina Strategy c'è una tab centrale in alto con il form per userID e greenhouseID; una volta inseriti compaiono i form sottostanti (3 colonne per i 3 tipi di strategia) e sotto/sopra di essi la lista di strategie presenti nel sistema. Per ogni form avrei un aggregatore di messaggi che combina userID e greenhouseID precedenti con il contenuto del nuovo form => entrambi finiranno in una function python e verranno lavorati per diventare query e payload.\nSe non è possibile avere la tab comune in alto allora: 3 colonne con un primo form per i due ID su ciascuna; una volta inseriti compare il form sottostante per creare una nuova strategia, che come nello scorso caso dovrebbe combinare il suo messaggio con gli ID + strategia presente (con possibilità di eliminarla/e?)\n\n1. come funzionano i nodi che aggregano i messaggi e perché apparentemente non funzionano\n2. se non posso aggregare i messaggi posso salvarli nello stesso file e poi accederci in un successivo momento (?)",
        "x": 480,
        "y": 1220,
        "wires": []
    },
    {
        "id": "eaca84af97ab6624",
        "type": "inject",
        "z": "aa987a913fb76799",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "399d154f4811eb5d",
                "203391e8d48422bd",
                "c07ac7fb31d854d5",
                "fd345509c4f8fc90",
                "048685646e35f11b",
                "5130ee50a085b868"
            ]
        ]
    },
    {
        "id": "399d154f4811eb5d",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenHouseID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "greenHouseName": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 810,
        "y": 640,
        "wires": [
            [
                "48af50273a23cc3c"
            ]
        ]
    },
    {
        "id": "6aee348da28ea198",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "a4f067ef6308d7a5"
            ]
        ]
    },
    {
        "id": "b2c9427919ea5857",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1290,
        "y": 80,
        "wires": [
            [
                "38a5530a91fe05e0"
            ]
        ]
    },
    {
        "id": "203391e8d48422bd",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 13,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "b4096754cbf3ae7a"
            ]
        ]
    },
    {
        "id": "68bda27c621fc229",
        "type": "comment",
        "z": "aa987a913fb76799",
        "name": "",
        "info": "This flow is to create a new user. We use POST",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "9bd67a59243cd9d2",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\ndata = {\n    'userName' : msg['payload']['userName'],\n    'password' : msg['payload']['password'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses'],\n    'country' : msg['payload']['country']\n}\n\nmsg = {'payload' : data, 'query' : query}\nreturn msg",
        "outputs": 1,
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "299128465977e797"
            ]
        ]
    },
    {
        "id": "299128465977e797",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "38a5530a91fe05e0"
            ]
        ]
    },
    {
        "id": "41b511ab7b27f358",
        "type": "comment",
        "z": "aa987a913fb76799",
        "name": "",
        "info": "This flow is to modify an already existing user. We use PUT",
        "x": 1080,
        "y": 280,
        "wires": []
    },
    {
        "id": "ea4844a6a4a834cc",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "9bd67a59243cd9d2"
            ]
        ]
    },
    {
        "id": "c8a4818e0aec806d",
        "type": "comment",
        "z": "aa987a913fb76799",
        "name": "",
        "info": "This flow is to create a new greenhouse to an existing user. Use POST",
        "x": 820,
        "y": 680,
        "wires": []
    },
    {
        "id": "48af50273a23cc3c",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "\n\nquery =  \"?id=\"+ msg['payload']['id'] \n\ndata = {\n    'greenHouseName' :  msg['payload']['greenHouseName'],\n    'greenHouseID' : msg['payload']['greenHouseID'],\n    'city' : msg['payload']['city'],\n}\n\nmsg = {'payload' : data, 'query': query}\n\nreturn msg\n\n\n",
        "outputs": 1,
        "x": 1030,
        "y": 640,
        "wires": [
            [
                "6aee348da28ea198"
            ]
        ]
    },
    {
        "id": "9fbd97731912ddd7",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "greenHouseName": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 1290,
        "y": 900,
        "wires": [
            [
                "f68bc3eb84816adf"
            ]
        ]
    },
    {
        "id": "5e38fad7a7a320f0",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1310,
        "y": 980,
        "wires": [
            [
                "a4f067ef6308d7a5"
            ]
        ]
    },
    {
        "id": "fd3520d8e4017314",
        "type": "comment",
        "z": "aa987a913fb76799",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f68bc3eb84816adf",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "\nquery =  \"?id=\"+ str(msg['payload']['id']) + \"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\ndata = {\n    \n    'greenHouseID': msg['payload']['greenHouseID'],\n    'greenHouseName': msg['payload']['greenHouseName']\n   \n}\n\nmsg = {'payload' : data, 'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "5e38fad7a7a320f0"
            ]
        ]
    },
    {
        "id": "38a5530a91fe05e0",
        "type": "debug",
        "z": "aa987a913fb76799",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 340,
        "wires": []
    },
    {
        "id": "c07ac7fb31d854d5",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "edded25c257e2620",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 770,
        "y": 480,
        "wires": [
            [
                "be67585ad30a71db"
            ]
        ]
    },
    {
        "id": "be67585ad30a71db",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 480,
        "wires": [
            [
                "b42d41c61c4fdb53"
            ]
        ]
    },
    {
        "id": "b42d41c61c4fdb53",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1230,
        "y": 480,
        "wires": [
            [
                "38a5530a91fe05e0"
            ]
        ]
    },
    {
        "id": "fd345509c4f8fc90",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "3ca67b85ec7cd5f7",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 770,
        "y": 1080,
        "wires": [
            [
                "5095d0bb5cf1715b"
            ]
        ]
    },
    {
        "id": "28372f52e420b088",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1230,
        "y": 1080,
        "wires": [
            [
                "a4f067ef6308d7a5"
            ]
        ]
    },
    {
        "id": "12341b88dbd0b364",
        "type": "comment",
        "z": "aa987a913fb76799",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 780,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5095d0bb5cf1715b",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['id'] + \"&greenHouseID=\"+ msg['payload']['greenHouseID']\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "28372f52e420b088"
            ]
        ]
    },
    {
        "id": "b4096754cbf3ae7a",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "\n#query =  \"?id=\"+ str(msg['payload']['id'])\n\ndata = {\n    'userName' : msg['payload']['userName'],\n    'password' : msg['payload']['password'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses'],\n    'country' : msg['payload']['country']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1050,
        "y": 80,
        "wires": [
            [
                "b2c9427919ea5857"
            ]
        ]
    },
    {
        "id": "1cf7dacd5fb741f2",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 870,
        "y": 380,
        "wires": [
            [
                "85af1e3014b47639"
            ]
        ]
    },
    {
        "id": "048685646e35f11b",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 630,
        "y": 320,
        "wires": [
            [
                "f627c9438a406e50"
            ]
        ]
    },
    {
        "id": "f627c9438a406e50",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 670,
        "y": 380,
        "wires": [
            [
                "1cf7dacd5fb741f2"
            ]
        ]
    },
    {
        "id": "6baf967ac7541e2a",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "data = {\n    'userName' : msg['payload']['userName'],\n    'password' : msg['payload']['password'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses'],\n    'country' : msg['payload']['country']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 240,
        "wires": [
            [
                "ea4844a6a4a834cc"
            ]
        ]
    },
    {
        "id": "85af1e3014b47639",
        "type": "json",
        "z": "aa987a913fb76799",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 320,
        "wires": [
            [
                "6baf967ac7541e2a"
            ]
        ]
    },
    {
        "id": "a4f067ef6308d7a5",
        "type": "debug",
        "z": "aa987a913fb76799",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 860,
        "wires": []
    },
    {
        "id": "543992d5fcd4aab2",
        "type": "http request",
        "z": "aa987a913fb76799",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "bbb9fb6a0ffd5371"
            ]
        ]
    },
    {
        "id": "5130ee50a085b868",
        "type": "ui_form",
        "z": "aa987a913fb76799",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 810,
        "y": 780,
        "wires": [
            [
                "139f37bd2fafeb1f",
                "9fbd97731912ddd7"
            ]
        ]
    },
    {
        "id": "139f37bd2fafeb1f",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 840,
        "wires": [
            [
                "543992d5fcd4aab2"
            ]
        ]
    },
    {
        "id": "2a6d034bfb2a555d",
        "type": "python3-function",
        "z": "aa987a913fb76799",
        "name": "",
        "func": "data = {\n    \"greenHouseName\": msg['payload']['greenHouseName'],\n    }\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1310,
        "y": 780,
        "wires": [
            [
                "9fbd97731912ddd7"
            ]
        ]
    },
    {
        "id": "bbb9fb6a0ffd5371",
        "type": "json",
        "z": "aa987a913fb76799",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 780,
        "wires": [
            [
                "2a6d034bfb2a555d"
            ]
        ]
    },
    {
        "id": "07aaf40ee2f4eead",
        "type": "debug",
        "z": "aa987a913fb76799",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fe3fc0c61975a825",
        "type": "inject",
        "z": "ca6e52d66bf110ed",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 280,
        "y": 620,
        "wires": [
            [
                "1c34f295.0a0a8d"
            ]
        ]
    },
    {
        "id": "ee7d703f796f6f5c",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 920,
        "wires": []
    },
    {
        "id": "1c34f295.0a0a8d",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "043782d90857d581",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 430,
        "y": 620,
        "wires": [
            [
                "233d5a52fbcdd02c",
                "7f700d520a9e338d",
                "c2e891f5ba0cc6a9",
                "c0f3f3962b124f4d",
                "b0dc30a9d3cc33b3",
                "b7f03e4c9b786270",
                "f8a161d303c78c9f",
                "5dee02fe72713e1c",
                "5cfcaadffcde603d",
                "46ac375225ce6bc7"
            ]
        ]
    },
    {
        "id": "ff2f6ed3.6bfe9",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Time",
                "value": "time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Wather Quantity",
                "value": "wq",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "time": "",
            "wq": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 1030,
        "y": 920,
        "wires": [
            [
                "a0873a132dba7172"
            ]
        ]
    },
    {
        "id": "abef049fe15621c8",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "310196967e803098",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "65fe65488352d21f",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature",
                "value": "temp",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "hum",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 1030,
        "y": 1040,
        "wires": [
            [
                "cd25439ebe22e426"
            ]
        ]
    },
    {
        "id": "049b93f7204f91b1",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c21beb58291408ad",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "ce41a2620db9ea6d",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature",
                "value": "temp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "hum",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 1030,
        "y": 1160,
        "wires": [
            [
                "02065455ea934856"
            ]
        ]
    },
    {
        "id": "b1db7c1e42f79be3",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1450,
        "y": 920,
        "wires": [
            [
                "ee7d703f796f6f5c"
            ]
        ]
    },
    {
        "id": "2c3ccb8f962238a8",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1450,
        "y": 1040,
        "wires": [
            [
                "abef049fe15621c8"
            ]
        ]
    },
    {
        "id": "3495347332f6129a",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1450,
        "y": 1160,
        "wires": [
            [
                "049b93f7204f91b1"
            ]
        ]
    },
    {
        "id": "a0873a132dba7172",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "import datetime\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ninput_date = datetime.datetime.strptime(msg['payload']['time'], '%Y-%m-%dT%H:%M:%S.%fZ')\nnew_date = input_date.strftime('%H:%M:%S')\n\n\n\ndata = {\n    'time': new_date,\n    'water_quantity': msg['payload']['wq'],\n    'active': active\n}\n\n\nmsg = {'payload':data, 'query':query}\n\n\nreturn msg",
        "outputs": 1,
        "x": 1230,
        "y": 920,
        "wires": [
            [
                "b1db7c1e42f79be3"
            ]
        ]
    },
    {
        "id": "cd25439ebe22e426",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1230,
        "y": 1040,
        "wires": [
            [
                "2c3ccb8f962238a8"
            ]
        ]
    },
    {
        "id": "02065455ea934856",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1230,
        "y": 1160,
        "wires": [
            [
                "3495347332f6129a"
            ]
        ]
    },
    {
        "id": "b750c6e08918475a",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg\n\n\n\n\nquery = \"?id=\" +\"&greenHouseID=\"+ \"&strategyType=irrigation\"\n\nif msg.payload[\"active\"] == \"On\":\n    active = True\nelse:\n    active = False\n    \ntime_list = msg.payload[\"time\"].split(\"T\")[1].split(\".\")[0].split(\":\")\nif int(time_list[0])<9:\n    time_list[0] = \"0\"+str(int(time_list[0])+1)\nelif int(time_list[0])<23:\n    time_list[0] = str(int(time_list[0])+1)\nelse:\n    time_list[0] = \"00\"\n    \ntime = time_list[0]+time_list[1]+time_list[2]\n \ntry:\n    strategyID = msg.payload[\"strategyID\"]\nexcept:\n    payload = {\n        \"time\": time,\n        \"water_quantity\": msg.payload[\"water_quantity\"],\n        \"active\": active\n    }\n    \n    msg = {\n        \"payload\": payload,\n        \"query\": query\n    }\n    \n    return [msg, null, null]\nelse:\n    msg_delete = {\n        \"query\": query+\"&strategyID=\"+str(strategyID)\n    }\n    \n    payload = {\n        \"time\": time,\n        \"water_quantity\": msg.payload[\"water_quantity\"],\n        \"active\": active\n    }\n    \n    msg = {\n        \"payload\": payload,\n        \"query\": query\n    }\n    \n    return [null, msg_delete, msg]",
        "outputs": 1,
        "x": 130,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "56c2878624378dd9",
        "type": "comment",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "info": "There are 3 types of strategies:\n - irrigation\n - environment\n - weather\n\n",
        "x": 380,
        "y": 680,
        "wires": []
    },
    {
        "id": "233d5a52fbcdd02c",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 870,
        "y": 420,
        "wires": [
            [
                "49d0087109c88e32"
            ]
        ]
    },
    {
        "id": "49d0087109c88e32",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 420,
        "wires": [
            [
                "7ffb897dde0865d3"
            ]
        ]
    },
    {
        "id": "fc34ba4a80c6fd1b",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "7ffb897dde0865d3",
        "type": "json",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "e08a024b9c865083",
                "632eab59785df7fa"
            ]
        ]
    },
    {
        "id": "e08a024b9c865083",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 2,
        "width": "5",
        "height": "2",
        "format": "<p>The irrigation strategies are: </p>\n<p>\"<span ng-bind=\"msg['payload']['strat']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "fc34ba4a80c6fd1b"
            ]
        ]
    },
    {
        "id": "7f700d520a9e338d",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 870,
        "y": 60,
        "wires": [
            [
                "720a6ad2f8d9969a"
            ]
        ]
    },
    {
        "id": "720a6ad2f8d9969a",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 60,
        "wires": [
            [
                "3ea2eabc74c48a25"
            ]
        ]
    },
    {
        "id": "f3c2e8b68a39867e",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 140,
        "wires": []
    },
    {
        "id": "3ea2eabc74c48a25",
        "type": "json",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 140,
        "wires": [
            [
                "99c2b737e8582f9a"
            ]
        ]
    },
    {
        "id": "99c2b737e8582f9a",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 2,
        "width": "5",
        "height": "2",
        "format": "<p>The environment strategy is: </p>\n<p>\"Temperature: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span>\"</p>\n<p>\"Humidity: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 140,
        "wires": [
            [
                "f3c2e8b68a39867e"
            ]
        ]
    },
    {
        "id": "c2e891f5ba0cc6a9",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "4275dde1fe0fd44a"
            ]
        ]
    },
    {
        "id": "4275dde1fe0fd44a",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "7f2762f707bf7163"
            ]
        ]
    },
    {
        "id": "190c49cffead4a7f",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "7f2762f707bf7163",
        "type": "json",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "c90590a04e3f9161"
            ]
        ]
    },
    {
        "id": "c90590a04e3f9161",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 2,
        "width": "5",
        "height": "2",
        "format": "<p>The weather strategy associated is: </p>\n<p>\"Temperature: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span>\"</p>\n<p>\"Humidity: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "190c49cffead4a7f"
            ]
        ]
    },
    {
        "id": "8cf57d17.317ad8",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "HTTP Request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 500,
        "y": 1860,
        "wires": [
            [
                "c0d11f2f403acd4b"
            ]
        ]
    },
    {
        "id": "91fb4378.426ea8",
        "type": "inject",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1860,
        "wires": [
            [
                "17c7a802c382a5f1"
            ]
        ]
    },
    {
        "id": "17c7a802c382a5f1",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "func": "#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation\"\nquery = \"?id=0&greenHouseID=0&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 430,
        "y": 1960,
        "wires": [
            [
                "8cf57d17.317ad8"
            ]
        ]
    },
    {
        "id": "d994e33e09faa854",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1980,
        "wires": []
    },
    {
        "id": "c0d11f2f403acd4b",
        "type": "json",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 1920,
        "wires": [
            [
                "8071f12a8089a6de"
            ]
        ]
    },
    {
        "id": "8071f12a8089a6de",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "func": "import json\n\nid = []\n\nfor i in range(len(msg['payload']['strat'])):\n      \n   id.append(msg['payload']['strat'][i]['id'])\n\nmsg['payload'] = id\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1980,
        "wires": [
            [
                "581012edeabc9837"
            ]
        ]
    },
    {
        "id": "581012edeabc9837",
        "type": "change",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1920,
        "wires": [
            [
                "17d0d4f42f0d14e6"
            ]
        ]
    },
    {
        "id": "17d0d4f42f0d14e6",
        "type": "ui_dropdown",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "53cf504.e9555b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 994.5999755859375,
        "y": 1866.800048828125,
        "wires": [
            [
                "d994e33e09faa854"
            ]
        ]
    },
    {
        "id": "c1deaba351725ac4",
        "type": "comment",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "info": "Questo flow permette di fare un GET e prendere gli ID di tutti gli utenti;\n\nPoi questi ID potranno essere usati per visualizzare ad esempio i grafici o altre cose\n\nSi può magari estendere per visualizzare gli id delle greenhouse associati ad uno user\n\n\nSicuramente sarà da cambiare il file python perchè funziona con il vecchio ResourceCatalog",
        "x": 300,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ca70514e7654debb",
        "type": "comment",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "info": "TODO\nControllare come mai se metto un orario nella casella time del form, l'output è un'ora indietro (fusorario inglese). \n- Probabilmente è perchè nodered gira su una raspberry che potrebbe essere settata come fusorario inglese.\n\nCapire come gestire questa cosa",
        "x": 1200,
        "y": 880,
        "wires": []
    },
    {
        "id": "277ebd229a17ebb8",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 800,
        "wires": []
    },
    {
        "id": "c0f3f3962b124f4d",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Strategy ID",
                "value": "strategyID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "strategyID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 830,
        "y": 800,
        "wires": [
            [
                "7498fc6be167e80e"
            ]
        ]
    },
    {
        "id": "c319539ab99bd89d",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1250,
        "y": 800,
        "wires": [
            [
                "277ebd229a17ebb8"
            ]
        ]
    },
    {
        "id": "7498fc6be167e80e",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\n#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID\"+str(msg['payload']['strategyID'])\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1030,
        "y": 800,
        "wires": [
            [
                "c319539ab99bd89d"
            ]
        ]
    },
    {
        "id": "d316eb2c46f3a7d5",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 2340,
        "wires": []
    },
    {
        "id": "376993de58820cd2",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "func": "import json\n\nid = []\n\nfor i in range(len(msg['payload'])):\n      \n   id.append(msg['payload'][i]['id'])\n\nmsg['payload'] = id\n\n\n\nreturn msg",
        "outputs": 1,
        "x": 870,
        "y": 2360,
        "wires": [
            [
                "1f49ce7af54fc959"
            ]
        ]
    },
    {
        "id": "1f49ce7af54fc959",
        "type": "change",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2280,
        "wires": [
            [
                "2cc788370191690f"
            ]
        ]
    },
    {
        "id": "2cc788370191690f",
        "type": "ui_dropdown",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "53cf504.e9555b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1094.5999755859375,
        "y": 2226.800048828125,
        "wires": [
            [
                "d316eb2c46f3a7d5"
            ]
        ]
    },
    {
        "id": "f9169f74c592d0cf",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "HTTP Request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 480,
        "y": 2240,
        "wires": [
            [
                "e0b33a642b878818"
            ]
        ]
    },
    {
        "id": "c846bcc50126f3ae",
        "type": "inject",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2240,
        "wires": [
            [
                "dadd49101e565c02"
            ]
        ]
    },
    {
        "id": "dadd49101e565c02",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "func": "#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation\"\nquery = \"?id=0&greenHouseID=0&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 410,
        "y": 2340,
        "wires": [
            [
                "f9169f74c592d0cf"
            ]
        ]
    },
    {
        "id": "e0b33a642b878818",
        "type": "json",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 2300,
        "wires": [
            [
                "376993de58820cd2"
            ]
        ]
    },
    {
        "id": "223431c3fa681eaf",
        "type": "comment",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "info": "Questo flow permette di fare un GET e prendere gli ID di tutti gli utenti;\n\nPoi questi ID potranno essere usati per visualizzare ad esempio i grafici o altre cose\n\nSi può magari estendere per visualizzare gli id delle greenhouse associati ad uno user\n\n\nSicuramente sarà da cambiare il file python perchè funziona con il vecchio ResourceCatalog",
        "x": 280,
        "y": 2420,
        "wires": []
    },
    {
        "id": "b6b0112b88f71d7f",
        "type": "inject",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 2520,
        "wires": [
            [
                "5a5a6c5d.988b1",
                "698f0c3e244537d4"
            ]
        ]
    },
    {
        "id": "c2940948e2f9f0c9",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2520,
        "wires": []
    },
    {
        "id": "5a5a6c5d.988b1",
        "type": "ui_dropdown",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "f1c642b8.2b2d68",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Option 1",
                "value": "option1",
                "type": "str"
            },
            {
                "label": "Option 2",
                "value": "option2",
                "type": "str"
            },
            {
                "label": "Option 3",
                "value": "option3",
                "type": "str"
            }
        ],
        "topic": "dropdown_topic",
        "topicType": "str",
        "className": "",
        "x": 710,
        "y": 2520,
        "wires": [
            [
                "9cd0c139bcdc6f02"
            ]
        ]
    },
    {
        "id": "bebbd915.c3a21",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "Form",
        "label": "",
        "group": "f1c642b8.2b2d68",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Dropdown Field",
                "value": "dropdown_field",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Text Input Field",
                "value": "text_input_field",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "dropdown_field": "",
            "text_input_field": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "form_topic",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 1150,
        "y": 2520,
        "wires": [
            [
                "c2940948e2f9f0c9"
            ]
        ]
    },
    {
        "id": "9cd0c139bcdc6f02",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "func": "msg['payload'] = {\n    \"dropdown_field\": msg['payload']\n}\nreturn msg",
        "outputs": 1,
        "x": 950,
        "y": 2520,
        "wires": [
            [
                "bebbd915.c3a21"
            ]
        ]
    },
    {
        "id": "698f0c3e244537d4",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "d": true,
        "name": "",
        "label": "",
        "group": "f1c642b8.2b2d68",
        "order": 15,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Ciao",
                "value": "text_input_field",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "text_input_field": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 710,
        "y": 2640,
        "wires": [
            [
                "bebbd915.c3a21"
            ]
        ]
    },
    {
        "id": "632eab59785df7fa",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "import json\n\nid = []\n\nfor i in range(len(msg['payload']['strat'])):\n      \n   id.append(msg['payload']['strat'][i]['id'])\n\nmsg['payload'] = id\n\nreturn msg",
        "outputs": 1,
        "x": 790,
        "y": 640,
        "wires": [
            [
                "641efaf30c1ce8bb"
            ]
        ]
    },
    {
        "id": "641efaf30c1ce8bb",
        "type": "change",
        "z": "ca6e52d66bf110ed",
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "2e2cef256eb85799"
            ]
        ]
    },
    {
        "id": "2e2cef256eb85799",
        "type": "ui_dropdown",
        "z": "ca6e52d66bf110ed",
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "64d6c8b6.5961f8",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "a82599fe14e91d3d"
            ]
        ]
    },
    {
        "id": "a82599fe14e91d3d",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "msg['payload'] = {\n    \"strategyID\": msg['payload']\n}\n\nreturn msg",
        "outputs": 1,
        "x": 1530,
        "y": 640,
        "wires": [
            [
                "c0f3f3962b124f4d"
            ]
        ]
    },
    {
        "id": "f8a161d303c78c9f",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<p>Enables or disables the strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 1400,
        "wires": [
            [
                "ca9fa21993e9acb1"
            ]
        ]
    },
    {
        "id": "b0dc30a9d3cc33b3",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<p>Enables or disables the strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 1340,
        "wires": [
            [
                "331c1e9492d99282"
            ]
        ]
    },
    {
        "id": "b7f03e4c9b786270",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<p>Enables or disables the strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 1460,
        "wires": [
            [
                "5df17353769b8dbd"
            ]
        ]
    },
    {
        "id": "ca9fa21993e9acb1",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 14,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "StrategyID",
                "value": "strategyID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "strategyID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 990,
        "y": 1400,
        "wires": [
            [
                "9557450aa2412ce9"
            ]
        ]
    },
    {
        "id": "331c1e9492d99282",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "65fe65488352d21f",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 990,
        "y": 1340,
        "wires": [
            [
                "59e405e2e14ba3eb"
            ]
        ]
    },
    {
        "id": "5df17353769b8dbd",
        "type": "ui_form",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "label": "",
        "group": "ce41a2620db9ea6d",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "819b68e92bcbf11a"
            ]
        ]
    },
    {
        "id": "9557450aa2412ce9",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&active=\"+ str(active)\n\ndata = {\n    'strategyID' : msg['payload']['strategyID'],\n    'activeStrat' : active\n}\n\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 1210,
        "y": 1400,
        "wires": [
            [
                "422977c7e6ee3085"
            ]
        ]
    },
    {
        "id": "59e405e2e14ba3eb",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment&active=\"+ str(active)\n\ndata = {\n    \n    'activeStrat' : active\n}\n\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 1210,
        "y": 1340,
        "wires": [
            [
                "9d08e625b33808f3"
            ]
        ]
    },
    {
        "id": "819b68e92bcbf11a",
        "type": "python3-function",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "func": "if msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather&active=\"+ str(active)\n\ndata = {\n    \n    'activeStrat' : active\n}\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 1210,
        "y": 1460,
        "wires": [
            [
                "8e340ce853d1af10"
            ]
        ]
    },
    {
        "id": "962d977665d2b401",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1400,
        "wires": []
    },
    {
        "id": "422977c7e6ee3085",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1430,
        "y": 1400,
        "wires": [
            [
                "962d977665d2b401"
            ]
        ]
    },
    {
        "id": "cb36f7ddd8821241",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9d08e625b33808f3",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1430,
        "y": 1340,
        "wires": [
            [
                "cb36f7ddd8821241"
            ]
        ]
    },
    {
        "id": "e50dc5b21906b596",
        "type": "debug",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1460,
        "wires": []
    },
    {
        "id": "8e340ce853d1af10",
        "type": "http request",
        "z": "ca6e52d66bf110ed",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1430,
        "y": 1460,
        "wires": [
            [
                "e50dc5b21906b596"
            ]
        ]
    },
    {
        "id": "5dee02fe72713e1c",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p>Create a new irrigation strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 920,
        "wires": [
            [
                "ff2f6ed3.6bfe9"
            ]
        ]
    },
    {
        "id": "5cfcaadffcde603d",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p>Create a new environment strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "310196967e803098"
            ]
        ]
    },
    {
        "id": "46ac375225ce6bc7",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p>Create a new weather strategy</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "c21beb58291408ad"
            ]
        ]
    },
    {
        "id": "9abe9a78905d9742",
        "type": "ui_template",
        "z": "ca6e52d66bf110ed",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<p>Select a strategy to delete</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "79f2350c8010751a",
        "type": "inject",
        "z": "5f920548ca8e9a53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "ebcbadace0d1f6f6"
            ]
        ]
    },
    {
        "id": "208326bd31e05fb7",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 60,
        "wires": []
    },
    {
        "id": "f617dc5356073180",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "848323c9d1dd3ecc",
                "e891740d3fd41e52",
                "a683b722e9e8ef88"
            ]
        ]
    },
    {
        "id": "848323c9d1dd3ecc",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "import json\nimport time\n\noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    \n    output[0]['data'][0].append(data_t)\n   \n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 1410,
        "y": 100,
        "wires": [
            [
                "363e3e7d8f7c67b4",
                "208326bd31e05fb7"
            ]
        ]
    },
    {
        "id": "363e3e7d8f7c67b4",
        "type": "ui_chart",
        "z": "5f920548ca8e9a53",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "100",
        "removeOlderPoints": "10",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1690,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1927f76a.0b77aa",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "Get URL",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://example.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 300,
        "y": 1180,
        "wires": [
            [
                "2f06eb5d.57be28"
            ]
        ]
    },
    {
        "id": "2f06eb5d.57be28",
        "type": "function",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "Extract URL",
        "func": "// extract URL from the HTTP response\nvar url = msg.payload;\n\n// pass URL to the next HTTP request node\nmsg.url = url;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1180,
        "wires": [
            [
                "efb3079e.4ce6a8"
            ]
        ]
    },
    {
        "id": "efb3079e.4ce6a8",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "Use URL",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 740,
        "y": 1180,
        "wires": [
            [
                "cf4f3d0c.9cafd"
            ]
        ]
    },
    {
        "id": "cf4f3d0c.9cafd",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6816421140599d58",
        "type": "inject",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1380,
        "wires": [
            [
                "228471b30fc0d493",
                "321593e7415d36ba"
            ]
        ]
    },
    {
        "id": "228471b30fc0d493",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "90a390d347fea1fd",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 870,
        "y": 1380,
        "wires": [
            [
                "e3bde409a2f42e8f",
                "48b6a4f1f8aa8c20"
            ]
        ]
    },
    {
        "id": "c07f5ab70b468071",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1180,
        "wires": []
    },
    {
        "id": "48b6a4f1f8aa8c20",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    #data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    #output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 1130,
        "y": 1240,
        "wires": [
            [
                "a3b7c2bf8dc0d1df",
                "c07f5ab70b468071"
            ]
        ]
    },
    {
        "id": "a3b7c2bf8dc0d1df",
        "type": "ui_chart",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1470,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "321593e7415d36ba",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "func": "#url = msg['url']\n\nmsg = {'url' : 'https://thingspeak.com/channels/1714663/feed.json'}\n\nreturn msg",
        "outputs": 1,
        "x": 630,
        "y": 1380,
        "wires": [
            [
                "90a390d347fea1fd"
            ]
        ]
    },
    {
        "id": "e3bde409a2f42e8f",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1360,
        "wires": []
    },
    {
        "id": "975415c1e04451c9",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "#url = msg['payload']['']\n\nmsg = {'url' : 'https://thingspeak.com/channels/1714663/feed.json'}\n\nreturn msg",
        "outputs": 1,
        "x": 930,
        "y": 240,
        "wires": [
            [
                "f617dc5356073180"
            ]
        ]
    },
    {
        "id": "b760c1047f78cd91",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 200,
        "wires": []
    },
    {
        "id": "e891740d3fd41e52",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "import json\nimport time\n\n\noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "b760c1047f78cd91",
                "7a76b2de1f3ba946"
            ]
        ]
    },
    {
        "id": "7a76b2de1f3ba946",
        "type": "ui_chart",
        "z": "5f920548ca8e9a53",
        "name": "",
        "group": "e42281d9419547e2",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1690,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ebcbadace0d1f6f6",
        "type": "ui_form",
        "z": "5f920548ca8e9a53",
        "name": "",
        "label": "",
        "group": "5265b699c4c5e667",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "d6e39c9e203be117",
                "4bd08ba3f21c8f00",
                "1219e04912232082",
                "d6c896dca7034fe8"
            ]
        ]
    },
    {
        "id": "d6c896dca7034fe8",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']\n\nmsg = {'query': query}\n\nreturn msg\n\n",
        "outputs": 1,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "b5aef9d3492e647a"
            ]
        ]
    },
    {
        "id": "b5aef9d3492e647a",
        "type": "http request",
        "z": "5f920548ca8e9a53",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/thingspeak{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "975415c1e04451c9"
            ]
        ]
    },
    {
        "id": "7d266b59360a9536",
        "type": "comment",
        "z": "5f920548ca8e9a53",
        "name": "",
        "info": "Con il form prendo i valori della greenhouse e dello user; \nFaccio il get al catalog e ricevo il channel id o url\nFaccio il get con l'url di thingspeak, prendo i dati e li plotto\n",
        "x": 760,
        "y": 300,
        "wires": []
    },
    {
        "id": "aa617794f575a2df",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 360,
        "wires": []
    },
    {
        "id": "a683b722e9e8ef88",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "import json\nimport time\n\n\noutput = [{\n\"series\": [\"Window\"],\n\"data\": [[]],\n\"labels\": [\"Window\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_w = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field3']}\n    \n    output[0]['data'][0].append(data_w)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 1410,
        "y": 400,
        "wires": [
            [
                "aa617794f575a2df",
                "7feaff814d8a501f"
            ]
        ]
    },
    {
        "id": "7feaff814d8a501f",
        "type": "ui_chart",
        "z": "5f920548ca8e9a53",
        "name": "",
        "group": "0301ba55f59e74c0",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1690,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d361a0ae5ccb0905",
        "type": "mqtt in",
        "z": "5f920548ca8e9a53",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 810,
        "y": 720,
        "wires": [
            [
                "3d157b6a24c700cf"
            ]
        ]
    },
    {
        "id": "d6e39c9e203be117",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/temperature\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/temperature\"\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "d361a0ae5ccb0905"
            ]
        ]
    },
    {
        "id": "615662d64c5ebb60",
        "type": "ui_gauge",
        "z": "5f920548ca8e9a53",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "5a3a020324651d1a",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 780,
        "wires": []
    },
    {
        "id": "3d157b6a24c700cf",
        "type": "json",
        "z": "5f920548ca8e9a53",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 720,
        "wires": [
            [
                "5a3a020324651d1a",
                "615662d64c5ebb60"
            ]
        ]
    },
    {
        "id": "1b4af67c9f2c1f75",
        "type": "mqtt in",
        "z": "5f920548ca8e9a53",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "13ec589eb937c3fb"
            ]
        ]
    },
    {
        "id": "4bd08ba3f21c8f00",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/humidity\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 540,
        "wires": [
            [
                "1b4af67c9f2c1f75"
            ]
        ]
    },
    {
        "id": "fab525cbc8b3ec84",
        "type": "ui_gauge",
        "z": "5f920548ca8e9a53",
        "name": "",
        "group": "e42281d9419547e2",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "30",
        "max": "80",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1160,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe2b1d273c21e0d1",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 600,
        "wires": []
    },
    {
        "id": "13ec589eb937c3fb",
        "type": "json",
        "z": "5f920548ca8e9a53",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 540,
        "wires": [
            [
                "fe2b1d273c21e0d1",
                "fab525cbc8b3ec84"
            ]
        ]
    },
    {
        "id": "e36c2e56b8a77cbb",
        "type": "mqtt in",
        "z": "5f920548ca8e9a53",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 810,
        "y": 900,
        "wires": [
            [
                "f34f0f7099ffb8d2"
            ]
        ]
    },
    {
        "id": "1219e04912232082",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da capire il topic giusto\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/window\"\n\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 900,
        "wires": [
            [
                "e36c2e56b8a77cbb"
            ]
        ]
    },
    {
        "id": "cca989a09a109bd1",
        "type": "debug",
        "z": "5f920548ca8e9a53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 960,
        "wires": []
    },
    {
        "id": "f34f0f7099ffb8d2",
        "type": "json",
        "z": "5f920548ca8e9a53",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 900,
        "wires": [
            [
                "cca989a09a109bd1",
                "b52f99f6f7916fe2"
            ]
        ]
    },
    {
        "id": "c799986f1b792981",
        "type": "ui_text",
        "z": "5f920548ca8e9a53",
        "group": "0301ba55f59e74c0",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 900,
        "wires": []
    },
    {
        "id": "b52f99f6f7916fe2",
        "type": "python3-function",
        "z": "5f920548ca8e9a53",
        "name": "",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 1190,
        "y": 900,
        "wires": [
            [
                "c799986f1b792981"
            ]
        ]
    },
    {
        "id": "e0c59574285bbf51",
        "type": "inject",
        "z": "91b413e493b8fc15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "4f973b926e434c8d"
            ]
        ]
    },
    {
        "id": "4f973b926e434c8d",
        "type": "ui_template",
        "z": "91b413e493b8fc15",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    \n    <p>Welcome this is the home page</p> \n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 480,
        "wires": [
            [
                "50dee5289773895c"
            ]
        ]
    },
    {
        "id": "50dee5289773895c",
        "type": "ui_form",
        "z": "91b413e493b8fc15",
        "name": "",
        "label": "",
        "group": "0e274ee81497bf82",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouseID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 490,
        "y": 480,
        "wires": [
            [
                "d220655f1adfc1a5",
                "0b7004eb038f62e1",
                "da08d714bbb87249",
                "e9e33bf5a8aad88e"
            ]
        ]
    },
    {
        "id": "d220655f1adfc1a5",
        "type": "python3-function",
        "z": "91b413e493b8fc15",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 420,
        "wires": [
            [
                "a8f2ef5e236cbce9",
                "97792b3b06e26790"
            ]
        ]
    },
    {
        "id": "a8f2ef5e236cbce9",
        "type": "http request",
        "z": "91b413e493b8fc15",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_connectors{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 600,
        "wires": [
            [
                "d33b636ec854c11b"
            ]
        ]
    },
    {
        "id": "44c4aa7807bd465f",
        "type": "ui_template",
        "z": "91b413e493b8fc15",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<p>Device associated: </p>\n<p>\"<span ng-bind=\"msg['payload']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "5529ed217e622711"
            ]
        ]
    },
    {
        "id": "5529ed217e622711",
        "type": "debug",
        "z": "91b413e493b8fc15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 600,
        "wires": []
    },
    {
        "id": "0b7004eb038f62e1",
        "type": "python3-function",
        "z": "91b413e493b8fc15",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "b547e228bd6007f5"
            ]
        ]
    },
    {
        "id": "b547e228bd6007f5",
        "type": "http request",
        "z": "91b413e493b8fc15",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 240,
        "wires": [
            [
                "abe734e08e1059f7"
            ]
        ]
    },
    {
        "id": "d5237f04fe6d1b7c",
        "type": "ui_template",
        "z": "91b413e493b8fc15",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>The user attributes are: </p>\n<p>Username: \"<span ng-bind=\"msg['payload']['userName']\"></span>\"</p>\n<p>Name: \"<span ng-bind=\"msg['payload']['name']\"></span>\"</p>\n<p>Surname: \"<span ng-bind=\"msg['payload']['surname']\"></span>\"</p>\n<p>Email: \"<span ng-bind=\"msg['payload']['email_addresses']\"></span>\"</p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "f33e1e95cee51903"
            ]
        ]
    },
    {
        "id": "f33e1e95cee51903",
        "type": "debug",
        "z": "91b413e493b8fc15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 240,
        "wires": []
    },
    {
        "id": "abe734e08e1059f7",
        "type": "json",
        "z": "91b413e493b8fc15",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "d5237f04fe6d1b7c"
            ]
        ]
    },
    {
        "id": "d33b636ec854c11b",
        "type": "json",
        "z": "91b413e493b8fc15",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 600,
        "wires": [
            [
                "44c4aa7807bd465f"
            ]
        ]
    },
    {
        "id": "97792b3b06e26790",
        "type": "http request",
        "z": "91b413e493b8fc15",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 420,
        "wires": [
            [
                "4fbf30d803aa4314"
            ]
        ]
    },
    {
        "id": "f6216242928d3c9a",
        "type": "ui_template",
        "z": "91b413e493b8fc15",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p>Greenhouse informations: </p>\n<p>Greenhouse name: \"<span ng-bind=\"msg['payload']['greenHouseName']\"></span>\"</p>\n<p>Greenhouse location: \"<span ng-bind=\"msg['payload']['city']\"></span>\"</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 420,
        "wires": [
            [
                "2c5c063ec60522cd"
            ]
        ]
    },
    {
        "id": "2c5c063ec60522cd",
        "type": "debug",
        "z": "91b413e493b8fc15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 420,
        "wires": []
    },
    {
        "id": "4fbf30d803aa4314",
        "type": "json",
        "z": "91b413e493b8fc15",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "f6216242928d3c9a"
            ]
        ]
    },
    {
        "id": "fcf5c33349c873ca",
        "type": "mqtt in",
        "z": "91b413e493b8fc15",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 950,
        "y": 960,
        "wires": [
            [
                "3e71ef7b4e96fb7a"
            ]
        ]
    },
    {
        "id": "e9e33bf5a8aad88e",
        "type": "python3-function",
        "z": "91b413e493b8fc15",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/temperature\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/temperature\"\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 960,
        "wires": [
            [
                "fcf5c33349c873ca"
            ]
        ]
    },
    {
        "id": "f12794795b7e5178",
        "type": "ui_gauge",
        "z": "91b413e493b8fc15",
        "name": "",
        "group": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1310,
        "y": 960,
        "wires": []
    },
    {
        "id": "d195e0c436d77034",
        "type": "debug",
        "z": "91b413e493b8fc15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3e71ef7b4e96fb7a",
        "type": "json",
        "z": "91b413e493b8fc15",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 960,
        "wires": [
            [
                "d195e0c436d77034",
                "f12794795b7e5178"
            ]
        ]
    },
    {
        "id": "9516b0ed328b4d3d",
        "type": "mqtt in",
        "z": "91b413e493b8fc15",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 950,
        "y": 780,
        "wires": [
            [
                "094e7627a75b487c"
            ]
        ]
    },
    {
        "id": "da08d714bbb87249",
        "type": "python3-function",
        "z": "91b413e493b8fc15",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/humidity\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 780,
        "wires": [
            [
                "9516b0ed328b4d3d"
            ]
        ]
    },
    {
        "id": "5709f07cad470f07",
        "type": "ui_gauge",
        "z": "91b413e493b8fc15",
        "name": "",
        "group": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "30",
        "max": "80",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1300,
        "y": 780,
        "wires": []
    },
    {
        "id": "f04a3eb3eaf81e8a",
        "type": "debug",
        "z": "91b413e493b8fc15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 840,
        "wires": []
    },
    {
        "id": "094e7627a75b487c",
        "type": "json",
        "z": "91b413e493b8fc15",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 780,
        "wires": [
            [
                "f04a3eb3eaf81e8a",
                "5709f07cad470f07"
            ]
        ]
    },
    {
        "id": "33e4376328b92e7d",
        "type": "inject",
        "z": "9c4100fe204ec867",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "1df048557b05f46e"
            ]
        ]
    },
    {
        "id": "1df048557b05f46e",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<div>\n    \n    <p>Welcome this is the home page</p> \n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6fe0417218bfcb2d",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This is the home page",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "9312cd91ea461171",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']}\n\nreturn msg",
        "outputs": 1,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "e6366b626e43446a"
            ]
        ]
    },
    {
        "id": "10c44642aa82371b",
        "type": "inject",
        "z": "9c4100fe204ec867",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "61053680c5d65dad",
                "645b334efa14db86"
            ]
        ]
    },
    {
        "id": "e6366b626e43446a",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "7fb04ee8f8c2ca3a"
            ]
        ]
    },
    {
        "id": "e07ec5bdf9fe89e2",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "61053680c5d65dad",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "05f5e31d0c024ebe",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "9312cd91ea461171"
            ]
        ]
    },
    {
        "id": "8feaddaac5c0c160",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "Do a GET of a desired user and return the greenhouses associated",
        "x": 360,
        "y": 340,
        "wires": []
    },
    {
        "id": "7fb04ee8f8c2ca3a",
        "type": "json",
        "z": "9c4100fe204ec867",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 380,
        "wires": [
            [
                "fa7cad0bc0296e59"
            ]
        ]
    },
    {
        "id": "fa7cad0bc0296e59",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "05f5e31d0c024ebe",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The greenhouses associated to the user are: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 380,
        "wires": [
            [
                "e07ec5bdf9fe89e2"
            ]
        ]
    },
    {
        "id": "fda635dc697c2515",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "to visualize the list of greenhouses select the correct msg['payload'] #TODO",
        "x": 820,
        "y": 440,
        "wires": []
    },
    {
        "id": "467f7c253091bbe4",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg = {'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']}\n\nreturn msg",
        "outputs": 1,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "e48b6597885909ce"
            ]
        ]
    },
    {
        "id": "e48b6597885909ce",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 790,
        "y": 520,
        "wires": [
            [
                "518cbe061f2d8f43"
            ]
        ]
    },
    {
        "id": "f25352711d82f95b",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 600,
        "wires": []
    },
    {
        "id": "645b334efa14db86",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "3d9e45e.bcd50ba",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GreenHouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "467f7c253091bbe4"
            ]
        ]
    },
    {
        "id": "e8a9f20df8d2bfff",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "Do a GET of a desired user and greenhouse and return the devices inside the greenhouse",
        "x": 360,
        "y": 560,
        "wires": []
    },
    {
        "id": "518cbe061f2d8f43",
        "type": "json",
        "z": "9c4100fe204ec867",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 600,
        "wires": [
            [
                "8735b3234ae12ed1"
            ]
        ]
    },
    {
        "id": "8735b3234ae12ed1",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "3d9e45e.bcd50ba",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The devices associated to the greenhouse are: </p>\n<p>\"<span ng-bind=\"msg['payload']['deviceName']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 600,
        "wires": [
            [
                "f25352711d82f95b"
            ]
        ]
    },
    {
        "id": "6a4a728f442421b4",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "to visualize the list of devices select the correct msg['payload'] #TODO",
        "x": 820,
        "y": 660,
        "wires": []
    },
    {
        "id": "0349b58922510a06",
        "type": "inject",
        "z": "9c4100fe204ec867",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "e799a75b447d366d",
                "797346291bddfb77",
                "e291aaf17713c7f9",
                "c2378df7df0bc874",
                "62198c1c76eaf295",
                "f0d904fc5c122331",
                "d4ba4328bbd52de1",
                "79551998d10f290c"
            ]
        ]
    },
    {
        "id": "e799a75b447d366d",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenHouseID",
                "value": "id",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "greenHouseName": "",
            "city": "",
            "uid": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 1160,
        "wires": [
            [
                "7837f3bfbb144688"
            ]
        ]
    },
    {
        "id": "9f0b746476476d41",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "6d8f9bcb5186673e",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "797346291bddfb77",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "573e0e4a.d065e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 1580,
        "wires": [
            [
                "737e879a7b398601"
            ]
        ]
    },
    {
        "id": "82d90cddfcd67b35",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 760,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "e291aaf17713c7f9",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 14,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "5977cbaa57c0b5d9"
            ]
        ]
    },
    {
        "id": "c0d796dd86d67d95",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to create a new user. We use POST",
        "x": 620,
        "y": 800,
        "wires": []
    },
    {
        "id": "85890a1b5a5cd2f5",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 860,
        "wires": [
            [
                "fab1aa6378f7bd3b"
            ]
        ]
    },
    {
        "id": "fab1aa6378f7bd3b",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "12b25eb3f8424d90",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to modify an already existing user. We use PUT",
        "x": 620,
        "y": 900,
        "wires": []
    },
    {
        "id": "c2378df7df0bc874",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "userName",
                "value": "userName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "surname",
                "value": "surname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "email_addresses",
                "value": "email_addresses",
                "type": "email",
                "required": false,
                "rows": null
            },
            {
                "label": "country",
                "value": "country",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 860,
        "wires": [
            [
                "85890a1b5a5cd2f5"
            ]
        ]
    },
    {
        "id": "ff53c24e54d2be09",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to create a new greenhouse to an existing user. Use POST",
        "x": 620,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7837f3bfbb144688",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "9f0b746476476d41"
            ]
        ]
    },
    {
        "id": "737e879a7b398601",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid'] }\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1580,
        "wires": [
            [
                "6d8f9bcb5186673e"
            ]
        ]
    },
    {
        "id": "62198c1c76eaf295",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "city",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "greenHouseName": "",
            "city": "",
            "uid": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "aff08f9e46c3a61f"
            ]
        ]
    },
    {
        "id": "61fc339847abdf4c",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1260,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "33f9578480e2128d",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 620,
        "y": 1300,
        "wires": []
    },
    {
        "id": "aff08f9e46c3a61f",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\n#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['id']}\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1260,
        "wires": [
            [
                "61fc339847abdf4c"
            ]
        ]
    },
    {
        "id": "ed08703a7090dab6",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f8fe6e5b70252656",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to create a new devices of a specific user and in a specific greenhouse. We use POST",
        "x": 620,
        "y": 1620,
        "wires": []
    },
    {
        "id": "fa1965b0ac72b62b",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1680,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "f0d904fc5c122331",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "a33bdf9dd6f9fc5e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "device name",
                "value": "deviceName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature ",
                "value": "Temperature",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "Humidity",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidifier",
                "value": "Humidifier",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Fan",
                "value": "Fan",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "MQTT",
                "value": "MQTT",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "REST",
                "value": "REST",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "deviceName": "",
            "Temperature": false,
            "Humidity": false,
            "Humidifier": false,
            "Fan": false,
            "Light": false,
            "MQTT": false,
            "REST": false,
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 610,
        "y": 1680,
        "wires": [
            [
                "66894683be412283"
            ]
        ]
    },
    {
        "id": "66894683be412283",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1680,
        "wires": [
            [
                "fa1965b0ac72b62b"
            ]
        ]
    },
    {
        "id": "f5d7e48f2188f087",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to modify an already existing device of a specific user and in a specific greenhouse. We use PUT",
        "x": 620,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d4ba4328bbd52de1",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "edded25c257e2620",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 960,
        "wires": [
            [
                "b70e6e3fbb612bb6"
            ]
        ]
    },
    {
        "id": "b70e6e3fbb612bb6",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 960,
        "wires": [
            [
                "8dca7c5dad71bd18"
            ]
        ]
    },
    {
        "id": "8dca7c5dad71bd18",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 960,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "79551998d10f290c",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "3ca67b85ec7cd5f7",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 610,
        "y": 1360,
        "wires": [
            [
                "ff9a0c82580272db"
            ]
        ]
    },
    {
        "id": "b34048a97ca5e6da",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1360,
        "wires": [
            [
                "ed08703a7090dab6"
            ]
        ]
    },
    {
        "id": "161df7f8bd6bc06e",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 620,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ff9a0c82580272db",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\nquery =  \"?id=\"+ msg['payload']['uid'] + \"&greenHouseID=\"+ msg['payload']['id']\npayload = msg['payload']\npayload.pop('uid')\npayload.pop('id')\nmsg = {'payload' : payload, 'query': query}\n\n#msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['id']}\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1360,
        "wires": [
            [
                "b34048a97ca5e6da"
            ]
        ]
    },
    {
        "id": "c70b7680cd1cebac",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_manager{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "194b19333632bf43",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "19aa5479d361a25a",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user id",
                "value": "uid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouse id",
                "value": "gid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "device id",
                "value": "did",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uid": "",
            "gid": "",
            "did": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 610,
        "y": 1780,
        "wires": [
            [
                "da1a9134885a3e52"
            ]
        ]
    },
    {
        "id": "da1a9134885a3e52",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\npayload = msg['payload']\nmeasurements = ['Temperature', 'Humidity', 'Wind', 'Pressure', 'Precipitation']\nactuators = ['Humidifier', 'Window']\navailableServices = ['MQTT', 'REST']\ncontent = {\"deviceName\": \"\",\n           \"measureTypes\": [],\n           \"actuatorsTypes\" : [],\n           \"availableServices\": []}\n\ncontent['deviceName'] = payload['deviceName']\n\nfor measure in measurements:\n    if payload[measure]:\n        content['measureTypes'].append(measure)\n\nfor actuator in actuators:\n    if payload[actuator]:\n        content['actuatorsTypes'].append(actuator)\n\nfor service in availableServices:\n    if payload[service]:\n        content['availableServices'].append(service)\n\nmsg = {'payload' : content, 'query': \"?id=\"+ msg['payload']['uid']+\"&greenHouseID=\"+ msg['payload']['gid']+\"&deviceID=\"+ msg['payload']['did'] }\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1780,
        "wires": [
            [
                "c70b7680cd1cebac"
            ]
        ]
    },
    {
        "id": "1c27a44ce2516149",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "This flow is to modify an already existing device of a specific user and in a specific greenhouse. We use PUT",
        "x": 620,
        "y": 1820,
        "wires": []
    },
    {
        "id": "ecf1154bef8c9145",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "67727da5eb05f40c",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 1940,
        "wires": [
            [
                "7b73d84dcad0b0cb"
            ]
        ]
    },
    {
        "id": "b673ac22741c9e63",
        "type": "inject",
        "z": "9c4100fe204ec867",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2000,
        "wires": [
            [
                "67727da5eb05f40c",
                "0c89cbb1877e8289"
            ]
        ]
    },
    {
        "id": "7b73d84dcad0b0cb",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    #data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    #output[0]['data'][0].append(data_t)\n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 810,
        "y": 1940,
        "wires": [
            [
                "11bc9be5122343ae",
                "ecf1154bef8c9145"
            ]
        ]
    },
    {
        "id": "11bc9be5122343ae",
        "type": "ui_chart",
        "z": "9c4100fe204ec867",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "86114cca96c05151",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "0c89cbb1877e8289",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/1714663/feed.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 2180,
        "wires": [
            [
                "be580c190c9818a0"
            ]
        ]
    },
    {
        "id": "be580c190c9818a0",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "import json\nimport time\n\n\n#test = json.loads(msg)\n\"\"\"\ndata = msg.payload \nlen_json = len(data['feeds'])\n\ntemp = []\nhum = []\n\nfor i in range(len_json):\n    \n    temp.append(data['feeds'][i]['field1'])\n    hum.append(data['feeds'][i]['field2'])\n\"\"\"    \noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    #data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_t)\n    #output[0]['data'][1].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 810,
        "y": 2180,
        "wires": [
            [
                "0556857ab0dc48f5",
                "86114cca96c05151"
            ]
        ]
    },
    {
        "id": "0556857ab0dc48f5",
        "type": "ui_chart",
        "z": "9c4100fe204ec867",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "5977cbaa57c0b5d9",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg = {'payload' : msg['payload'], 'query': \"?id=\"+ msg['payload']['id']}\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 760,
        "wires": [
            [
                "82d90cddfcd67b35"
            ]
        ]
    },
    {
        "id": "b273ce760eed319c",
        "type": "inject",
        "z": "9c4100fe204ec867",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 2920,
        "wires": [
            [
                "ffadbaee0d424bb7"
            ]
        ]
    },
    {
        "id": "293321fb6a51816f",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3220,
        "wires": []
    },
    {
        "id": "ffadbaee0d424bb7",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "9d727495b0d451c0",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 290,
        "y": 2920,
        "wires": [
            [
                "a56a424b207428ef",
                "920844550d970945",
                "7d225a88aaa3ff44",
                "9623e592c7ae7523",
                "0ae7322e1c529c03",
                "cfd65f48a818f4fa",
                "fbde6a1d82c573dc"
            ]
        ]
    },
    {
        "id": "a56a424b207428ef",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "4165b9c9.8aae64",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Time",
                "value": "time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Wather Quantity",
                "value": "wq",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "time": "",
            "wq": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 690,
        "y": 3220,
        "wires": [
            [
                "48e937fb71c17ee6"
            ]
        ]
    },
    {
        "id": "32db02155ebf8fe4",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3340,
        "wires": []
    },
    {
        "id": "920844550d970945",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 17,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature",
                "value": "temp",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "hum",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 690,
        "y": 3340,
        "wires": [
            [
                "b60ed322d7959b69"
            ]
        ]
    },
    {
        "id": "dde9ef953e786313",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3460,
        "wires": []
    },
    {
        "id": "7d225a88aaa3ff44",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "bfddf490e5e77379",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature",
                "value": "temp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity",
                "value": "hum",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 690,
        "y": 3460,
        "wires": [
            [
                "fa16829bba93ba65"
            ]
        ]
    },
    {
        "id": "c1033c05e1452b1d",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1110,
        "y": 3220,
        "wires": [
            [
                "293321fb6a51816f"
            ]
        ]
    },
    {
        "id": "9e3f058c096cc0a9",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1110,
        "y": 3340,
        "wires": [
            [
                "32db02155ebf8fe4"
            ]
        ]
    },
    {
        "id": "0f8c8fe44bf17d77",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1110,
        "y": 3460,
        "wires": [
            [
                "dde9ef953e786313"
            ]
        ]
    },
    {
        "id": "48e937fb71c17ee6",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "import datetime\nquery = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ninput_date = datetime.datetime.strptime(msg['payload']['time'], '%Y-%m-%dT%H:%M:%S.%fZ')\nnew_date = input_date.strftime('%H:%M:%S')\n\n\n\ndata = {\n    'time': new_date,\n    'water_quantity': msg['payload']['wq'],\n    'active': active\n}\n\n\nmsg = {'payload':data, 'query':query}\n\n\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 3220,
        "wires": [
            [
                "c1033c05e1452b1d"
            ]
        ]
    },
    {
        "id": "b60ed322d7959b69",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=environment\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 3340,
        "wires": [
            [
                "9e3f058c096cc0a9"
            ]
        ]
    },
    {
        "id": "fa16829bba93ba65",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=weather\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 3460,
        "wires": [
            [
                "0f8c8fe44bf17d77"
            ]
        ]
    },
    {
        "id": "d30484d5cc17a2fc",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "There are 3 types of strategies:\n - irrigation\n - environment\n - weather\n\n",
        "x": 240,
        "y": 2980,
        "wires": []
    },
    {
        "id": "9623e592c7ae7523",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 2720,
        "wires": [
            [
                "3fe3ab68248b980d"
            ]
        ]
    },
    {
        "id": "3fe3ab68248b980d",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 2720,
        "wires": [
            [
                "0efcfe35f07c1940"
            ]
        ]
    },
    {
        "id": "fac4ef3bada41879",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2800,
        "wires": []
    },
    {
        "id": "0efcfe35f07c1940",
        "type": "json",
        "z": "9c4100fe204ec867",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 2800,
        "wires": [
            [
                "d321ecf9eba9146c",
                "b6d405233bad843c"
            ]
        ]
    },
    {
        "id": "d321ecf9eba9146c",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "4165b9c9.8aae64",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The irrigation strategy is: </p>\n<p>\"<span ng-bind=\"msg['payload']['strat']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 2800,
        "wires": [
            [
                "fac4ef3bada41879"
            ]
        ]
    },
    {
        "id": "0ae7322e1c529c03",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=environment\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 2360,
        "wires": [
            [
                "bdb36edb7b41b179"
            ]
        ]
    },
    {
        "id": "bdb36edb7b41b179",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 2360,
        "wires": [
            [
                "1ead9ae61b2f69ff"
            ]
        ]
    },
    {
        "id": "08eba30f6ac32aad",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2440,
        "wires": []
    },
    {
        "id": "1ead9ae61b2f69ff",
        "type": "json",
        "z": "9c4100fe204ec867",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 2440,
        "wires": [
            [
                "b11a47c3191191d9"
            ]
        ]
    },
    {
        "id": "b11a47c3191191d9",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 16,
        "width": "5",
        "height": "2",
        "format": "<p>The environment strategy is: </p>\n<p>\"Temperature: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span>\"</p>\n<p>\"Humidity: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 2440,
        "wires": [
            [
                "08eba30f6ac32aad"
            ]
        ]
    },
    {
        "id": "cfd65f48a818f4fa",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=weather\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 2540,
        "wires": [
            [
                "4c672767e2edb33c"
            ]
        ]
    },
    {
        "id": "4c672767e2edb33c",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 2540,
        "wires": [
            [
                "c9500966f5a10204"
            ]
        ]
    },
    {
        "id": "6d9bfc118d4b7fe1",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2620,
        "wires": []
    },
    {
        "id": "c9500966f5a10204",
        "type": "json",
        "z": "9c4100fe204ec867",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 2620,
        "wires": [
            [
                "bc51ceadcb567fa7"
            ]
        ]
    },
    {
        "id": "bc51ceadcb567fa7",
        "type": "ui_template",
        "z": "9c4100fe204ec867",
        "group": "bfddf490e5e77379",
        "name": "",
        "order": 13,
        "width": "5",
        "height": "2",
        "format": "<p>The weather strategy associated is: </p>\n<p>\"Temperature: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span>\"</p>\n<p>\"Humidity: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 2620,
        "wires": [
            [
                "6d9bfc118d4b7fe1"
            ]
        ]
    },
    {
        "id": "924524e46362bc22",
        "type": "comment",
        "z": "9c4100fe204ec867",
        "name": "",
        "info": "TODO\nControllare come mai se metto un orario nella casella time del form, l'output è un'ora indietro (fusorario inglese). \n- Probabilmente è perchè nodered gira su una raspberry che potrebbe essere settata come fusorario inglese.\n\nCapire come gestire questa cosa",
        "x": 860,
        "y": 3180,
        "wires": []
    },
    {
        "id": "cb1dfda79598b238",
        "type": "debug",
        "z": "9c4100fe204ec867",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3100,
        "wires": []
    },
    {
        "id": "fbde6a1d82c573dc",
        "type": "ui_form",
        "z": "9c4100fe204ec867",
        "name": "",
        "label": "",
        "group": "4165b9c9.8aae64",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Strategy ID",
                "value": "strategyID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "strategyID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 690,
        "y": 3100,
        "wires": [
            [
                "b5e85be6a38fdf16"
            ]
        ]
    },
    {
        "id": "57fc71cad1189c18",
        "type": "http request",
        "z": "9c4100fe204ec867",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1110,
        "y": 3100,
        "wires": [
            [
                "cb1dfda79598b238"
            ]
        ]
    },
    {
        "id": "b5e85be6a38fdf16",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "\nquery = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\n#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID\"+str(msg['payload']['strategyID'])\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 890,
        "y": 3100,
        "wires": [
            [
                "57fc71cad1189c18"
            ]
        ]
    },
    {
        "id": "b6d405233bad843c",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "import json\n\nid = []\n\nfor i in range(len(msg['payload']['strat'])):\n      \n   id.append(msg['payload']['strat'][i]['id'])\n\nmsg['payload'] = id\n\nreturn msg",
        "outputs": 1,
        "x": 650,
        "y": 2940,
        "wires": [
            [
                "03d9c8520e289903"
            ]
        ]
    },
    {
        "id": "03d9c8520e289903",
        "type": "change",
        "z": "9c4100fe204ec867",
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 2940,
        "wires": [
            [
                "810ac84a74cbaf37"
            ]
        ]
    },
    {
        "id": "810ac84a74cbaf37",
        "type": "ui_dropdown",
        "z": "9c4100fe204ec867",
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "4165b9c9.8aae64",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1130,
        "y": 2940,
        "wires": [
            [
                "4e77effcb1a2254e"
            ]
        ]
    },
    {
        "id": "4e77effcb1a2254e",
        "type": "python3-function",
        "z": "9c4100fe204ec867",
        "name": "",
        "func": "msg['payload'] = {\n    \"strategyID\": msg['payload']\n}\n\nreturn msg",
        "outputs": 1,
        "x": 1390,
        "y": 2940,
        "wires": [
            [
                "fbde6a1d82c573dc"
            ]
        ]
    },
    {
        "id": "ecce07d93a636493",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "16deea545600df58",
                "7b8b5e226306f254"
            ]
        ]
    },
    {
        "id": "16deea545600df58",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    \n    <h1>Welcome to the HOME PAGE!</h1>\n    <br>\n    <p>Insert an <b>user ID</b> and <b>greenhouse ID</b> to receive information and statistics about them</p>\n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-1",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "6b48906497f7c05d"
            ]
        ]
    },
    {
        "id": "6b48906497f7c05d",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "0e274ee81497bf82",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "74e0dc4bce1d1446",
                "197990040c1bcea9",
                "8608905770537a7a",
                "a40245cde3c690df",
                "4491add2c81d7368",
                "a765284c1eb0d4ef",
                "c172a47fe858f676"
            ]
        ]
    },
    {
        "id": "74e0dc4bce1d1446",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "96ce07f6973c09d2",
                "fb5cb5e1290bcdf1"
            ]
        ]
    },
    {
        "id": "fb5cb5e1290bcdf1",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/device_connectors{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "1613f5a1cd33fc26"
            ]
        ]
    },
    {
        "id": "466352cfe6944085",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "device info",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<h3>Devices associated:</h3>\n<br>\n<p>SENSORS:</p>\n<ul>\n    <li ng-repeat=\"sensor in msg.payload[0].devices.sensors\">{{ sensor }}</li>\n</ul>\n<p>ACTUATORS:</p>\n<ul>\n    <li ng-repeat=\"actuator in msg.payload[0].devices.actuators\">{{ actuator }}</li>\n</ul>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-4",
        "x": 1590,
        "y": 500,
        "wires": [
            [
                "6c593910232cacfb"
            ]
        ]
    },
    {
        "id": "6c593910232cacfb",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 500,
        "wires": []
    },
    {
        "id": "314cf227ce95c194",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "ed78844afc9edea3"
            ]
        ]
    },
    {
        "id": "ed78844afc9edea3",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 120,
        "wires": [
            [
                "cbc8fee51389dd33"
            ]
        ]
    },
    {
        "id": "6983386f02f85a7b",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "greenhouse info",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<h3>The user attributes are: </h3>\n<br>\n<p>USERNAME: <span ng-bind=\"msg['payload']['userName']\"></span></p>\n<p>NAME: <span ng-bind=\"msg['payload']['name']\"></span></p>\n<p>SURNAME: <span ng-bind=\"msg['payload']['surname']\"></span></p>\n<p>EMAIL: <span ng-bind=\"msg['payload']['email_addresses']\"></span></p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-2",
        "x": 1600,
        "y": 120,
        "wires": [
            [
                "d1d20d7261fa1d31"
            ]
        ]
    },
    {
        "id": "d1d20d7261fa1d31",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 120,
        "wires": []
    },
    {
        "id": "3b138dd68bffa83b",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "6983386f02f85a7b",
                "a9b4d06e56271b23"
            ]
        ]
    },
    {
        "id": "2244a2278cf16a30",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 500,
        "wires": [
            [
                "466352cfe6944085",
                "0326532f29ee6b7c"
            ]
        ]
    },
    {
        "id": "96ce07f6973c09d2",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 320,
        "wires": [
            [
                "496999e9d36d4e9d"
            ]
        ]
    },
    {
        "id": "112b8f49e109c0cd",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 320,
        "wires": []
    },
    {
        "id": "44a799ba54fc21aa",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 320,
        "wires": [
            [
                "690cc002ee0499aa",
                "56c3f5bc2bc5cecb"
            ]
        ]
    },
    {
        "id": "47891cc460d6088e",
        "type": "mqtt in",
        "z": "dfa5f5222d797092",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "d1d7802f3b5f042a"
            ]
        ]
    },
    {
        "id": "197990040c1bcea9",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/temperature\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/temperature\"\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 980,
        "wires": [
            [
                "47891cc460d6088e"
            ]
        ]
    },
    {
        "id": "e34ee081ad0b1faf",
        "type": "ui_gauge",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "graph-temperature",
        "x": 1570,
        "y": 980,
        "wires": []
    },
    {
        "id": "40434672e9959c1e",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cc978f42f967bbd9",
        "type": "mqtt in",
        "z": "dfa5f5222d797092",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1090,
        "y": 800,
        "wires": [
            [
                "1017c561b051c3b6"
            ]
        ]
    },
    {
        "id": "c172a47fe858f676",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/humidity\"\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 800,
        "wires": [
            [
                "cc978f42f967bbd9"
            ]
        ]
    },
    {
        "id": "148f517f821a8373",
        "type": "ui_gauge",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Humidity",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": "0",
        "max": "1",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "graph-humidity",
        "x": 1580,
        "y": 800,
        "wires": []
    },
    {
        "id": "c7c687f2ce435ace",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 860,
        "wires": []
    },
    {
        "id": "986f6910a8576ea3",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1580,
        "wires": [
            [
                "0f1e9e829ab79d3f",
                "108c9bc98d6621fb",
                "a40a005eb19865c1",
                "ef86d9c0ca760d07"
            ]
        ]
    },
    {
        "id": "60a897d576a4c0ed",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "1e1cb426.2b813c",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "City",
                "value": "city",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "greenHouseName": "",
            "city": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 730,
        "y": 1860,
        "wires": [
            [
                "9b0de6f4d03543a0"
            ]
        ]
    },
    {
        "id": "691cb6c172855003",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1190,
        "y": 1860,
        "wires": [
            [
                "38fea345ee9d6689"
            ]
        ]
    },
    {
        "id": "d5087b8e455aa512",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 1300,
        "wires": [
            [
                "525054fe7408026a"
            ]
        ]
    },
    {
        "id": "8b9f5b0f2df54dc0",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "703824db.9d74a4",
        "order": 17,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Email address",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Country",
                "value": "country",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "password": "",
            "name": "",
            "surname": "",
            "email_addresses": "",
            "country": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 770,
        "y": 1300,
        "wires": [
            [
                "b9d47b0ebc1d973d"
            ]
        ]
    },
    {
        "id": "e8640d19bf8f25e6",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "This flow is to create a new user. We use POST",
        "x": 780,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6010b1b38f44f28d",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\ndata = {\n    'userName' : msg['payload']['userName'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses']\n}\n\nmsg = {'payload' : data, 'query' : query}\nreturn msg",
        "outputs": 1,
        "x": 1590,
        "y": 1540,
        "wires": [
            [
                "4bae7879b06d02c7"
            ]
        ]
    },
    {
        "id": "4bae7879b06d02c7",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 1540,
        "wires": [
            [
                "4c77b1c5c88a5d75",
                "22c92e9aa466afef"
            ]
        ]
    },
    {
        "id": "7beae403d5fde370",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "This flow is to modify an already existing user. We use PUT",
        "x": 1380,
        "y": 1580,
        "wires": []
    },
    {
        "id": "12ad55b148968a48",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "userName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surname",
                "value": "surname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Email address",
                "value": "email_addresses",
                "type": "email",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "userName": "",
            "name": "",
            "surname": "",
            "email_addresses": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 1370,
        "y": 1540,
        "wires": [
            [
                "6010b1b38f44f28d"
            ]
        ]
    },
    {
        "id": "9b177e5d43718e3a",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "This flow is to create a new greenhouse to an existing user. Use POST",
        "x": 740,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9b0de6f4d03543a0",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\n\nquery =  \"?id=\"+ str(msg['payload']['id']) \n\ndata = {\n    'greenHouseName' :  msg['payload']['greenHouseName'],\n    'greenHouseID' : msg['payload']['greenHouseID'],\n    'city' : msg['payload']['city'],\n}\n\nmsg = {'payload' : data, 'query': query}\n\nreturn msg\n\n\n",
        "outputs": 1,
        "x": 950,
        "y": 1860,
        "wires": [
            [
                "691cb6c172855003"
            ]
        ]
    },
    {
        "id": "f929205cee509714",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse name",
                "value": "greenHouseName",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "greenHouseName": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 970,
        "y": 2240,
        "wires": [
            [
                "a80c9e4277aac80d"
            ]
        ]
    },
    {
        "id": "5a8ff3bbc6c4067c",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1450,
        "y": 2240,
        "wires": [
            [
                "930b5eeaa07f5146",
                "f111f7d0464ab216"
            ]
        ]
    },
    {
        "id": "5aeb9533549b5aa3",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 760,
        "y": 2240,
        "wires": []
    },
    {
        "id": "a80c9e4277aac80d",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nquery =  \"?id=\"+ str(msg['payload']['id']) + \"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\ndata = {\n    \n    'greenHouseID': msg['payload']['greenHouseID'],\n    'greenHouseName': msg['payload']['greenHouseName']\n   \n}\n\nmsg = {'payload' : data, 'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 1210,
        "y": 2240,
        "wires": [
            [
                "5a8ff3bbc6c4067c"
            ]
        ]
    },
    {
        "id": "4c77b1c5c88a5d75",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "bb9a30baa05d4d31",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "edded25c257e2620",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 770,
        "y": 1700,
        "wires": [
            [
                "1daf945b099165f2"
            ]
        ]
    },
    {
        "id": "1daf945b099165f2",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 1700,
        "wires": [
            [
                "73463e1e587d2b4c"
            ]
        ]
    },
    {
        "id": "73463e1e587d2b4c",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1250,
        "y": 1700,
        "wires": [
            [
                "abfb635f023cdc12"
            ]
        ]
    },
    {
        "id": "70804627e9613264",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "3ca67b85ec7cd5f7",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 730,
        "y": 2360,
        "wires": [
            [
                "89937949971949cc"
            ]
        ]
    },
    {
        "id": "071f56fd8b10c345",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1190,
        "y": 2360,
        "wires": [
            [
                "50517df343ea60f0"
            ]
        ]
    },
    {
        "id": "7093327bd3643598",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "This flow is to modify an already existing greenhouse, selecting user and greenhouse id. Use PUT",
        "x": 740,
        "y": 2400,
        "wires": []
    },
    {
        "id": "89937949971949cc",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nquery =  \"?id=\"+ str(msg['payload']['id']) + \"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 950,
        "y": 2360,
        "wires": [
            [
                "071f56fd8b10c345"
            ]
        ]
    },
    {
        "id": "b9d47b0ebc1d973d",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\n#query =  \"?id=\"+ str(msg['payload']['id'])\n\ndata = {\n    'userName' : msg['payload']['userName'],\n    'password' : msg['payload']['password'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses'],\n    'country' : msg['payload']['country']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 1300,
        "wires": [
            [
                "d5087b8e455aa512"
            ]
        ]
    },
    {
        "id": "8c31694ffc898504",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 1420,
        "wires": [
            [
                "19938b85b3821efe"
            ]
        ]
    },
    {
        "id": "333c2a4f7a6537f2",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 770,
        "y": 1420,
        "wires": [
            [
                "79768fcc7afafb3f"
            ]
        ]
    },
    {
        "id": "79768fcc7afafb3f",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query =  \"?id=\"+ str(msg['payload']['id'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "8c31694ffc898504"
            ]
        ]
    },
    {
        "id": "17e8d9bb356dd041",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'userName' : msg['payload']['userName'],\n    'password' : msg['payload']['password'],\n    'id' : msg['payload']['id'],\n    'name' : msg['payload']['name'],\n    'surname' : msg['payload']['surname'],\n    'email_addresses' : msg['payload']['email_addresses'],\n    'country' : msg['payload']['country']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "12ad55b148968a48"
            ]
        ]
    },
    {
        "id": "f64d183a041e372c",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1650,
        "y": 1420,
        "wires": [
            [
                "d4923e9bf658bada",
                "17e8d9bb356dd041"
            ]
        ]
    },
    {
        "id": "b8d19bec60564130",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 1800,
        "wires": []
    },
    {
        "id": "935067c39fe298f0",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1190,
        "y": 2060,
        "wires": [
            [
                "858780624f4b25d1"
            ]
        ]
    },
    {
        "id": "8da82727692fc3b1",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "dcebba6522a7ec86",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 730,
        "y": 2060,
        "wires": [
            [
                "f636acff5c07b226",
                "f929205cee509714"
            ]
        ]
    },
    {
        "id": "f636acff5c07b226",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 990,
        "y": 2060,
        "wires": [
            [
                "935067c39fe298f0"
            ]
        ]
    },
    {
        "id": "35f6ebdf96380029",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\ndata = {\n    \"greenHouseName\": msg['payload']['greenHouseName']\n    }\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1010,
        "y": 2140,
        "wires": [
            [
                "f929205cee509714"
            ]
        ]
    },
    {
        "id": "01ff11bb1e09c1b9",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1590,
        "y": 2060,
        "wires": [
            [
                "dcf7fbe89f9be32d",
                "35f6ebdf96380029"
            ]
        ]
    },
    {
        "id": "930b5eeaa07f5146",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 2240,
        "wires": []
    },
    {
        "id": "c08a03cb661d70b3",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 360,
        "y": 3060,
        "wires": [
            [
                "10b68e5f42a876f4",
                "0cd853b3c5b1638f"
            ]
        ]
    },
    {
        "id": "76a4682a5b905a17",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3390,
        "y": 3720,
        "wires": []
    },
    {
        "id": "3b7d5c2263e18046",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "043782d90857d581",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 770,
        "y": 3060,
        "wires": [
            [
                "d31ab3b43e3cab38",
                "8d6183a5d7443afa",
                "266b11699d470f70",
                "8a1f69c50937b435",
                "6ee89501bce28445",
                "2c2447bf72d9531e",
                "a861ab127e861486",
                "7dcd4cacf1185222",
                "6721c23a5f9fd596",
                "bcc95baad250f80d",
                "b736783f82ba9eba",
                "8396bec3ea6bc019",
                "bb04ff572e7bd735",
                "175a296431b143d1"
            ]
        ]
    },
    {
        "id": "a3ed64a0816d64d3",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Time",
                "value": "time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Water quantity (L)",
                "value": "wq",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "time": "",
            "wq": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2530,
        "y": 3720,
        "wires": [
            [
                "198a22852f7b590b"
            ]
        ]
    },
    {
        "id": "8f2e5bb8d04fc968",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 3840,
        "wires": []
    },
    {
        "id": "5aa0128a372128d4",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "65fe65488352d21f",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature (°C)",
                "value": "temp",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity (%)",
                "value": "hum",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2530,
        "y": 3840,
        "wires": [
            [
                "5d98faa4392f446e"
            ]
        ]
    },
    {
        "id": "9e8549d3d3b0169b",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 3960,
        "wires": []
    },
    {
        "id": "9f420dd0635d5620",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "ce41a2620db9ea6d",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Temperature (°C)",
                "value": "temp",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Humidity (%)",
                "value": "hum",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "temp": "",
            "hum": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2530,
        "y": 3960,
        "wires": [
            [
                "1e9ac1f67d3a5e5f"
            ]
        ]
    },
    {
        "id": "206ad70975cb7959",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2950,
        "y": 3720,
        "wires": [
            [
                "76a4682a5b905a17",
                "880ed201bf8f0b37"
            ]
        ]
    },
    {
        "id": "5fc0ed69a312f033",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2950,
        "y": 3840,
        "wires": [
            [
                "8f2e5bb8d04fc968",
                "880ed201bf8f0b37"
            ]
        ]
    },
    {
        "id": "90d8b8b744fa52f1",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2950,
        "y": 3960,
        "wires": [
            [
                "9e8549d3d3b0169b",
                "880ed201bf8f0b37"
            ]
        ]
    },
    {
        "id": "198a22852f7b590b",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import datetime\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ninput_date = datetime.datetime.strptime(msg['payload']['time'], '%Y-%m-%dT%H:%M:%S.%fZ')\nnew_date = (input_date + datetime.timedelta(hours=1)).strftime('%H:%M:%S')\n\ndata = {\n    'time': new_date,\n    'water_quantity': msg['payload']['wq'],\n    'active': active\n}\n\n\nmsg = {'payload':data, 'query':query}\n\n\nreturn msg",
        "outputs": 1,
        "x": 2730,
        "y": 3720,
        "wires": [
            [
                "206ad70975cb7959"
            ]
        ]
    },
    {
        "id": "5d98faa4392f446e",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 2730,
        "y": 3840,
        "wires": [
            [
                "5fc0ed69a312f033"
            ]
        ]
    },
    {
        "id": "1e9ac1f67d3a5e5f",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather\"\n\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\ndata = {\n    'temperature': float(msg['payload']['temp']),\n    'humidity': float(msg['payload']['hum']),\n    'active': active\n        \n}\n\nmsg = {'payload': data, 'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 2730,
        "y": 3960,
        "wires": [
            [
                "90d8b8b744fa52f1"
            ]
        ]
    },
    {
        "id": "d4c6d1624e556115",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "There are 3 types of strategies:\n - irrigation\n - environment\n - weather\n\n",
        "x": 740,
        "y": 3120,
        "wires": []
    },
    {
        "id": "83a06b5b4c7e1753",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1650,
        "y": 2960,
        "wires": [
            [
                "e7b0dcc4ddce18ad"
            ]
        ]
    },
    {
        "id": "e7b0dcc4ddce18ad",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1870,
        "y": 2960,
        "wires": [
            [
                "b6db71baf84ac530"
            ]
        ]
    },
    {
        "id": "567f5d34309b4af8",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 3060,
        "wires": []
    },
    {
        "id": "3a2aa384b05c8140",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2550,
        "y": 2960,
        "wires": [
            [
                "5b0da82180378895",
                "14686b5344bd6d51",
                "a2c12a366ae1b0ef"
            ]
        ]
    },
    {
        "id": "d7ed7a5b1dd51b21",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1690,
        "y": 2640,
        "wires": [
            [
                "b366f8715824acf3"
            ]
        ]
    },
    {
        "id": "b366f8715824acf3",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1910,
        "y": 2640,
        "wires": [
            [
                "92c511186dcc24e7"
            ]
        ]
    },
    {
        "id": "37d3923b85da621a",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 2640,
        "wires": []
    },
    {
        "id": "4bf2b490fb12f561",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2350,
        "y": 2640,
        "wires": [
            [
                "b72a80f96229304d"
            ]
        ]
    },
    {
        "id": "b869dd885b282a44",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "d": true,
        "group": "65fe65488352d21f",
        "name": "",
        "order": 3,
        "width": "5",
        "height": "3",
        "format": "<h3>Registered strategy: </h3>\n\n<p>TEMPERATURE: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span></p>\n<p>HUMIDITY: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span></p>\n<p>ACTIVE: <span ng-bind=\"msg['payload']['active']\"></span></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2540,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "719db4ac8743666c",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 1690,
        "y": 2760,
        "wires": [
            [
                "40d84dd47cfe4009"
            ]
        ]
    },
    {
        "id": "40d84dd47cfe4009",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1910,
        "y": 2760,
        "wires": [
            [
                "8cdd6739e41e87c0"
            ]
        ]
    },
    {
        "id": "fc3b2f631588cc5b",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 2760,
        "wires": []
    },
    {
        "id": "1858276751a5c100",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2370,
        "y": 2760,
        "wires": [
            [
                "49507678eee776b0"
            ]
        ]
    },
    {
        "id": "783ff34db09326c0",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "d": true,
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 3,
        "width": "5",
        "height": "3",
        "format": "<h3>Registered strategy: </h3>\n\n<p>TEMPERATURE: <span ng-bind=\"msg['payload']['strat']['temperature']\"></span></p>\n<p>HUMIDITY: <span ng-bind=\"msg['payload']['strat']['humidity']\"></span></p>\n<p>ACTIVE: <span ng-bind=\"msg['payload']['active']\"></span></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2740,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "6b76565c29140883",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "TODO\nControllare come mai se metto un orario nella casella time del form, l'output è un'ora indietro (fusorario inglese). \n- Probabilmente è perchè nodered gira su una raspberry che potrebbe essere settata come fusorario inglese.\n\nCapire come gestire questa cosa",
        "x": 2700,
        "y": 3680,
        "wires": []
    },
    {
        "id": "48fa6b2ed3446a6e",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 3380,
        "wires": []
    },
    {
        "id": "c1dfa8bd50f7cfa3",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 20,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Strategy ID",
                "value": "strategyID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "strategyID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2590,
        "y": 3380,
        "wires": [
            [
                "e28019bf43fba307"
            ]
        ]
    },
    {
        "id": "58157c3c0950bbea",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3010,
        "y": 3380,
        "wires": [
            [
                "48fa6b2ed3446a6e",
                "9ef7c99ce7974f4e"
            ]
        ]
    },
    {
        "id": "e28019bf43fba307",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\n#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID\"+str(msg['payload']['strategyID'])\"\n\nmsg = {'query': query}\n\nreturn msg\n\n\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 2790,
        "y": 3380,
        "wires": [
            [
                "58157c3c0950bbea"
            ]
        ]
    },
    {
        "id": "14686b5344bd6d51",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\n\nif len(msg['payload']['strat']) > 0:\n        \n    id = []\n    for i in range(len(msg['payload']['strat'])):\n          \n       id.append(msg['payload']['strat'][i]['id'])\n    \n    msg['payload'] = id\n\nelse:\n    msg = {'payload' : []}\n\nreturn msg",
        "outputs": 1,
        "x": 1850,
        "y": 3160,
        "wires": [
            [
                "b78455e10a5acab7"
            ]
        ]
    },
    {
        "id": "b78455e10a5acab7",
        "type": "change",
        "z": "dfa5f5222d797092",
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 3160,
        "wires": [
            [
                "63b951f54d810379"
            ]
        ]
    },
    {
        "id": "63b951f54d810379",
        "type": "ui_dropdown",
        "z": "dfa5f5222d797092",
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "64d6c8b6.5961f8",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 2290,
        "y": 3160,
        "wires": [
            [
                "4ee7f55407af597a"
            ]
        ]
    },
    {
        "id": "4ee7f55407af597a",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['payload'] = {\n    \"strategyID\": msg['payload']\n}\n\nreturn msg",
        "outputs": 1,
        "x": 2570,
        "y": 3160,
        "wires": [
            [
                "c1dfa8bd50f7cfa3"
            ]
        ]
    },
    {
        "id": "266b11699d470f70",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<h3>Select a strategy to enable or disable</h3>\n<p>Once selected the strategy do <b>not</b> modify the following form</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2320,
        "y": 4400,
        "wires": [
            [
                "1d4da6432fd7cfc3"
            ]
        ]
    },
    {
        "id": "d31ab3b43e3cab38",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<h3>Enable or disable the environment strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2320,
        "y": 4520,
        "wires": [
            [
                "11faf41783dea40f"
            ]
        ]
    },
    {
        "id": "8d6183a5d7443afa",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<h3>Enable or disable the weather strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2320,
        "y": 4460,
        "wires": [
            [
                "2ec1877cd11c1824"
            ]
        ]
    },
    {
        "id": "1d4da6432fd7cfc3",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "64d6c8b6.5961f8",
        "order": 15,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Strategy ID",
                "value": "strategyID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "strategyID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2490,
        "y": 4400,
        "wires": [
            [
                "a031e1764986b5df"
            ]
        ]
    },
    {
        "id": "11faf41783dea40f",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "65fe65488352d21f",
        "order": 11,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2490,
        "y": 4520,
        "wires": [
            [
                "8bdb253e17f4f591"
            ]
        ]
    },
    {
        "id": "2ec1877cd11c1824",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "ce41a2620db9ea6d",
        "order": 11,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": "",
            "active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2490,
        "y": 4460,
        "wires": [
            [
                "2317af50866dcd41"
            ]
        ]
    },
    {
        "id": "a031e1764986b5df",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&active=\"+ str(active)\n\ndata = {\n    'strategyID' : msg['payload']['strategyID'],\n    'activeStrat' : active\n}\n\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 2710,
        "y": 4400,
        "wires": [
            [
                "8bce45bc0d63bf82"
            ]
        ]
    },
    {
        "id": "8bdb253e17f4f591",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment&active=\"+ str(active)\n\ndata = {\n    \n    'activeStrat' : active\n}\n\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 2710,
        "y": 4520,
        "wires": [
            [
                "3bfaea9870d75924"
            ]
        ]
    },
    {
        "id": "2317af50866dcd41",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['payload']['active']:\n    active = True\nelse:\n    active = False\n\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather&active=\"+ str(active)\n\ndata = {\n    \n    'activeStrat' : active\n}\nmsg = {'payload':data, 'query':query}\n\nreturn msg",
        "outputs": 1,
        "x": 2710,
        "y": 4460,
        "wires": [
            [
                "8c8e71695711a1bf"
            ]
        ]
    },
    {
        "id": "2b8d0348d42bede6",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 4400,
        "wires": []
    },
    {
        "id": "8bce45bc0d63bf82",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2930,
        "y": 4400,
        "wires": [
            [
                "2b8d0348d42bede6",
                "cbbb3ac214d97262"
            ]
        ]
    },
    {
        "id": "6c2bdd157134657b",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 4520,
        "wires": []
    },
    {
        "id": "3bfaea9870d75924",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2930,
        "y": 4520,
        "wires": [
            [
                "6c2bdd157134657b",
                "cbbb3ac214d97262"
            ]
        ]
    },
    {
        "id": "d3870ad51773a588",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 4460,
        "wires": []
    },
    {
        "id": "8c8e71695711a1bf",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2930,
        "y": 4460,
        "wires": [
            [
                "d3870ad51773a588",
                "cbbb3ac214d97262"
            ]
        ]
    },
    {
        "id": "8a1f69c50937b435",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<h3>Create a new irrigation strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3720,
        "wires": [
            [
                "a3ed64a0816d64d3"
            ]
        ]
    },
    {
        "id": "6ee89501bce28445",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<h3>Create a new environment strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3840,
        "wires": [
            [
                "5aa0128a372128d4"
            ]
        ]
    },
    {
        "id": "2c2447bf72d9531e",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<h3>Create a new weather strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3960,
        "wires": [
            [
                "9f420dd0635d5620"
            ]
        ]
    },
    {
        "id": "a861ab127e861486",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<h3>Select a strategy to delete</h3>\n<p>Once selected the strategy do <b>not</b> modify the following form</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3380,
        "wires": [
            [
                "c1dfa8bd50f7cfa3"
            ]
        ]
    },
    {
        "id": "cbc8fee51389dd33",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'userName' : \"\",\n        'name' : \"\",\n        'surname' : \"\",\n        'email_addresses' : \"\",\n        'error' : 'USER NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "3b138dd68bffa83b"
            ]
        ]
    },
    {
        "id": "690cc002ee0499aa",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "greenhouse info",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<h3>The greenhouse attributes are: </h3>\n<br>\n<p>GREENHOUSE NAME: <span ng-bind=\"msg['payload']['greenHouseName']\"></span></p>\n<p>CITY: <span ng-bind=\"msg['payload']['city']\"></span></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-3",
        "x": 1600,
        "y": 320,
        "wires": [
            [
                "112b8f49e109c0cd"
            ]
        ]
    },
    {
        "id": "a9b4d06e56271b23",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 20,
        "wires": [
            [
                "7ce9d330cf19a9ec"
            ]
        ]
    },
    {
        "id": "496999e9d36d4e9d",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'greenHouseName' : \"\",\n        'city' : \"\",\n        'error' : 'GREENHOUSE NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "44a799ba54fc21aa"
            ]
        ]
    },
    {
        "id": "56c3f5bc2bc5cecb",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 220,
        "wires": [
            [
                "2455a89baf539add"
            ]
        ]
    },
    {
        "id": "7ce9d330cf19a9ec",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "greenhouse error",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-2-error",
        "x": 1770,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "2455a89baf539add",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "greenhouse error",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-3-error",
        "x": 1770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "525054fe7408026a",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'error' : 'ERROR WITH THE USER ID'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    data = {\n        'error' : 'USER REGISTERED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 1490,
        "y": 1300,
        "wires": [
            [
                "acf07cc5b57363b2"
            ]
        ]
    },
    {
        "id": "acf07cc5b57363b2",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "703824db.9d74a4",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-new-user-error",
        "x": 1720,
        "y": 1300,
        "wires": [
            [
                "955bbcc0b5e00449",
                "aef87be7f695d15b"
            ]
        ]
    },
    {
        "id": "955bbcc0b5e00449",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1300,
        "wires": []
    },
    {
        "id": "39b467bc9846b265",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 1640,
        "wires": []
    },
    {
        "id": "19938b85b3821efe",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    'userName' : '',\n    'password' : '',\n    'id' : '',\n    'name' : '',\n    'surname' : '',\n    'email_addresses' : '',\n    'country' : '',\n    'error' : 'USER DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\n    \nelse:\n    \n    return msg",
        "outputs": 1,
        "x": 1450,
        "y": 1420,
        "wires": [
            [
                "f64d183a041e372c"
            ]
        ]
    },
    {
        "id": "d4923e9bf658bada",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1850,
        "y": 1420,
        "wires": [
            [
                "303508492d465b23",
                "12ad55b148968a48"
            ]
        ]
    },
    {
        "id": "303508492d465b23",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "1ad3bf1a8d6e4b4e",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-update-user-error",
        "x": 2240,
        "y": 1420,
        "wires": [
            [
                "77ccdec3a088b3db"
            ]
        ]
    },
    {
        "id": "38fea345ee9d6689",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n        'error' : 'ERROR WITH USER OR GREENHOUSE'\n    }\n    msg = {'payload' : data}\n    return msg\n\nelse:\n    data = {\n        'error' : 'GREENHOUSE REGISTERED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 1490,
        "y": 1860,
        "wires": [
            [
                "c95f74b1b678bb24"
            ]
        ]
    },
    {
        "id": "c95f74b1b678bb24",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "1e1cb426.2b813c",
        "name": "",
        "order": 7,
        "width": "0",
        "height": "0",
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-new-greenhouse-error",
        "x": 1740,
        "y": 1860,
        "wires": [
            [
                "b8d19bec60564130",
                "a916e34b00085af5"
            ]
        ]
    },
    {
        "id": "6771520151f4960d",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 2080,
        "wires": [
            [
                "28260553cad4aa1c",
                "35e79ed1b1cfb1fa",
                "26b4904d90a3825a",
                "f0da233557a8d243"
            ]
        ]
    },
    {
        "id": "858780624f4b25d1",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    \"id\": '',\n    \"greenHouseID\": '',\n    \"greenHouseName\": '',\n    'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    \n    return msg",
        "outputs": 1,
        "x": 1410,
        "y": 2060,
        "wires": [
            [
                "01ff11bb1e09c1b9"
            ]
        ]
    },
    {
        "id": "dcf7fbe89f9be32d",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 2060,
        "wires": [
            [
                "56c6f8bcad12b9b2",
                "f929205cee509714"
            ]
        ]
    },
    {
        "id": "56c6f8bcad12b9b2",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "dcebba6522a7ec86",
        "name": "",
        "order": 4,
        "width": "0",
        "height": "0",
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-update-greenhouse-error",
        "x": 1940,
        "y": 2060,
        "wires": [
            [
                "a3cfb2efb20ba42c"
            ]
        ]
    },
    {
        "id": "56cb30ae4fef2580",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 2300,
        "wires": []
    },
    {
        "id": "50517df343ea60f0",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    data = {\n    'error' : 'GREENHOUSE DELETED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 1410,
        "y": 2360,
        "wires": [
            [
                "35d9b699dffc333d"
            ]
        ]
    },
    {
        "id": "35d9b699dffc333d",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "3ca67b85ec7cd5f7",
        "name": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-delete-greenhouse-error",
        "x": 1620,
        "y": 2360,
        "wires": [
            [
                "56cb30ae4fef2580",
                "eb46be4a72808816"
            ]
        ]
    },
    {
        "id": "5b0da82180378895",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\n\nif len(msg['payload']['strat']) > 0:\n        \n    id = []\n    for i in range(len(msg['payload']['strat'])):\n          \n       id.append(msg['payload']['strat'][i]['id'])\n    \n    msg['payload'] = id\n\nelse:\n    msg = {'payload' : []}\n\nreturn msg",
        "outputs": 1,
        "x": 2550,
        "y": 4080,
        "wires": [
            [
                "96279f2873584f89"
            ]
        ]
    },
    {
        "id": "96279f2873584f89",
        "type": "change",
        "z": "dfa5f5222d797092",
        "name": "Set Dropdown Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 4080,
        "wires": [
            [
                "2863874536da3758"
            ]
        ]
    },
    {
        "id": "2863874536da3758",
        "type": "ui_dropdown",
        "z": "dfa5f5222d797092",
        "name": "Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "64d6c8b6.5961f8",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 3030,
        "y": 4080,
        "wires": [
            [
                "2840d769c9886198"
            ]
        ]
    },
    {
        "id": "2840d769c9886198",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['payload'] = {\n    \"strategyID\": msg['payload']\n}\n\nreturn msg",
        "outputs": 1,
        "x": 2350,
        "y": 4200,
        "wires": [
            [
                "266b11699d470f70"
            ]
        ]
    },
    {
        "id": "7dcd4cacf1185222",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query' : query}\n\nreturn msg",
        "outputs": 1,
        "x": 1330,
        "y": 3900,
        "wires": [
            [
                "29b9885eb3cd766b"
            ]
        ]
    },
    {
        "id": "29b9885eb3cd766b",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1550,
        "y": 3900,
        "wires": [
            [
                "b4ca329677779c8f"
            ]
        ]
    },
    {
        "id": "b4ca329677779c8f",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'id' : '',\n        'greenHouseID' : '',\n        'StrategyID' : '',\n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg\n",
        "outputs": 1,
        "x": 1770,
        "y": 3900,
        "wires": [
            [
                "ce7604f3d15b71ad",
                "a861ab127e861486",
                "8a1f69c50937b435",
                "6ee89501bce28445",
                "2c2447bf72d9531e",
                "266b11699d470f70",
                "8d6183a5d7443afa",
                "d31ab3b43e3cab38",
                "6721c23a5f9fd596",
                "bcc95baad250f80d"
            ]
        ]
    },
    {
        "id": "ce7604f3d15b71ad",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "043782d90857d581",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-strategy-error",
        "x": 2340,
        "y": 3260,
        "wires": [
            [
                "8c54400834a54059"
            ]
        ]
    },
    {
        "id": "92c511186dcc24e7",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'strat' : [{\n            'temperature' : '',\n            'humidity' : ''\n            }],\n       \n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg\n",
        "outputs": 1,
        "x": 2130,
        "y": 2640,
        "wires": [
            [
                "4bf2b490fb12f561"
            ]
        ]
    },
    {
        "id": "8cdd6739e41e87c0",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'strat' : [{\n            'temperature' : '',\n            'humidity' : ''\n            }],\n       \n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg\n",
        "outputs": 1,
        "x": 2130,
        "y": 2760,
        "wires": [
            [
                "1858276751a5c100"
            ]
        ]
    },
    {
        "id": "eda3c14331870df8",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'strat' : [],\n   \n    'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n}\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1830,
        "y": 3080,
        "wires": [
            [
                "14686b5344bd6d51",
                "a2c12a366ae1b0ef"
            ]
        ]
    },
    {
        "id": "b6db71baf84ac530",
        "type": "switch",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2050,
        "y": 2960,
        "wires": [
            [
                "eda3c14331870df8",
                "6d5ea4ed49b4f835"
            ],
            [
                "3a2aa384b05c8140"
            ]
        ]
    },
    {
        "id": "6d5ea4ed49b4f835",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'strat' : [],\n   \n    'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n}\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 2310,
        "y": 4080,
        "wires": [
            [
                "5b0da82180378895"
            ]
        ]
    },
    {
        "id": "a2c12a366ae1b0ef",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "4",
        "format": "<h3>Registered strategies: </h3>\n\n<table>\n  <tr>\n    <th>ID</th>\n    <th>TIME</th>\n    <th>WATER QUANTITY (l)</th>\n    <th>ACTIVE</th>\n  </tr>\n  <tr ng-repeat=\"record in msg.payload.strat\">\n    <td>{{ record.id }}</td>\n    <td>{{ record.time }}</td>\n    <td>{{ record.water_quantity }}</td>\n    <td>{{ record.active }}</td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-table",
        "x": 2800,
        "y": 3060,
        "wires": [
            [
                "567f5d34309b4af8"
            ]
        ]
    },
    {
        "id": "8608905770537a7a",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "f8da51c0b8f869c9"
            ]
        ]
    },
    {
        "id": "d876efb2a9f19e4c",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1270,
        "y": 1160,
        "wires": [
            [
                "8462fce415534226"
            ]
        ]
    },
    {
        "id": "8462fce415534226",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "bb7721423ea2a939",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p><strong>Window:</strong> <span ng-bind=\"msg['payload']['state']\"></span></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "status-window",
        "x": 1600,
        "y": 1160,
        "wires": [
            [
                "4940cebc65e1232a"
            ]
        ]
    },
    {
        "id": "4940cebc65e1232a",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 1160,
        "wires": []
    },
    {
        "id": "588a6af3636bd2f0",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2820,
        "y": 2160,
        "wires": [
            [
                "d5bd78cae0dad367",
                "41eb7bb0527ae0d9"
            ]
        ]
    },
    {
        "id": "3ab7567d245db9ce",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 1720,
        "wires": []
    },
    {
        "id": "acf76c1f9c99fb40",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "Thingspeak",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4330,
        "y": 1900,
        "wires": [
            [
                "a41aa4cb664c0971",
                "907dc787cc044d70",
                "57b4e9371a0f3d43",
                "8c17df97385649aa",
                "5667582e57cbb879"
            ]
        ]
    },
    {
        "id": "a41aa4cb664c0971",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\nimport time\n\noutput = [{\n\"series\": [\"Tem\"],\n\"data\": [[]],\n\"labels\": [\"Tem\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_t = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field1']}\n    \n    output[0]['data'][0].append(data_t)\n   \n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 4610,
        "y": 1760,
        "wires": [
            [
                "b68ad7b4f19ef12a",
                "3ab7567d245db9ce"
            ]
        ]
    },
    {
        "id": "b68ad7b4f19ef12a",
        "type": "ui_chart",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4890,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "b21b6b14e1012145",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 1860,
        "wires": []
    },
    {
        "id": "907dc787cc044d70",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\nimport time\n\n\noutput = [{\n\"series\": [\"Hum\"],\n\"data\": [[]],\n\"labels\": [\"Hum\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n    \n    data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field2']}\n    \n    output[0]['data'][0].append(data_h)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 4610,
        "y": 1900,
        "wires": [
            [
                "b21b6b14e1012145",
                "8de0f6912b124cdc"
            ]
        ]
    },
    {
        "id": "8de0f6912b124cdc",
        "type": "ui_chart",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "e42281d9419547e2",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4890,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "056172eab1fc7ea8",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "5265b699c4c5e667",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 3190,
        "y": 2160,
        "wires": [
            [
                "ec5ed5ef24c1cb8a",
                "d742f35d1256b7c5",
                "2771ba2cd5068de2",
                "6ec3ba1eb399cd60",
                "628128275bd54f54",
                "eb22d19182fd2b64",
                "eb63fa5bfe3aeb6e",
                "e2b23939b74a566c"
            ]
        ]
    },
    {
        "id": "9423417cf0b202eb",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "Con il form prendo i valori della greenhouse e dello user; \nFaccio il get al catalog e ricevo il channel id o url\nFaccio il get con l'url di thingspeak, prendo i dati e li plotto\n",
        "x": 3980,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5f01dd971b738fa8",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 2020,
        "wires": []
    },
    {
        "id": "57b4e9371a0f3d43",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\nimport time\n\n\noutput = [{\n\"series\": [\"Window\"],\n\"data\": [[]],\n\"labels\": [\"Window\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    if feed['field3'] is not None:\n        date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n        \n        data_w = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field3']}\n        \n        output[0]['data'][0].append(data_w)\n    \nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 4610,
        "y": 2060,
        "wires": [
            [
                "5f01dd971b738fa8",
                "b7ce0e02612a7da3"
            ]
        ]
    },
    {
        "id": "b7ce0e02612a7da3",
        "type": "ui_chart",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "4030566d0fe92597",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4890,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "7a68a5610671c945",
        "type": "mqtt in",
        "z": "dfa5f5222d797092",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 3810,
        "y": 2480,
        "wires": [
            [
                "a89313309950da04"
            ]
        ]
    },
    {
        "id": "a0d24bd0fd6b64dd",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/temperature\"\n\n\nreturn msg",
        "outputs": 1,
        "x": 3630,
        "y": 2480,
        "wires": [
            [
                "7a68a5610671c945"
            ]
        ]
    },
    {
        "id": "79bcffc3c3f4d807",
        "type": "ui_gauge",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "c54cc5d01a793531",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 4250,
        "y": 2480,
        "wires": []
    },
    {
        "id": "3bb465c8e8852f0d",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 2540,
        "wires": []
    },
    {
        "id": "4ed2b83c9116b64f",
        "type": "mqtt in",
        "z": "dfa5f5222d797092",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 3930,
        "y": 2280,
        "wires": [
            [
                "6703cb203533ed13"
            ]
        ]
    },
    {
        "id": "10e7d09a1212d8f0",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/humidity\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 3670,
        "y": 2280,
        "wires": [
            [
                "4ed2b83c9116b64f"
            ]
        ]
    },
    {
        "id": "4fcf25e3cbebd058",
        "type": "ui_gauge",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "e42281d9419547e2",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": "0",
        "max": "1",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 4310,
        "y": 2280,
        "wires": []
    },
    {
        "id": "c38e815f1659c42b",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4330,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a2559b1c8a9ddb1c",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 3630,
        "y": 2640,
        "wires": [
            [
                "f4c22cce9b4b7bac"
            ]
        ]
    },
    {
        "id": "6721c23a5f9fd596",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<h3>Delete the weather strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3460,
        "wires": [
            [
                "bcbdf0b69a31a01f"
            ]
        ]
    },
    {
        "id": "bcc95baad250f80d",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<h3>Delete the environment strategy</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 3540,
        "wires": [
            [
                "2f37f2b8f6cc3f4d"
            ]
        ]
    },
    {
        "id": "bcbdf0b69a31a01f",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "ce41a2620db9ea6d",
        "order": 13,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2590,
        "y": 3460,
        "wires": [
            [
                "a8fff0722ce207c5"
            ]
        ]
    },
    {
        "id": "2f37f2b8f6cc3f4d",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "65fe65488352d21f",
        "order": 13,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 2590,
        "y": 3540,
        "wires": [
            [
                "689e165be2782e34"
            ]
        ]
    },
    {
        "id": "e2f82242fe81586c",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3250,
        "y": 3460,
        "wires": []
    },
    {
        "id": "f119385c0b31d4eb",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3050,
        "y": 3460,
        "wires": [
            [
                "e2f82242fe81586c",
                "9ef7c99ce7974f4e"
            ]
        ]
    },
    {
        "id": "a8fff0722ce207c5",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\n#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID\"+str(msg['payload']['strategyID'])\"\n\nmsg = {'query': query}\n\nreturn msg\n\n\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=weather\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 2830,
        "y": 3460,
        "wires": [
            [
                "f119385c0b31d4eb"
            ]
        ]
    },
    {
        "id": "dcdd079e9abe3fed",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3250,
        "y": 3540,
        "wires": []
    },
    {
        "id": "f11586b9028c2148",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3050,
        "y": 3540,
        "wires": [
            [
                "dcdd079e9abe3fed",
                "9ef7c99ce7974f4e"
            ]
        ]
    },
    {
        "id": "689e165be2782e34",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation&strategyID=\"+str(msg['payload']['strategyID'])\n\n#query = \"?id=\"+msg['payload']['id']+\"&greenHouseID=\"+ msg['payload']['greenHouseID']+ \"&strategyType=irrigation&strategyID\"+str(msg['payload']['strategyID'])\"\n\nmsg = {'query': query}\n\nreturn msg\n\n\"\"\"\nquery = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=environment\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 2830,
        "y": 3540,
        "wires": [
            [
                "f11586b9028c2148"
            ]
        ]
    },
    {
        "id": "b736783f82ba9eba",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'id' : msg['payload']['id'],\n    'greenHouseID': msg['payload']['greenHouseID']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 770,
        "y": 2940,
        "wires": [
            [
                "3b7d5c2263e18046"
            ]
        ]
    },
    {
        "id": "a40245cde3c690df",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'id' : msg['payload']['id'],\n    'greenHouseID': msg['payload']['greenHouseID']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "6b48906497f7c05d"
            ]
        ]
    },
    {
        "id": "ec5ed5ef24c1cb8a",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'id' : msg['payload']['id'],\n    'greenHouseID': msg['payload']['greenHouseID']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 3190,
        "y": 2040,
        "wires": [
            [
                "056172eab1fc7ea8"
            ]
        ]
    },
    {
        "id": "f8da51c0b8f869c9",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/window_state{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "d7b02bac38610136",
                "d876efb2a9f19e4c"
            ]
        ]
    },
    {
        "id": "7b8b5e226306f254",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .template-1 p {\n        font-size: 16px;\n        color: red;\n        text-align: left;\n        margin-bottom: 5px;\n    }\n    \n    .template-1 h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .b {\n        font-weight: bold;\n    }\n    \n    .template-2 p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    \n    .template-2 h1 {\n        font-size: 18px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 7px;\n    }\n    \n    .template-2-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    .template-3 p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    .template-3-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    .template-4 p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    .template-4 h1 {\n        font-size: 18px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 7px;\n    }\n    .template-4-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    .graph-humidity p {\n        font-size: 20px;\n        color: #333;\n        text-align: right;\n        margin-bottom: 20px;\n    }\n    \n    .graph-temperature p {\n        font-size: 20px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 20px;\n    }\n    \n    .status-window  p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    \n    .button-template {\n        \n        background-color: blue; \n        color: #fff; \n        font-size: 20px;\n        padding: 5px 15px; \n        border: none; \n        border-radius: 15px; \n        cursor: pointer;\n        transition: background-color 0.3s; \n    }\n    \n    \n    .button-template:hover {\n    background-color: #0099CC; \n    color: #0066FF;\n        }\n\n    \n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "4491add2c81d7368",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<h1>INFORMATION </h1>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-2",
        "x": 620,
        "y": 180,
        "wires": [
            [
                "314cf227ce95c194"
            ]
        ]
    },
    {
        "id": "fde11361ffd7fdb1",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "bb7721423ea2a939",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>STATISTICS </h1>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-4",
        "x": 560,
        "y": 780,
        "wires": [
            [
                "c172a47fe858f676"
            ]
        ]
    },
    {
        "id": "0f1e9e829ab79d3f",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "703824db.9d74a4",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "3",
        "format": "<h1>CREATE NEW USER </h1>\n<p>Enter your <b>personal ID</b> and fill in the fields with your master data</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-new-user",
        "x": 580,
        "y": 1300,
        "wires": [
            [
                "8b9f5b0f2df54dc0"
            ]
        ]
    },
    {
        "id": "108c9bc98d6621fb",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "1ad3bf1a8d6e4b4e",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "3",
        "format": "<h1>UPDATE USER </h1>\n<p>Enter the <b>personal ID</b> and change your personal information.</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-update-user",
        "x": 580,
        "y": 1420,
        "wires": [
            [
                "333c2a4f7a6537f2"
            ]
        ]
    },
    {
        "id": "a40a005eb19865c1",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "edded25c257e2620",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>DELETE USER </h1>\n<p>Enter the <b>personal ID</b> to delete all the user information.</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-delete-user",
        "x": 580,
        "y": 1700,
        "wires": [
            [
                "bb9a30baa05d4d31"
            ]
        ]
    },
    {
        "id": "ef86d9c0ca760d07",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "703824db.9d74a4",
        "name": "",
        "order": 21,
        "width": 0,
        "height": 0,
        "format": "<style>\n  \n    .template-new-user p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    \n        \n    .template-update-user p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    \n    .template-delete-user p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 7px;\n    }\n    \n    .template-new-user h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-update-user h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-delete-user h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .b {\n        font-weight: bold;\n    }\n    \n    .template-new-user-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    \n    .template-delete-user-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    \n    .template-update-user-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    \n    .button-template {\n        \n        background-color: blue; \n        color: #fff; \n        font-size: 20px;\n        padding: 5px 15px; \n        border: none; \n        border-radius: 15px; \n        cursor: pointer;\n        transition: background-color 0.3s; \n    }\n    \n    \n    .button-template:hover {\n    background-color: #0099CC; \n    color: #0066FF;\n        }\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "158e5c42d33d467e",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "edded25c257e2620",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-delete-user-error",
        "x": 1680,
        "y": 1700,
        "wires": [
            [
                "39b467bc9846b265",
                "53f5419d12413089"
            ]
        ]
    },
    {
        "id": "abfb635f023cdc12",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    'error' : 'USER DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\n    \nelse:\n    data = {\n        'error' : 'USER DELETED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 1470,
        "y": 1700,
        "wires": [
            [
                "158e5c42d33d467e"
            ]
        ]
    },
    {
        "id": "28260553cad4aa1c",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "3ca67b85ec7cd5f7",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>DELETE GREENHOUSE </h1>\n<p>Enter the <b>personal ID</b> and <b>greenhouse ID</b> to delete greenhouse information.</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-delete-greenhouse",
        "x": 560,
        "y": 2360,
        "wires": [
            [
                "70804627e9613264"
            ]
        ]
    },
    {
        "id": "f0da233557a8d243",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "1e1cb426.2b813c",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n  \n    .template-new-greenhouse p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 1px;\n    }\n    \n        \n    .template-update-greenhouse p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 1px;\n    }\n    \n    .template-delete-greenhouse p {\n        font-size: 16px;\n        color: #333;\n        text-align: left;\n        margin-bottom: 1px;\n    }\n    \n    .template-new-greenhouse h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-update-greenhouse h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-delete-greenhouse h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .b {\n        font-weight: bold;\n    }\n    \n    .template-new-greenhouse-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 1px;\n        text-decoration: underline;\n    }\n    \n    .template-delete-greenhouse-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 1px;\n        text-decoration: underline;\n    }\n    \n    .template-update-greenhouse-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 1px;\n        text-decoration: underline;\n    }\n    \n    \n    .button-template {\n        \n        background-color: blue; \n        color: #fff; \n        font-size: 20px;\n        padding: 5px 15px; \n        border: none; \n        border-radius: 15px; \n        cursor: pointer;\n        transition: background-color 0.3s; \n    }\n    \n    \n    .button-template:hover {\n    background-color: #0099CC; \n    color: #0066FF;\n        }\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "35e79ed1b1cfb1fa",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "dcebba6522a7ec86",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>UPDATE GREENHOUSE </h1>\n<p>Enter the <b>personal ID</b> and <b>Greenhouse ID</b> and change greenhouse information.</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-update-greenhouse",
        "x": 560,
        "y": 2060,
        "wires": [
            [
                "8da82727692fc3b1"
            ]
        ]
    },
    {
        "id": "26b4904d90a3825a",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "1e1cb426.2b813c",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>CREATE NEW GREENHOUSE </h1>\n<p>Enter your <b>personal ID</b> and <b>greenhouse ID</b> and fill in the fields with your greenhouse information.</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-new-greenhouse",
        "x": 560,
        "y": 1860,
        "wires": [
            [
                "60a897d576a4c0ed"
            ]
        ]
    },
    {
        "id": "175a296431b143d1",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "64d6c8b6.5961f8",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>IRRIGATION </h1>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-irrigation",
        "x": 1440,
        "y": 2960,
        "wires": [
            [
                "83a06b5b4c7e1753"
            ]
        ]
    },
    {
        "id": "0cd853b3c5b1638f",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "043782d90857d581",
        "name": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n    \n    .button-template {\n        \n        background-color: blue; \n        color: #fff; \n        font-size: 20px;\n        padding: 5px 15px; \n        border: none; \n        border-radius: 15px; \n        cursor: pointer;\n        transition: background-color 0.3s; \n    }\n    \n    \n    .button-template:hover {\n    background-color: #0099CC; \n    color: #0066FF;\n        }\n\n    .template-environment h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-weather h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .template-irrigation h1 {\n        font-size: 20px;\n        color: #333;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    \n    .b {\n        font-weight: bold;\n    }\n \n    \n    .template-strategy-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    \n\n    .template-table table {\n      border-collapse: collapse;\n      width: 100%;\n      margin-bottom: 20px;\n    }\n\n    .template-table th {\n      background-color: #87cefa;\n      color: black;\n      font-weight: bold;\n      padding: 8px;\n      text-align: left;\n      font-size: 16px;\n    }\n    \n    .template-table td {\n      border: 1px solid #ccc;\n      padding: 8px;\n      text-align: left;\n    }\n    \n    .template-table tr:nth-child(odd) {\n      background-color: #f2f2f2;\n    }\n    \n    \n    .template-table tr:hover {\n      background-color: #ddd;\n    }\n\n    h3 {\n        font-size: 18px;\n        color: #333;\n        text-align: center;\n    }\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "bb04ff572e7bd735",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>WEATHER</h1>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-weather",
        "x": 1460,
        "y": 2800,
        "wires": [
            [
                "719db4ac8743666c"
            ]
        ]
    },
    {
        "id": "8396bec3ea6bc019",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "format": "<h1>ENVIRONMENT </h1>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-environment",
        "x": 1460,
        "y": 2700,
        "wires": [
            [
                "d7ed7a5b1dd51b21"
            ]
        ]
    },
    {
        "id": "10b68e5f42a876f4",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "043782d90857d581",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <p>Enter your <b>personal ID</b> and the <b>greenhouse ID</b> to visualize the current strategies.</p>\n    <br>\n    <p>To change user or greenhouse use this form. <b>Never</b> modify <b>User ID</b> and <b>Greenhouse ID</b> in the other forms.</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-strategy",
        "x": 580,
        "y": 3060,
        "wires": [
            [
                "3b7d5c2263e18046"
            ]
        ]
    },
    {
        "id": "b72a80f96229304d",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "65fe65488352d21f",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "4",
        "format": "<h3>Registered strategies: </h3>\n\n<table>\n  <tr>\n    <th>TEMPERATURE (°C)</th>\n    <th>HUMIDITY (%)</th>\n    <th>ACTIVE</th>\n  </tr>\n  \n  <tr>\n    <td>{{ msg.payload.strat.temperature }}</td>\n    <td>{{ msg.payload.strat.humidity }}</td>\n\n    <td>{{ msg.payload.active }}</td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-table",
        "x": 2540,
        "y": 2640,
        "wires": [
            [
                "37d3923b85da621a"
            ]
        ]
    },
    {
        "id": "49507678eee776b0",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "ce41a2620db9ea6d",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "4",
        "format": "<h3>Registered strategies: </h3>\n\n<table>\n  <tr>\n    <th>TEMPERATURE (°C)</th>\n    <th>HUMIDITY (%)</th>\n    <th>ACTIVE</th>\n  </tr>\n  \n  <tr>\n    <td>{{ msg.payload.strat.temperature }}</td>\n    <td>{{ msg.payload.strat.humidity }}</td>\n\n    <td>{{ msg.payload.active }}</td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-table",
        "x": 2560,
        "y": 2760,
        "wires": [
            [
                "fc3b2f631588cc5b"
            ]
        ]
    },
    {
        "id": "d5bd78cae0dad367",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "5265b699c4c5e667",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <p>Enter your <b>personal ID</b> and the <b>greenhouse ID</b> to visualize measurements plots.</p>\n   \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3000,
        "y": 2160,
        "wires": [
            [
                "056172eab1fc7ea8"
            ]
        ]
    },
    {
        "id": "a6ed6c2f1f33d3ef",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4070,
        "y": 2640,
        "wires": [
            [
                "fb67db7845167187"
            ]
        ]
    },
    {
        "id": "fb67db7845167187",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "4030566d0fe92597",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p><strong>Window status:</strong> <span ng-bind=\"msg['payload']['state']\"></span></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "status-window",
        "x": 4260,
        "y": 2640,
        "wires": [
            [
                "eff8c841f3bf00e9"
            ]
        ]
    },
    {
        "id": "eff8c841f3bf00e9",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4450,
        "y": 2640,
        "wires": []
    },
    {
        "id": "f4c22cce9b4b7bac",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/window_state{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3870,
        "y": 2640,
        "wires": [
            [
                "a6ed6c2f1f33d3ef"
            ]
        ]
    },
    {
        "id": "d742f35d1256b7c5",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "c54cc5d01a793531",
        "name": "temperature stat",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h3>Temperature</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3440,
        "y": 2480,
        "wires": [
            [
                "a0d24bd0fd6b64dd"
            ]
        ]
    },
    {
        "id": "41eb7bb0527ae0d9",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "5265b699c4c5e667",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<style>\n \n    \n    .b {\n        font-weight: bold;\n    }\n    \n    .template-plot-error h4 {\n        font-size: 18px;\n        color: red;\n        text-align: center;\n        margin-bottom: 20px;\n        text-decoration: underline;\n    }\n    \n    .template-initial-plots h3 {\n        font-size: 18px;\n        color: #333;\n        text-align: center;\n    }\n    \n    \n    .button-template {\n        \n        background-color: blue; \n        color: #fff; \n        font-size: 20px;\n        padding: 5px 15px; \n        border: none; \n        border-radius: 15px; \n        cursor: pointer;\n        transition: background-color 0.3s; \n    }\n    \n    \n    .button-template:hover {\n    background-color: #0099CC; \n    color: #0066FF;\n        }\n\n    \n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3000,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "6ec3ba1eb399cd60",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "e42281d9419547e2",
        "name": "humidity stat",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h3>Humidity</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3430,
        "y": 2280,
        "wires": [
            [
                "10e7d09a1212d8f0"
            ]
        ]
    },
    {
        "id": "2771ba2cd5068de2",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "4030566d0fe92597",
        "name": "window stat",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h3>Window</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3430,
        "y": 2640,
        "wires": [
            [
                "a2559b1c8a9ddb1c"
            ]
        ]
    },
    {
        "id": "eb63fa5bfe3aeb6e",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if str(msg['payload']['id']) == '0':\n    if str(msg['payload']['greenHouseID']) == '0':\n        url = 'https://api.thingspeak.com/channels/2091049/feeds.json'\n    \n    elif str(msg['payload']['greenHouseID']) == '1':\n        url = 'https://api.thingspeak.com/channels/2230652/feeds.json?api_key=VLOKPJG3FSDF1NZE'\n    \n    else:\n        data = {\n        'error' : 'GREENHOUSE DOES NOT EXISTS'\n        }\n        msg = {'payload' : data}\n        return msg\n        \n    msg = {'url' : url}\n    return msg\n    \nelif str(msg['payload']['id']) == '1':\n    \n    if str(msg['payload']['greenHouseID']) == '0':\n        url = 'https://api.thingspeak.com/channels/2229831/feeds.json?api_key=HCNVIQY9QQMKTR6D'\n    else:\n        data = {\n        'error' : 'GREENHOUSE DOES NOT EXISTS'\n        }\n        msg = {'payload' : data}\n        return msg    \n    msg = {'url' : url}\n    return msg\n    \nelif str(msg['payload']['id']) == '2':\n\n    url = 'https://api.thingspeak.com/channels/1690401/feeds.json'\n    msg = {'url' : url}\n    return msg\n    \nelse:\n    data = {\n        'error' : 'USER  DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\n\n\"\"\"\nthe other 2 channel id are \n1690401\n2230652\n\n\"\"\"",
        "outputs": 1,
        "x": 4010,
        "y": 1900,
        "wires": [
            [
                "15987275e15e731b",
                "acf76c1f9c99fb40"
            ]
        ]
    },
    {
        "id": "15987275e15e731b",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "5265b699c4c5e667",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-plot-error",
        "x": 4240,
        "y": 1740,
        "wires": [
            [
                "8c89b4ee0f2c7b7d"
            ]
        ]
    },
    {
        "id": "8c89b4ee0f2c7b7d",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "5265b699c4c5e667",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4390,
        "y": 1740,
        "wires": [
            [
                "0811c0e5a9215e25"
            ]
        ]
    },
    {
        "id": "0811c0e5a9215e25",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 4270,
        "y": 1660,
        "wires": [
            [
                "15987275e15e731b"
            ]
        ]
    },
    {
        "id": "8c54400834a54059",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "043782d90857d581",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2490,
        "y": 3260,
        "wires": [
            [
                "d94759ea1f00f306"
            ]
        ]
    },
    {
        "id": "d94759ea1f00f306",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 2410,
        "y": 3320,
        "wires": [
            [
                "ce7604f3d15b71ad"
            ]
        ]
    },
    {
        "id": "eb46be4a72808816",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "3ca67b85ec7cd5f7",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1830,
        "y": 2360,
        "wires": [
            [
                "1533d3613bc73880"
            ]
        ]
    },
    {
        "id": "1533d3613bc73880",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1710,
        "y": 2460,
        "wires": [
            [
                "35d9b699dffc333d"
            ]
        ]
    },
    {
        "id": "a3cfb2efb20ba42c",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "dcebba6522a7ec86",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 2060,
        "wires": [
            [
                "f882a780645dcd3b"
            ]
        ]
    },
    {
        "id": "f882a780645dcd3b",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1990,
        "y": 2180,
        "wires": [
            [
                "56c6f8bcad12b9b2"
            ]
        ]
    },
    {
        "id": "8c4204456f9acc55",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1810,
        "y": 1960,
        "wires": [
            [
                "c95f74b1b678bb24"
            ]
        ]
    },
    {
        "id": "a916e34b00085af5",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "1e1cb426.2b813c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1950,
        "y": 1860,
        "wires": [
            [
                "8c4204456f9acc55"
            ]
        ]
    },
    {
        "id": "3d27f7fc6ed197c1",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1770,
        "y": 1780,
        "wires": [
            [
                "158e5c42d33d467e"
            ]
        ]
    },
    {
        "id": "53f5419d12413089",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "edded25c257e2620",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1870,
        "y": 1700,
        "wires": [
            [
                "3d27f7fc6ed197c1"
            ]
        ]
    },
    {
        "id": "475e866abb88245b",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 2450,
        "y": 1480,
        "wires": [
            [
                "303508492d465b23"
            ]
        ]
    },
    {
        "id": "77ccdec3a088b3db",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "1ad3bf1a8d6e4b4e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2410,
        "y": 1420,
        "wires": [
            [
                "475e866abb88245b"
            ]
        ]
    },
    {
        "id": "7aafb67aa10c2123",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n        'error' : ''\n    }\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1670,
        "y": 1240,
        "wires": [
            [
                "acf07cc5b57363b2"
            ]
        ]
    },
    {
        "id": "aef87be7f695d15b",
        "type": "ui_button",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "703824db.9d74a4",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button-template",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1870,
        "y": 1200,
        "wires": [
            [
                "7aafb67aa10c2123"
            ]
        ]
    },
    {
        "id": "109399fa8936c736",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "0e274ee81497bf82",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "unsubscribe",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 810,
        "y": 720,
        "wires": [
            [
                "82af757ed4e75c1e",
                "b77bc72f78c2613b",
                "22088ad3bc05983d",
                "8661dc6fbaa9996e",
                "3dd078e3683c57d9"
            ]
        ]
    },
    {
        "id": "82af757ed4e75c1e",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'id' : msg['payload']['id'],\n    'greenHouseID': msg['payload']['greenHouseID']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "109399fa8936c736"
            ]
        ]
    },
    {
        "id": "b77bc72f78c2613b",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"unsubscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/humidity\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 1050,
        "y": 720,
        "wires": [
            [
                "cc978f42f967bbd9"
            ]
        ]
    },
    {
        "id": "22088ad3bc05983d",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"unsubscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/temperature\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 1050,
        "y": 920,
        "wires": [
            [
                "47891cc460d6088e"
            ]
        ]
    },
    {
        "id": "a765284c1eb0d4ef",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 7,
        "width": "0",
        "height": "0",
        "format": "<div>\n    <p>Before entering a new user or greenhouse ID, <b>unsubscribe</b> from the previous topic</p>\n    <p>(DO <b>NOT</b> MODIFY THIS FORM)</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-1",
        "x": 680,
        "y": 600,
        "wires": [
            [
                "109399fa8936c736"
            ]
        ]
    },
    {
        "id": "eb22d19182fd2b64",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "5265b699c4c5e667",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <p>Before enter a new user or greenhouse ID, <b>unsubscribe</b> from the previous topic</p>\n    <p>Do <b>not</b> modify the following form</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3440,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "4963a8752fb69d27",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"unsubscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/humidity\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 3890,
        "y": 2160,
        "wires": [
            [
                "4ed2b83c9116b64f"
            ]
        ]
    },
    {
        "id": "29ae8612d318481f",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'id' : msg['payload']['id'],\n    'greenHouseID': msg['payload']['greenHouseID']\n}\n\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 3690,
        "y": 2060,
        "wires": [
            [
                "628128275bd54f54"
            ]
        ]
    },
    {
        "id": "1940d3aee50fa044",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "msg['action'] = \"unsubscribe\"\n# da aggiungere alla fine il sensorType\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/sensors/temperature\"\n\n#msg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 3830,
        "y": 2360,
        "wires": [
            [
                "7a68a5610671c945"
            ]
        ]
    },
    {
        "id": "628128275bd54f54",
        "type": "ui_form",
        "z": "dfa5f5222d797092",
        "name": "",
        "label": "",
        "group": "5265b699c4c5e667",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "User ID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Greenhouse ID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "unsubscribe",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 3530,
        "y": 2160,
        "wires": [
            [
                "1940d3aee50fa044",
                "29ae8612d318481f",
                "4963a8752fb69d27",
                "040b290402537f85",
                "2868a1257bcd1f73",
                "64a1841c66b7767f",
                "cb06e1455d878c0b"
            ]
        ]
    },
    {
        "id": "22c92e9aa466afef",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    'error' : 'USER DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\n    \nelse:\n    data = {\n        'error' : 'USER UPDATED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 2170,
        "y": 1540,
        "wires": [
            [
                "303508492d465b23"
            ]
        ]
    },
    {
        "id": "f111f7d0464ab216",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n    data = {\n    'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    data = {\n        'error' : 'GREENHOUSE UPDATED'\n    }\n    msg = {'payload' : data}\n    return msg",
        "outputs": 1,
        "x": 1690,
        "y": 2160,
        "wires": [
            [
                "56c6f8bcad12b9b2"
            ]
        ]
    },
    {
        "id": "880ed201bf8f0b37",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n\n    data = {\n        'error' : 'STRATEGY CREATED'\n    }\n    msg = {'payload' : data}\n    return msg\n",
        "outputs": 1,
        "x": 3170,
        "y": 3680,
        "wires": [
            [
                "ce7604f3d15b71ad"
            ]
        ]
    },
    {
        "id": "cbbb3ac214d97262",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n\n    data = {\n        'error' : 'STRATEGY UPDATED'\n    }\n    msg = {'payload' : data}\n    return msg\n",
        "outputs": 1,
        "x": 3070,
        "y": 4320,
        "wires": [
            [
                "ce7604f3d15b71ad"
            ]
        ]
    },
    {
        "id": "9ef7c99ce7974f4e",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "if msg['statusCode'] == 400:\n\n    data = {\n        'error' : 'USER OR GREENHOUSE DOES NOT EXISTS'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n\n    data = {\n        'error' : 'STRATEGY DELETED'\n    }\n    msg = {'payload' : data}\n    return msg\n",
        "outputs": 1,
        "x": 3050,
        "y": 3280,
        "wires": [
            [
                "ce7604f3d15b71ad"
            ]
        ]
    },
    {
        "id": "d7b02bac38610136",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1251.6666259765625,
        "y": 1108.333251953125,
        "wires": []
    },
    {
        "id": "1017c561b051c3b6",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = msg['payload']['e']['v']\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "148f517f821a8373",
                "c7c687f2ce435ace"
            ]
        ]
    },
    {
        "id": "d1d7802f3b5f042a",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = msg['payload']['e']['v']\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 1330,
        "y": 980,
        "wires": [
            [
                "e34ee081ad0b1faf",
                "40434672e9959c1e"
            ]
        ]
    },
    {
        "id": "6703cb203533ed13",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = msg['payload']['e']['v']\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 4110,
        "y": 2280,
        "wires": [
            [
                "4fcf25e3cbebd058",
                "c38e815f1659c42b"
            ]
        ]
    },
    {
        "id": "a89313309950da04",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = msg['payload']['e']['v']\nmsg = {'payload' : data}\nreturn msg\n",
        "outputs": 1,
        "x": 3990,
        "y": 2480,
        "wires": [
            [
                "79bcffc3c3f4d807",
                "3bb465c8e8852f0d"
            ]
        ]
    },
    {
        "id": "1613f5a1cd33fc26",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'error' : 'DEVICES NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "2244a2278cf16a30"
            ]
        ]
    },
    {
        "id": "2ec4fe9ba852c631",
        "type": "comment",
        "z": "dfa5f5222d797092",
        "name": "",
        "info": "COME STRA PORCO DIO SI FA A METTERE LA SEZIONE DI ERRORE TRA GREENHOUSE ATTRIBUTES E DEVICES INVECE CHE DIRETTAMENTE SOTTO LA SEZIONE DI ERRORE DI GREENHOUSES?",
        "x": 1640,
        "y": 580,
        "wires": []
    },
    {
        "id": "8661dc6fbaa9996e",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = \"\"\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "148f517f821a8373",
                "e34ee081ad0b1faf",
                "6983386f02f85a7b",
                "690cc002ee0499aa",
                "466352cfe6944085"
            ]
        ]
    },
    {
        "id": "0326532f29ee6b7c",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 420,
        "wires": [
            [
                "72b5d5e5d3bb7240"
            ]
        ]
    },
    {
        "id": "72b5d5e5d3bb7240",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "54a9d42f1566907a",
        "name": "device error",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<h4><span ng-bind=\"msg['payload']['error']\"></span></h4>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-3-error",
        "x": 1750,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e2b23939b74a566c",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "0301ba55f59e74c0",
        "name": "Irrigation stat",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h3>Irrigation</h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 3430,
        "y": 2820,
        "wires": [
            [
                "6ac2e396d52df147"
            ]
        ]
    },
    {
        "id": "77f95c0ece769d59",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/irrigation/#\"\n\nreturn msg",
        "outputs": 1,
        "x": 3910,
        "y": 3220,
        "wires": [
            [
                "14e3e0a4d2a2c6a9"
            ]
        ]
    },
    {
        "id": "14e3e0a4d2a2c6a9",
        "type": "mqtt in",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 4150,
        "y": 3220,
        "wires": [
            [
                "d0fb4b8a40e5e369"
            ]
        ]
    },
    {
        "id": "5e74bf960214efee",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "func": "msg['action'] = \"unsubscribe\"\n\nmsg['topic']= \"IoT_project_29/\"+str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/irrigation/#\"\n\nreturn msg",
        "outputs": 1,
        "x": 3910,
        "y": 3140,
        "wires": [
            [
                "14e3e0a4d2a2c6a9"
            ]
        ]
    },
    {
        "id": "1a6b7e3c.bfac97",
        "type": "inject",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"bn\":\"irrigation\",\"e\":{\"t\":1692025640.6563697,\"v\":10}}",
        "payloadType": "json",
        "x": 4210,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "c8df3c93.539ad8",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4170,
        "y": 3140,
        "wires": []
    },
    {
        "id": "d0fb4b8a40e5e369",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "func": "import json\nfrom datetime import datetime\n\ntimestamp = msg['payload']['e']['t']\n\ndt_object = datetime.fromtimestamp(timestamp)\nformatted_time = dt_object.strftime('%H:%M')\n\noutput = [{\n    \"series\": [formatted_time],\n    \"data\": [[ msg['payload']['e']['v']\n    ]],\n    \"labels\": [formatted_time]\n}]\n\nmsg['payload'] = output\nreturn msg\n\n\n",
        "outputs": 1,
        "x": 4410,
        "y": 3220,
        "wires": [
            [
                "c8df3c93.539ad8",
                "680e406ad5dd551a"
            ]
        ]
    },
    {
        "id": "040b290402537f85",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = \"\"\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 3970,
        "y": 2080,
        "wires": [
            [
                "4fcf25e3cbebd058",
                "79bcffc3c3f4d807"
            ]
        ]
    },
    {
        "id": "2868a1257bcd1f73",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'state' : \"\"\n    }\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 4030,
        "y": 2560,
        "wires": [
            [
                "fb67db7845167187"
            ]
        ]
    },
    {
        "id": "3dd078e3683c57d9",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = {\n    'state' : \"\"\n    }\nmsg = {'payload' : data}\nreturn msg",
        "outputs": 1,
        "x": 1470,
        "y": 1100,
        "wires": [
            [
                "8462fce415534226"
            ]
        ]
    },
    {
        "id": "64a1841c66b7767f",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\nimport time\n\noutput = [{\n\"series\": [\"\"],\n\"data\": [[ {\"x\": \"\", \"y\": \"\"}]],\n\"labels\": [\"\"]\n}]\n\nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 4250,
        "y": 1960,
        "wires": [
            [
                "b68ad7b4f19ef12a",
                "8de0f6912b124cdc",
                "b7ce0e02612a7da3",
                "30a7907c24027e28"
            ]
        ]
    },
    {
        "id": "8c17df97385649aa",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4590,
        "y": 1660,
        "wires": []
    },
    {
        "id": "6ac2e396d52df147",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])+ \"&strategyType=irrigation\"\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 3710,
        "y": 3000,
        "wires": [
            [
                "7c084bcb91a98a12"
            ]
        ]
    },
    {
        "id": "7c084bcb91a98a12",
        "type": "http request",
        "z": "dfa5f5222d797092",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/strategy{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3950,
        "y": 3000,
        "wires": [
            [
                "07d7caf83df56dd3"
            ]
        ]
    },
    {
        "id": "07d7caf83df56dd3",
        "type": "json",
        "z": "dfa5f5222d797092",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4130,
        "y": 3000,
        "wires": [
            [
                "dc8c63fa04bed6b7"
            ]
        ]
    },
    {
        "id": "fe141fd5651659ac",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4720,
        "y": 3000,
        "wires": []
    },
    {
        "id": "dc8c63fa04bed6b7",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "total_water = 0\n\nfor strat in msg['payload']['strat']:\n    if strat['active'] == True:\n        total_water += strat['water_quantity']\n\ndata = {\n    'water_quantity' : total_water\n}\n\nmsg['payload'] = data\nreturn msg\n",
        "outputs": 1,
        "x": 4310,
        "y": 3000,
        "wires": [
            [
                "e76523a35fc2feb0"
            ]
        ]
    },
    {
        "id": "e76523a35fc2feb0",
        "type": "ui_template",
        "z": "dfa5f5222d797092",
        "group": "0301ba55f59e74c0",
        "name": "Irrigation stat",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<p>Daily amount of water (L): <strong><span ng-bind=\"msg['payload']['water_quantity']\"></span></strong></p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "template-initial-plots",
        "x": 4510,
        "y": 3000,
        "wires": [
            [
                "fe141fd5651659ac"
            ]
        ]
    },
    {
        "id": "cb06e1455d878c0b",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "data = \"\"\nmsg['payload'] = {'water_quantity' : data}\nreturn msg",
        "outputs": 1,
        "x": 4240,
        "y": 2933.666748046875,
        "wires": [
            [
                "e76523a35fc2feb0"
            ]
        ]
    },
    {
        "id": "ef284fd4d17b62c8",
        "type": "debug",
        "z": "dfa5f5222d797092",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 2160,
        "wires": []
    },
    {
        "id": "5667582e57cbb879",
        "type": "python3-function",
        "z": "dfa5f5222d797092",
        "name": "",
        "func": "import json\nimport time\n\n\noutput = [{\n\"series\": [\"Irrigation\"],\n\"data\": [[]],\n\"labels\": [\"Irrigation\"]\n}]\n\nfor feed in msg['payload']['feeds']:\n    \n    if feed['field4'] is not None:\n        date_obj = time.strptime(feed['created_at'] , \"%Y-%m-%dT%H:%M:%SZ\")\n        \n        data_h = {\"x\": time.mktime(date_obj)*1000, \"y\": feed['field4']}\n        \n        output[0]['data'][0].append(data_h)\n\nmsg['payload'] = output\nreturn msg",
        "outputs": 1,
        "x": 4610,
        "y": 2200,
        "wires": [
            [
                "ef284fd4d17b62c8",
                "30a7907c24027e28"
            ]
        ]
    },
    {
        "id": "30a7907c24027e28",
        "type": "ui_chart",
        "z": "dfa5f5222d797092",
        "name": "",
        "group": "0301ba55f59e74c0",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4890,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "680e406ad5dd551a",
        "type": "ui_chart",
        "z": "dfa5f5222d797092",
        "d": true,
        "name": "",
        "group": "0301ba55f59e74c0",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Water quantity (L)",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#20cf20",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4410,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "1a53a8f34e77244d",
        "type": "inject",
        "z": "38de44c016649ef6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "8fe27390612654c4"
            ]
        ]
    },
    {
        "id": "8fe27390612654c4",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div>\n   \n    <p>Welcome this is the home page</p> \n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "c4cfee8f4483ac97"
            ]
        ]
    },
    {
        "id": "c4cfee8f4483ac97",
        "type": "ui_form",
        "z": "38de44c016649ef6",
        "name": "",
        "label": "",
        "group": "0e274ee81497bf82",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouseID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "82fa74cd872353c9",
                "137f69bc434c0b2c",
                "7ddab4ac3308f6e7",
                "93ab70ef44600880",
                "939d0374c029f77d"
            ]
        ]
    },
    {
        "id": "82fa74cd872353c9",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "3f211433a12b4c70",
                "6690a06f4f776ba1"
            ]
        ]
    },
    {
        "id": "3f211433a12b4c70",
        "type": "http request",
        "z": "38de44c016649ef6",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/device_connectors{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "1711eca694663d4c"
            ]
        ]
    },
    {
        "id": "0bee9155c6991402",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<p>Device associated: </p>\n<p>\"<span ng-bind=\"msg['payload']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1320,
        "y": 560,
        "wires": [
            [
                "9aae90d1dcef6417"
            ]
        ]
    },
    {
        "id": "9aae90d1dcef6417",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 560,
        "wires": []
    },
    {
        "id": "137f69bc434c0b2c",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "503d7b485f8c3dd6"
            ]
        ]
    },
    {
        "id": "503d7b485f8c3dd6",
        "type": "http request",
        "z": "38de44c016649ef6",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 120,
        "wires": [
            [
                "5a0d67669280a6ab"
            ]
        ]
    },
    {
        "id": "18fbb25a265afeed",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<p>The user attributes are: </p>\n<p>Username: \"<span ng-bind=\"msg['payload']['userName']\"></span>\"</p>\n<p>Name: \"<span ng-bind=\"msg['payload']['name']\"></span>\"</p>\n<p>Surname: \"<span ng-bind=\"msg['payload']['surname']\"></span>\"</p>\n<p>Email: \"<span ng-bind=\"msg['payload']['email_addresses']\"></span>\"</p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 120,
        "wires": [
            [
                "2e5553557b3c414c"
            ]
        ]
    },
    {
        "id": "2e5553557b3c414c",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 120,
        "wires": []
    },
    {
        "id": "2ea90d6aa98c5856",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "18fbb25a265afeed",
                "c8656332fc49d0f4"
            ]
        ]
    },
    {
        "id": "1711eca694663d4c",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 560,
        "wires": [
            [
                "0bee9155c6991402"
            ]
        ]
    },
    {
        "id": "6690a06f4f776ba1",
        "type": "http request",
        "z": "38de44c016649ef6",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.104:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 970,
        "y": 380,
        "wires": [
            [
                "5ba54c61d9f2c906"
            ]
        ]
    },
    {
        "id": "d0bdc1a63eeb47b0",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 380,
        "wires": []
    },
    {
        "id": "b136c7cbbae7ea12",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 380,
        "wires": [
            [
                "6b9fcda6ef26aa7e",
                "04fec0fb7c692ee0"
            ]
        ]
    },
    {
        "id": "8bdf1839bf1aabdd",
        "type": "mqtt in",
        "z": "38de44c016649ef6",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 920,
        "wires": [
            [
                "b2410bd75b1cbbba"
            ]
        ]
    },
    {
        "id": "93ab70ef44600880",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/temperature\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/temperature\"\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 920,
        "wires": [
            [
                "8bdf1839bf1aabdd"
            ]
        ]
    },
    {
        "id": "1661f10f62f67f9d",
        "type": "ui_gauge",
        "z": "38de44c016649ef6",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1350,
        "y": 920,
        "wires": []
    },
    {
        "id": "16af27e1b5259a07",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 980,
        "wires": []
    },
    {
        "id": "b2410bd75b1cbbba",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 920,
        "wires": [
            [
                "16af27e1b5259a07",
                "1661f10f62f67f9d"
            ]
        ]
    },
    {
        "id": "4cac26191936984d",
        "type": "mqtt in",
        "z": "38de44c016649ef6",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 740,
        "wires": [
            [
                "90728764a54f22db"
            ]
        ]
    },
    {
        "id": "7ddab4ac3308f6e7",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/humidity\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 740,
        "wires": [
            [
                "4cac26191936984d"
            ]
        ]
    },
    {
        "id": "4508b1fe25126629",
        "type": "ui_gauge",
        "z": "38de44c016649ef6",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "30",
        "max": "80",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1340,
        "y": 740,
        "wires": []
    },
    {
        "id": "31ac206669f9ef25",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 800,
        "wires": []
    },
    {
        "id": "90728764a54f22db",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 740,
        "wires": [
            [
                "31ac206669f9ef25",
                "4508b1fe25126629"
            ]
        ]
    },
    {
        "id": "5a0d67669280a6ab",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'userName' : \"\",\n        'name' : \"\",\n        'surname' : \"\",\n        'email_addresses' : \"\",\n        'error' : 'USER NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "2ea90d6aa98c5856"
            ]
        ]
    },
    {
        "id": "6b9fcda6ef26aa7e",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<p>The user attributes are: </p>\n<p>GreenHouse Name: \"<span ng-bind=\"msg['payload']['greenHouseName']\"></span>\"</p>\n<p>City: \"<span ng-bind=\"msg['payload']['city']\"></span>\"</p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 380,
        "wires": [
            [
                "d0bdc1a63eeb47b0"
            ]
        ]
    },
    {
        "id": "c8656332fc49d0f4",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 20,
        "wires": [
            [
                "22ce429be3d1cd0a"
            ]
        ]
    },
    {
        "id": "5ba54c61d9f2c906",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'greenHouseName' : \"\",\n        'city' : \"\",\n        'error' : 'GREENHOUSE NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 380,
        "wires": [
            [
                "b136c7cbbae7ea12"
            ]
        ]
    },
    {
        "id": "04fec0fb7c692ee0",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 280,
        "wires": [
            [
                "af77992c38d5a74b"
            ]
        ]
    },
    {
        "id": "22ce429be3d1cd0a",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<p><span ng-bind=\"msg['payload']['error']\"></span></p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "af77992c38d5a74b",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<p><span ng-bind=\"msg['payload']['error']\"></span></p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "71dcde29c711a414",
        "type": "mqtt in",
        "z": "38de44c016649ef6",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "ad4a690c27fda009"
            ]
        ]
    },
    {
        "id": "939d0374c029f77d",
        "type": "python3-function",
        "z": "38de44c016649ef6",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/\"\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "71dcde29c711a414"
            ]
        ]
    },
    {
        "id": "ad4a690c27fda009",
        "type": "json",
        "z": "38de44c016649ef6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 1100,
        "wires": [
            [
                "4f0a6625810e437a"
            ]
        ]
    },
    {
        "id": "4f0a6625810e437a",
        "type": "ui_template",
        "z": "38de44c016649ef6",
        "group": "bb7721423ea2a939",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<p>The window is: \"<span ng-bind=\"msg['payload']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1500,
        "y": 1100,
        "wires": [
            [
                "da41aa360863ab94"
            ]
        ]
    },
    {
        "id": "da41aa360863ab94",
        "type": "debug",
        "z": "38de44c016649ef6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4cde8968375872b3",
        "type": "comment",
        "z": "38de44c016649ef6",
        "name": "",
        "info": "Trasformare il valore in On/Off",
        "x": 1320,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0c2a85abe3f68ae3",
        "type": "inject",
        "z": "5bef06aa09334957",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "f2013bee11fc222f"
            ]
        ]
    },
    {
        "id": "f2013bee11fc222f",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "0e274ee81497bf82",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" type=\"text/css\" href=\"/custom.css\">\n<div>\n   \n    <h1>Welcome to the<br> home page!</h1> \n    <p>Insert an user ID and greenhouse ID to receive information and statistics about them</p>\n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "f8d623d75f2cebec"
            ]
        ]
    },
    {
        "id": "f8d623d75f2cebec",
        "type": "ui_form",
        "z": "5bef06aa09334957",
        "name": "",
        "label": "",
        "group": "0e274ee81497bf82",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "userID",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "greenhouseID",
                "value": "greenHouseID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "greenHouseID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "9cfe83ce14b29775",
                "5bd057714ac3fd43",
                "f9f3b56599d0c02c",
                "ea9257a6d391aa9a",
                "a2f942fff6985f85"
            ]
        ]
    },
    {
        "id": "9cfe83ce14b29775",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])+\"&greenHouseID=\"+ str(msg['payload']['greenHouseID'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "9d3bd6c55a14893b",
                "e2696ffb56fdc99f"
            ]
        ]
    },
    {
        "id": "9d3bd6c55a14893b",
        "type": "http request",
        "z": "5bef06aa09334957",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/device_connectors{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 560,
        "wires": [
            [
                "a6576676b869f3e0"
            ]
        ]
    },
    {
        "id": "08a12d660d523573",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 20,
        "width": 0,
        "height": 0,
        "format": "<p>Device associated: </p>\n<p>\"<span ng-bind=\"msg['payload']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1320,
        "y": 560,
        "wires": [
            [
                "b286686c1704af76"
            ]
        ]
    },
    {
        "id": "b286686c1704af76",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 560,
        "wires": []
    },
    {
        "id": "5bd057714ac3fd43",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "query = \"?id=\"+str(msg['payload']['id'])\n\nmsg = {'query': query}\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "c31f04039cdb920b"
            ]
        ]
    },
    {
        "id": "c31f04039cdb920b",
        "type": "http request",
        "z": "5bef06aa09334957",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/user{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 120,
        "wires": [
            [
                "1535bdd1a98e1978"
            ]
        ]
    },
    {
        "id": "28eaddebd6278e07",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<p>The user attributes are: </p>\n<p>Username: \"<span ng-bind=\"msg['payload']['userName']\"></span>\"</p>\n<p>Name: \"<span ng-bind=\"msg['payload']['name']\"></span>\"</p>\n<p>Surname: \"<span ng-bind=\"msg['payload']['surname']\"></span>\"</p>\n<p>Email: \"<span ng-bind=\"msg['payload']['email_addresses']\"></span>\"</p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 120,
        "wires": [
            [
                "742e9932df7295a4"
            ]
        ]
    },
    {
        "id": "742e9932df7295a4",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 120,
        "wires": []
    },
    {
        "id": "7dbb01c924982c67",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "28eaddebd6278e07",
                "c8ec12cb144713d0"
            ]
        ]
    },
    {
        "id": "a6576676b869f3e0",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 560,
        "wires": [
            [
                "08a12d660d523573"
            ]
        ]
    },
    {
        "id": "e2696ffb56fdc99f",
        "type": "http request",
        "z": "5bef06aa09334957",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://resource_catalog:8080/greenhouse{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 380,
        "wires": [
            [
                "f2db9d804fb03593"
            ]
        ]
    },
    {
        "id": "ed83673e947826ce",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 380,
        "wires": []
    },
    {
        "id": "6189ae97852e24f6",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 380,
        "wires": [
            [
                "c72ab624706d6210",
                "484c7fd3f31fb568"
            ]
        ]
    },
    {
        "id": "f7f71fc4567048ec",
        "type": "mqtt in",
        "z": "5bef06aa09334957",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 920,
        "wires": [
            [
                "952b2e8fea606731"
            ]
        ]
    },
    {
        "id": "ea9257a6d391aa9a",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/temperature\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/temperature\"\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 920,
        "wires": [
            [
                "f7f71fc4567048ec"
            ]
        ]
    },
    {
        "id": "cac7ec01d57f6909",
        "type": "ui_gauge",
        "z": "5bef06aa09334957",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Temperature",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "15",
        "max": "35",
        "colors": [
            "#005cb3",
            "#04e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1350,
        "y": 920,
        "wires": []
    },
    {
        "id": "adbce875bee0f9c3",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 980,
        "wires": []
    },
    {
        "id": "952b2e8fea606731",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 920,
        "wires": [
            [
                "adbce875bee0f9c3",
                "cac7ec01d57f6909"
            ]
        ]
    },
    {
        "id": "9774c16eee8c9869",
        "type": "mqtt in",
        "z": "5bef06aa09334957",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 740,
        "wires": [
            [
                "4c7e7e02b8c6c4ba"
            ]
        ]
    },
    {
        "id": "f9f3b56599d0c02c",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/humidity\"\n\nmsg['topic'] = \"IoT_project/group29/greenhouse1/humidity\"\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 740,
        "wires": [
            [
                "9774c16eee8c9869"
            ]
        ]
    },
    {
        "id": "6520454293646e92",
        "type": "ui_gauge",
        "z": "5bef06aa09334957",
        "name": "",
        "group": "bb7721423ea2a939",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Humidity",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "30",
        "max": "80",
        "colors": [
            "#0044b3",
            "#26e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1340,
        "y": 740,
        "wires": []
    },
    {
        "id": "cf90cff0ef1c0e61",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 800,
        "wires": []
    },
    {
        "id": "4c7e7e02b8c6c4ba",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 740,
        "wires": [
            [
                "cf90cff0ef1c0e61",
                "6520454293646e92"
            ]
        ]
    },
    {
        "id": "1535bdd1a98e1978",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'userName' : \"\",\n        'name' : \"\",\n        'surname' : \"\",\n        'email_addresses' : \"\",\n        'error' : 'USER NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "7dbb01c924982c67"
            ]
        ]
    },
    {
        "id": "c72ab624706d6210",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "<p>The user attributes are: </p>\n<p>GreenHouse Name: \"<span ng-bind=\"msg['payload']['greenHouseName']\"></span>\"</p>\n<p>City: \"<span ng-bind=\"msg['payload']['city']\"></span>\"</p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 380,
        "wires": [
            [
                "ed83673e947826ce"
            ]
        ]
    },
    {
        "id": "c8ec12cb144713d0",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 20,
        "wires": [
            [
                "777137dcbb942b79"
            ]
        ]
    },
    {
        "id": "f2db9d804fb03593",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "\nif msg['statusCode'] == 400:\n    data = {\n        'greenHouseName' : \"\",\n        'city' : \"\",\n        'error' : 'GREENHOUSE NOT FOUND'\n    }\n    msg = {'payload' : data}\n    return msg\nelse:\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 380,
        "wires": [
            [
                "6189ae97852e24f6"
            ]
        ]
    },
    {
        "id": "484c7fd3f31fb568",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 280,
        "wires": [
            [
                "a1151b77e5848dad"
            ]
        ]
    },
    {
        "id": "777137dcbb942b79",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<p><span ng-bind=\"msg['payload']['error']\"></span></p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "a1151b77e5848dad",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "54a9d42f1566907a",
        "name": "",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<p><span ng-bind=\"msg['payload']['error']\"></span></p>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "0ecfbd157fbff519",
        "type": "mqtt in",
        "z": "5bef06aa09334957",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "a6d151784d60722d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "e2323bf1e2bc35d7"
            ]
        ]
    },
    {
        "id": "a2f942fff6985f85",
        "type": "python3-function",
        "z": "5bef06aa09334957",
        "name": "",
        "func": "msg['action'] = \"subscribe\"\n# da aggiungere alla fine il sensorType\n#msg['topic']= str(msg['payload']['id'])+\"/\"+str(msg['payload']['greenHouseID'])+\"/environment/\"\n\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "0ecfbd157fbff519"
            ]
        ]
    },
    {
        "id": "e2323bf1e2bc35d7",
        "type": "json",
        "z": "5bef06aa09334957",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 1100,
        "wires": [
            [
                "2c8d61b381c1d6b0"
            ]
        ]
    },
    {
        "id": "2c8d61b381c1d6b0",
        "type": "ui_template",
        "z": "5bef06aa09334957",
        "group": "bb7721423ea2a939",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<p>The window is: \"<span ng-bind=\"msg['payload']\"></span>\"</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1500,
        "y": 1100,
        "wires": [
            [
                "a6c1f29d10e3c374"
            ]
        ]
    },
    {
        "id": "a6c1f29d10e3c374",
        "type": "debug",
        "z": "5bef06aa09334957",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c44bd1d0765e6661",
        "type": "comment",
        "z": "5bef06aa09334957",
        "name": "",
        "info": "Trasformare il valore in On/Off",
        "x": 1320,
        "y": 1080,
        "wires": []
    }
]